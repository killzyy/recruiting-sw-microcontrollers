ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32c0xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c"
  18              		.section	.text.LL_ADC_SetAnalogWDMonitChannels,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	LL_ADC_SetAnalogWDMonitChannels:
  25              	.LVL0:
  26              	.LFB262:
  27              		.file 2 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h"
   1:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
   2:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @file    stm32c0xx_ll_adc.h
   4:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
   9:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * Copyright (c) 2022 STMicroelectronics.
  10:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
  12:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
  16:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
  18:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  19:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #ifndef STM32C0xx_LL_ADC_H
  21:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define STM32C0xx_LL_ADC_H
  22:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  23:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #endif
  26:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  27:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #include "stm32c0xx.h"
  29:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  30:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @addtogroup STM32C0xx_LL_Driver
  31:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 2


  32:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
  33:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  34:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  36:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
  38:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
  39:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  40:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  43:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
  46:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
  47:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  48:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  51:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  52:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  53:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  54:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  55:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  56:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_SQ1" positi
  57:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_SQ2" positi
  58:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_SQ3" positi
  59:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_CHSELR_SQ4" positi
  60:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Equivalent to bitfield "ADC_CHSELR_SQ5" positi
  61:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_CHSELR_SQ6" positi
  62:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_CHSELR_SQ7" positi
  63:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Equivalent to bitfield "ADC_CHSELR_SQ8" positi
  64:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  65:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  66:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  67:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  68:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - regular trigger source                                                   */
  69:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  70:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge (
  71:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
  72:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                   having this setting set by HW def
  73:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  74:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  75:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  76:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  77:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U *
  78:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  79:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  80:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_CFGR1_EXTSEL)                            << (4U *
  81:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  82:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  83:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  84:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  85:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U * 
  86:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  87:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
  88:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 3


  89:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  90:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  91:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR1_EXTSEL" posi
  92:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR1_EXTEN" posit
  93:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  94:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
  95:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  96:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  97:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
  98:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
  99:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ADC_CHANNEL_ID_NUMBER_MASK with reduced range: on this STM32 series, ADC group regular sequencer,
 105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   if set to mode "fully configurable", can contain channels with a restricted channel number.
 106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   Refer to function @ref LL_ADC_REG_SetSequencerConfigurable(). */
 107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)              /* Equivalent to bitfield "ADC_CHAN
 108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    position in register */
 109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* channels literals definition.                                              */
 121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR1_AWD1CH_0)
 123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR1_AWD1CH_1)
 124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR1_AWD1CH_2)
 126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_0)
 127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1)
 128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR1_AWD1CH_3)
 130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_0)
 131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1)
 132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2)
 134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | \
 137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4)
 139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_0)
 140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1)
 141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_19_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_20_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_2 )
 144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_21_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_22_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 4


 146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* channels literals definition.                                              */
 149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_19_BITFIELD            (ADC_CHSELR_CHSEL19)
 169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_20_BITFIELD            (ADC_CHSELR_CHSEL20)
 170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_21_BITFIELD            (ADC_CHSELR_CHSEL21)
 171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHANNEL_22_BITFIELD            (ADC_CHSELR_CHSEL22)
 172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* the relevant bits for:                                                     */
 176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   common sampling time available.                                          */
 181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 series)).         */
 189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*   selection on groups.                                                     */
 193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 5


 203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                                threshold high: mask
 223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                                threshold high: posi
 225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                                position to perform 
 227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* ADC registers bits positions */
 231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Equivalent to bitfield "ADC_CFGR1_RES" positio
 232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR1_AWDSGL" posi
 233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL0" pos
 235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL1" pos
 236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL2" pos
 237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL3" pos
 238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL4" pos
 239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL5" pos
 240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL6" pos
 241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL7" pos
 242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL8" pos
 243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL9" pos
 244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL10" po
 245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL11" po
 246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL12" po
 247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL13" po
 248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL14" po
 249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL15" po
 250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL16" po
 251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL17" po
 252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL18" po
 253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL19_BITOFFSET_POS   (19UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL19" po
 254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL20_BITOFFSET_POS   (20UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL20" po
 255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL21_BITOFFSET_POS   (21UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL21" po
 256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL22_BITOFFSET_POS   (22UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL22" po
 257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Equivalent to bitfield "ADC_SMPR_SMP1" positio
 258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Equivalent to bitfield "ADC_SMPR_SMP2" positio
 259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Equivalent to bitfield "ADC_SMPR_SMPSEL0" posi
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 6


 260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* ADC registers bits groups */
 263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART \
 264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CR_ADDIS | ADC_CR_ADEN) /* ADC register CR bits w
 265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            "rs": Software can read as well as set this bit. Writing
 266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            on the bit value. */
 267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* ADC internal channels related definitions */
 270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF756AUL)) /* Internal voltage referen
 272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            parameter VREFINT_CAL: VrefInt ADC raw data acquired at 
 273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            voltage with which VrefInt has been calibrated in produc
 276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Temperature sensor */
 278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: On all devices of series STM32C0, calibration parameter TS_CAL2 is not available.
 279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          Therefore, macro "__LL_ADC_CALC_TEMPERATURE()" is not available,
 280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          macro "__LL_ADC_CALC_TEMPERATURE_TYP_PARAMS()" must be used and parameter TS_CAL1 can impr
 281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          replace datasheet parameter of temperature offset (macro argument __TEMPSENSOR_TYP_CALX_V_
 282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          by TEMPSENSOR_CAL1_ADDR
 283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          (with taking into account conversion from digital value resolution 12 bit, analog voltage 
 284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          between calibration and application environments) */
 285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF7568UL)) /* Internal temperature sen
 286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            parameter TS_CAL1: On STM32C0, temperature sensor ADC ra
 287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            temperature  30 DegC (tolerance: +-5 DegC), Vref+ = 3.0 
 288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (tolerance: +-10 mV). */
 289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Internal temperature sen
 290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            which temperature sensor has been calibrated in producti
 291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            TEMPSENSOR_CAL1_ADDR (tolerance: +-5 DegC) (unit: DegC).
 292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3000UL)                    /* Analog voltage reference
 293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with which temperature sensor has been calibrated in pro
 294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a register from a register basis from which an offset
 309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is applied.
 310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Pointer to register address
 313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 7


 317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and multimode
 331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sharing the same ADC common instance):
 335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         disabled.
 337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** typedef struct
 339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is conditioned to ADC state:
 354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance must be disabled.
 355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         refer to description of each function for setting
 363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         conditioned to ADC state.
 364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** typedef struct
 366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             @note On this STM32 series, this parameter has some clo
 370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   ADC clock synchronous (from PCLK) with prescaler 
 371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   only if PCLK has a 50% duty clock cycle (APB pres
 372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   inside the RCC must be bypassed and the system cl
 373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   cycle).
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 8


 374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetClock().
 376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (functions with prefix "REG").
 401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is conditioned to ADC state:
 403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance must be disabled.
 404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         refer to description of each function for setting
 412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         conditioned to ADC state.
 413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** typedef struct
 415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    with some ADC on other STM32 series having this 
 422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    default value).
 423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetTriggerSource(). */
 427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                     to mode "fully configurable". Refer to function
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 9


 431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                     @ref LL_ADC_REG_SetSequencerConfigurable().
 432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerLength(). */
 435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    enabled (depending on the sequencer mode: scan l
 441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    more, or several ADC channels enabled in group r
 442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    Refer to function @ref LL_ADC_REG_SetSequencerCo
 443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              successively automatically).
 450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    and discontinuous mode.
 453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              data preserved or overwritten.
 464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            conversion */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 10


 488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            conversions */
 490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    conversion */
 508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    conversions */
 510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    phase */
 513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* DMA transfer.                                                              */
 526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)      /* ADC group regular conversion data
 528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (corresponding to register DR) to be used with ADC confi
 529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            mode. Without DMA transfer, register accessed by LL func
 530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadConversionData32() and other
 531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            functions @ref LL_ADC_REG_ReadConversionDatax() */
 532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler */
 541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 2. Setting common to ADC instances
 543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 11


 545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
 546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 4. Setting common to ADC instances
 547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each  instance clock
 548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 6. Setting common to ADC instances
 551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 8. Setting common to ADC instances
 555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 10. Setting common to ADC instance
 559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 12. Setting common to ADC instance
 563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 16. Setting common to ADC instance
 568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 32. Setting common to ADC instance
 572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 64. Setting common to ADC instance
 576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 128. Setting common to ADC instanc
 580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler division by 256. Setting common to ADC instanc
 585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            group, applied ADC instance wise to each instance clock 
 586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            asynchronous (refer to function @ref LL_ADC_SetClock() )
 587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)     /*!< ADC measurement paths all disabl
 600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)   /*!< ADC measurement path to internal
 601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)     /*!< ADC measurement path to internal
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 12


 602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    temperature sensor */
 603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1) /*!< ADC synchronous clock derived 
 611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            divided by 4 */
 612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0) /*!< ADC synchronous clock derived 
 613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            divided by 2 */
 614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 \
 615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR2_CKMODE_0) /*!< ADC synchronous clock derive
 616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            not divided */
 617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)       /*!< ADC asynchronous clock. Asynch
 618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            prescaler can be configured using function @ref LL_ADC_S
 619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (alignment on data register LSB bit 0)*/
 639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)  /*!< ADC conversion data alignment: l
 640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (alignment on data register MSB bit 15)*/
 641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)   /*!< ADC low power mode auto delay: D
 650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            mode, ADC conversions are performed only when necessary
 651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (when previous ADC conversion data is read).
 652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            See description with function @ref LL_ADC_SetLowPowerMod
 653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF) /*!< ADC low power mode auto power-of
 654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            automatically powers-off after a ADC conversion and auto
 655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            when a new ADC conversion is triggered (with startup tim
 656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            and start of sampling). See description with function
 657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_SetLowPowerMode(). */
 658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 13


 659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** and auto power-off combined. See description with function @ref LL_ADC_SetLowPowerMode(). */
 660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)     /*!< ADC trigger frequency mode set t
 668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Note: ADC trigger frequency mode must be set to low freq
 669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            is exceeded before ADC conversion start trigger event (b
 670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            and ADC conversion start trigger event or between two AD
 671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger event).
 672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Duration value: Refer to device datasheet, parameter "tI
 673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG) /*!< ADC trigger frequency mode set t
 674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Note: ADC trigger frequency mode must be set to low freq
 675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            is exceeded before ADC conversion start trigger event (b
 676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            and ADC conversion start trigger event or between two AD
 677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger event).
 678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Duration value: Refer to device datasheet, parameter "tI
 679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_FREQ_MODE  ADC common - Clock frequency mode
 684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_HIGH        LL_ADC_TRIGGER_FREQ_HIGH   /*!< LL ADC define maintained
 687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_LOW         LL_ADC_TRIGGER_FREQ_LOW    /*!< LL ADC define maintained
 688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS) /*!< Set sampling time com
 696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of channels: sampling time nb 1 */
 697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS \
 698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SAMPLING_TIME_CH_MASK)  /*!< Set sampling time co
 699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of channels: sampling time nb 2 */
 700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER \
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 14


 716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_0_BITFIELD ) /*!< ADC channel ADCx_IN0  *
 717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER \
 718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_1_BITFIELD ) /*!< ADC channel ADCx_IN1  *
 719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER \
 720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_2_BITFIELD ) /*!< ADC channel ADCx_IN2  *
 721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER \
 722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_3_BITFIELD ) /*!< ADC channel ADCx_IN3  *
 723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER \
 724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_4_BITFIELD ) /*!< ADC channel ADCx_IN4  *
 725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER \
 726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_5_BITFIELD ) /*!< ADC channel ADCx_IN5  *
 727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER \
 728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_6_BITFIELD ) /*!< ADC channel ADCx_IN6  *
 729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER \
 730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_7_BITFIELD ) /*!< ADC channel ADCx_IN7  *
 731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER \
 732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_8_BITFIELD ) /*!< ADC channel ADCx_IN8  *
 733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER \
 734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_9_BITFIELD ) /*!< ADC channel ADCx_IN9  *
 735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER \
 736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_10_BITFIELD) /*!< ADC channel ADCx_IN10 *
 737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER \
 738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_11_BITFIELD) /*!< ADC channel ADCx_IN11 *
 739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER \
 740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_12_BITFIELD) /*!< ADC channel ADCx_IN12 *
 741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER \
 742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_13_BITFIELD) /*!< ADC channel ADCx_IN13 *
 743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER \
 744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_14_BITFIELD) /*!< ADC channel ADCx_IN14 *
 745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER \
 746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_15_BITFIELD) /*!< ADC channel ADCx_IN15 *
 747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER \
 748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_16_BITFIELD) /*!< ADC channel ADCx_IN16 *
 749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER \
 750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_17_BITFIELD) /*!< ADC channel ADCx_IN17 *
 751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER \
 752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_18_BITFIELD) /*!< ADC channel ADCx_IN18 *
 753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_19                  (ADC_CHANNEL_19_NUMBER \
 754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_19_BITFIELD) /*!< ADC channel ADCx_IN19 *
 755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_20                  (ADC_CHANNEL_20_NUMBER \
 756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_20_BITFIELD) /*!< ADC channel ADCx_IN20 *
 757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_21                  (ADC_CHANNEL_21_NUMBER \
 758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_21_BITFIELD) /*!< ADC channel ADCx_IN21 *
 759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_22                  (ADC_CHANNEL_22_NUMBER \
 760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CHANNEL_22_BITFIELD) /*!< ADC channel ADCx_IN22 *
 761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_10 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference. */
 763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_9 | ADC_CHANNEL_ID_INTERNAL_CH)   /*!< A
 764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            connected to Temperature sensor. */
 765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VDDA                (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            connected to VDDA. */
 767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VSSA                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            connected to VSSA. */
 769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 15


 773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE         (0x00000000UL) /*!< ADC group regular conversion trigger i
 777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2   (ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!< ADC group regular con
 778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          from external peripheral: TIM1 TRGO.
 779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4     (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!< 
 781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          conversion trigger from external peripheral:
 782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          TIM1 channel 4 event (capture compare: input capture or ou
 783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #if defined(TIM2)
 785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO    (ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!< 
 786:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          conversion trigger from external peripheral: TIM2 TRGO.
 787:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 788:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #endif /* TIM2 */
 789:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO    (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 \
 790:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!< ADC group regular c
 791:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          from external peripheral: TIM3 TRGO.
 792:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 793:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11  (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 \
 794:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT) /*!
 795:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          conversion trigger from external peripheral: external inte
 796:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          Trigger edge set to rising edge (default setting). */
 797:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 798:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 799:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 800:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 801:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 802:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 803:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 804:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR1_EXTEN_0)                     /*!< ADC group r
 805:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger polarity set to rising edge */
 806:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1)                     /*!< ADC group r
 807:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger polarity set to falling edge */
 808:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 809:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
 810:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 811:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 812:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 813:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 814:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 815:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 816:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 817:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
 818:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            one conversion per trigger */
 819:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)   /*!< ADC conversions performed in con
 820:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            after the first trigger, following conversions launched 
 821:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            automatically */
 822:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 823:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 824:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 825:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 826:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 827:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 828:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 829:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 16


 830:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR1_DMAEN)  /*!< ADC conversion data are transfer
 831:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            in limited mode (one shot mode): DMA transfer requests a
 832:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            number of DMA data transfers (number of ADC conversions)
 833:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode non-c
 834:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 835:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            transferred by DMA, in unlimited mode: DMA transfer requ
 836:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            whatever number of DMA data transferred (number of ADC c
 837:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode circu
 838:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 839:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 841:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 842:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 843:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 845:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
 846:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    data preserved */
 847:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD) /*!< ADC group regular behavior in ca
 848:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    data overwritten */
 849:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 850:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 851:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 852:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 853:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
 854:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 855:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 856:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)        /*!< Sequencer configured to not f
 857:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer length and each rank affectation to a channel 
 858:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            by channel HW number. Refer to description of function
 859:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerChannels(). */
 860:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD) /*!< Sequencer configured to fully
 861:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer length and each rank affectation to a channel 
 862:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            Refer to description of function @ref LL_ADC_REG_SetSequ
 863:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 864:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 865:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 866:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 867:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 868:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 869:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 870:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)               /*!< ADC group regular se
 871:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
 872:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)               /*!< ADC group regular se
 873:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 2 ranks in the sequence */
 874:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)               /*!< ADC group regular se
 875:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 3 ranks in the sequence */
 876:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)               /*!< ADC group regular se
 877:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 4 ranks in the sequence */
 878:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)               /*!< ADC group regular se
 879:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 5 ranks in the sequence */
 880:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)               /*!< ADC group regular se
 881:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 6 ranks in the sequence */
 882:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)               /*!< ADC group regular se
 883:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 7 ranks in the sequence */
 884:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)                 /*!< ADC group regular se
 885:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with 8 ranks in the sequence */
 886:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 17


 887:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 888:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 889:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 890:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 891:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 892:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 893:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)      /*!< On this STM32 series, parameter
 894:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer set to mode not fully configurable, refer to f
 895:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerConfigurable(). ADC group re
 896:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            direction forward: from lowest channel number to highest
 897:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (scan of all ranks, ADC conversion of ranks with channel
 898:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer). On some other STM32 series, this setting is 
 899:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            and the default scan direction is forward. */
 900:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR) /*!< On this STM32 series, parameter
 901:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer set to mode not fully configurable, refer to f
 902:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            @ref LL_ADC_REG_SetSequencerConfigurable(). ADC group re
 903:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            direction backward: from highest channel number to lowes
 904:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (scan of all ranks, ADC conversion of ranks with channel
 905:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            sequencer) */
 906:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 907:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 908:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 909:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 910:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 911:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 912:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 913:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
 914:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            discontinuous mode disable */
 915:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                      /*!< ADC group r
 916:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
 917:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 918:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 919:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 920:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 921:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 922:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 923:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 924:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS) /*!< ADC group regul
 925:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS) /*!< ADC group regul
 926:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS) /*!< ADC group regul
 927:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS) /*!< ADC group regul
 928:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS) /*!< ADC group regul
 929:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS) /*!< ADC group regul
 930:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS) /*!< ADC group regul
 931:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS) /*!< ADC group regul
 932:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 933:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 934:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 935:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 936:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 937:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 938:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 939:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)     /*!< Sampling time 1.5 ADC clock cycl
 940:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)  /*!< Sampling time 3.5 ADC clock cycl
 941:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)  /*!< Sampling time 7.5 ADC clock cycl
 942:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 \
 943:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 12.5 ADC clock cy
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 18


 944:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)  /*!< Sampling time 19.5 ADC clock cyc
 945:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 \
 946:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 39.5 ADC clock cy
 947:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 \
 948:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_1) /*!< Sampling time 79.5 ADC clock cy
 949:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 \
 950:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_1 \
 951:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_SMPR_SMP1_0) /*!< Sampling time 160.5 ADC clock c
 952:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 953:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 954:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 955:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 956:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 957:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 958:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 959:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
 960:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog numbe
 961:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
 962:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog numbe
 963:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
 964:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog numbe
 965:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 966:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
 967:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 968:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 969:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 970:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
 971:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
 972:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
 973:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            disabled */
 974:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
 975:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN)                     /*!< ADC analog
 976:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of all channels, converted by group regular only */
 977:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
 978:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 979:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group regular only
 980:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
 981:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 982:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group regular only
 983:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
 984:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 985:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group regular only
 986:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
 987:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 988:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group regular only
 989:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
 990:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 991:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group regular only
 992:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
 993:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 994:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group regular only
 995:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
 996:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
 997:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group regular only
 998:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
 999:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1000:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group regular only
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 19


1001:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1002:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1003:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group regular only
1004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1005:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1006:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group regular only
1007:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1008:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1009:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group regular onl
1010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1011:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group regular onl
1013:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1015:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group regular onl
1016:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1017:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1018:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group regular onl
1019:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1020:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1021:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group regular onl
1022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1023:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)  /*!< ADC analo
1024:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by group regular onl
1025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1026:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1027:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group regular onl
1028:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1029:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1030:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group regular onl
1031:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1032:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1033:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group regular onl
1034:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) \
1035:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN19, converted by group regular onl
1037:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_20_REG          ((LL_ADC_CHANNEL_20 & ADC_CHANNEL_ID_MASK) \
1038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1039:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN20, converted by group regular onl
1040:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_21_REG          ((LL_ADC_CHANNEL_21 & ADC_CHANNEL_ID_MASK) \
1041:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1042:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN21, converted by group regular onl
1043:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_22_REG          ((LL_ADC_CHANNEL_22 & ADC_CHANNEL_ID_MASK) \
1044:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1045:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC channel ADCx_IN22, converted by group regular onl
1046:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) \
1047:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1048:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal v
1049:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            converted by group regular only */
1050:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) \
1051:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1052:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC internal channel connected to Temperature sensor,
1053:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            converted by group regular only */
1054:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VSSA_REG             ((LL_ADC_CHANNEL_16         & ADC_CHANNEL_ID_MASK) \
1055:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1056:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC internal channel connected to VSSA : internal ana
1057:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            converted by group regular only */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 20


1058:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VDDA_REG             ((LL_ADC_CHANNEL_15         & ADC_CHANNEL_ID_MASK) \
1059:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL) /*!< ADC analog
1060:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            of ADC internal channel connected to VDDA : internal ana
1061:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            converted by group regular only */
1062:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1063:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1064:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1065:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1066:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1067:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1068:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1069:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_AWD1TR_HT1)   /*!< ADC analog watchdog threshold hi
1070:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_AWD1TR_LT1)   /*!< ADC analog watchdog threshold lo
1071:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_AWD1TR_HT1 \
1072:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_AWD1TR_LT1)  /*!< ADC analog watchdog both thresh
1073:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    concatenated into the same data 
1074:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1075:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1076:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1077:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1079:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
1082:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_OVSE)                    /*!< ADC oversamplin
1083:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            ADC group regular. Literal suffix "continued" is kept fo
1084:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            with other STM32 devices featuring ADC group injected, i
1085:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            oversampling scope parameters are available. */
1086:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1087:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1089:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1090:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1091:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1092:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1093:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
1094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
1095:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)   /*!< ADC oversampling discontinuous m
1096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            mode (each conversion of oversampling ratio needs a trig
1097:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1099:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
1105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
1108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
1111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 21


1115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
1117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
1123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
1126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR2_OVSR_0)                   /*!< ADC oversamp
1127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (before potential shift) */
1129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
1134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
1137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data is not divided to resul
1138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            conversion data) */
1139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
1140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
1143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
1149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
1155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
1158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             | ADC_CFGR2_OVSS_0)                   /*!< ADC oversamp
1159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
1162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
1169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 22


1172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
1173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                  calibration parameters. This value
1174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                  (to fit on signed word or double w
1175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                  to an inconsistent temperature val
1176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         not timeout values.
1183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         above each literal definition.
1185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       not timeout values.                                                  */
1190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       STM32 series:                                                        */
1195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
1196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         cycles                                                             */
1202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         configuration.                                                     */
1204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Unit: us                                                                   */
1210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
1211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                               regulator start-up time) */
1212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Unit: us                                                                   */
1217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
1218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    time */
1219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Unit: us                                                                   */
1224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)        /*!< Delay for temperature sensor sta
1225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    (starting from temperature senso
1226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    @ref LL_ADC_SetCommonPathInterna
1227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)        /*!< Delay for temperature sensor buf
1228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 23


1229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
1230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  2UL)        /*!< Delay required between ADC end o
1239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                                    and ADC enable */
1240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Write a value in ADC register
1261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __REG__ Register to be written
1263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
1265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Read a value in ADC register
1270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __REG__ Register to be read
1272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Register value
1273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 24


1286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Example:
1287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           will return decimal number "4".
1289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number is returned, either defined with number
1291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
1308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
1309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
1322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
1328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
1331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                                       
1332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    (                                                                                               
1333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
1334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    )                                                                                               
1335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    :                                                                                               
1336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    ((((__CHANNEL__) & ADC_CHANNEL_0_BITFIELD) == ADC_CHANNEL_0_BITFIELD) ? (0UL) :                 
1337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     ((((__CHANNEL__) & ADC_CHANNEL_1_BITFIELD) == ADC_CHANNEL_1_BITFIELD) ? (1UL) :                
1338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****      ((((__CHANNEL__) & ADC_CHANNEL_2_BITFIELD) == ADC_CHANNEL_2_BITFIELD) ? (2UL) :               
1339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       ((((__CHANNEL__) & ADC_CHANNEL_3_BITFIELD) == ADC_CHANNEL_3_BITFIELD) ? (3UL) :              
1340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****        ((((__CHANNEL__) & ADC_CHANNEL_4_BITFIELD) == ADC_CHANNEL_4_BITFIELD) ? (4UL) :             
1341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         ((((__CHANNEL__) & ADC_CHANNEL_5_BITFIELD) == ADC_CHANNEL_5_BITFIELD) ? (5UL) :            
1342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          ((((__CHANNEL__) & ADC_CHANNEL_6_BITFIELD) == ADC_CHANNEL_6_BITFIELD) ? (6UL) :           
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 25


1343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           ((((__CHANNEL__) & ADC_CHANNEL_7_BITFIELD) == ADC_CHANNEL_7_BITFIELD) ? (7UL) :          
1344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****            ((((__CHANNEL__) & ADC_CHANNEL_8_BITFIELD) == ADC_CHANNEL_8_BITFIELD) ? (8UL) :         
1345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****             ((((__CHANNEL__) & ADC_CHANNEL_9_BITFIELD) == ADC_CHANNEL_9_BITFIELD) ? (9UL) :        
1346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ((((__CHANNEL__) & ADC_CHANNEL_10_BITFIELD) == ADC_CHANNEL_10_BITFIELD) ? (10UL) :    
1347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****               ((((__CHANNEL__) & ADC_CHANNEL_11_BITFIELD) == ADC_CHANNEL_11_BITFIELD) ? (11UL) :   
1348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                ((((__CHANNEL__) & ADC_CHANNEL_12_BITFIELD) == ADC_CHANNEL_12_BITFIELD) ? (12UL) :  
1349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                 ((((__CHANNEL__) & ADC_CHANNEL_13_BITFIELD) == ADC_CHANNEL_13_BITFIELD) ? (13UL) : 
1350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                  ((((__CHANNEL__) & ADC_CHANNEL_14_BITFIELD) == ADC_CHANNEL_14_BITFIELD) ? (14UL) :
1351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                   ((((__CHANNEL__) & ADC_CHANNEL_15_BITFIELD) == ADC_CHANNEL_15_BITFIELD) ? (15UL) 
1352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                    ((((__CHANNEL__) & ADC_CHANNEL_16_BITFIELD) == ADC_CHANNEL_16_BITFIELD) ? (16UL)
1353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     ((((__CHANNEL__) & ADC_CHANNEL_17_BITFIELD) == ADC_CHANNEL_17_BITFIELD) ? (17UL
1354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                      ((((__CHANNEL__) & ADC_CHANNEL_18_BITFIELD) == ADC_CHANNEL_18_BITFIELD) ? (18U
1355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                       ((((__CHANNEL__) & ADC_CHANNEL_19_BITFIELD) == ADC_CHANNEL_19_BITFIELD) ? (19
1356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                        ((((__CHANNEL__) & ADC_CHANNEL_20_BITFIELD) == ADC_CHANNEL_20_BITFIELD) ? (2
1357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                         ((((__CHANNEL__) & ADC_CHANNEL_21_BITFIELD) == ADC_CHANNEL_21_BITFIELD) ? (
1358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                          ((((__CHANNEL__) & ADC_CHANNEL_22_BITFIELD) == ADC_CHANNEL_22_BITFIELD) ? 
1359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                           (0UL)))))))))))))))))))))))))
1360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from number in decimal format.
1364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Example:
1365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
1384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
1385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
1398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 26


1400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
1404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__)))
1408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC internal channel:
1414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         returned from ADC registers,
1423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         parameters definitions of driver.
1426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
1442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
1443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
1456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 27


1457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
1462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (channel connected to a GPIO pin).
1464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a value defined from parameter definition of
1479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from ADC registers.
1482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
1498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
1499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
1512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 28


1514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
1518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_20
1540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_21
1541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_22
1542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         returned from ADC registers,
1556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         parameters definitions of driver.
1559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT
1562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR
1563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA
1564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA
1565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
1570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 29


1571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VDDA)       ||                             \
1572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VSSA))
1573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example:
1580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
1585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
1586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
1587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
1588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
1589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
1590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
1591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
1592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
1593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
1594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
1595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
1596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
1597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
1598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
1599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
1600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
1601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
1602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
1603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
1604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
1605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
1606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
1607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
1608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
1609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
1610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
1611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
1612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
1613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
1619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 30


1628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (1)
1643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (1)
1644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_20_REG          (1)
1645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_21_REG          (1)
1646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_22_REG          (1)
1647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDA_REG
1650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VSSA_REG
1651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter not available on all devices: only on STM32C031xx.
1652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         different of 12 bits.
1660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *            (< ADCx param >,
1666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *            );
1668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         different of 12 bits.
1683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 31


1685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *            );
1690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
1714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
1716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC common register instance
1726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (ADC1_COMMON)
1729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC common instance are disabled.
1733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
1735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 32


1742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are disabled.
1744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled.
1746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (refer to reference manual).
1756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a resolution to another resolution.
1769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1786:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
1787:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** (((__DATA__)                                                                 \
1788:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1789:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
1790:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** )
1791:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1792:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1793:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1794:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1795:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1796:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1797:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1798:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 33


1799:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1800:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                       (unit: digital value).
1801:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1802:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1803:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1804:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1805:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1806:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1807:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1808:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1809:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                       __ADC_DATA__,\
1810:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
1811:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1812:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1813:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** )
1814:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1815:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1816:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1817:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1818:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         reference VrefInt.
1819:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1820:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1821:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1822:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         connected to pin Vref+.
1823:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1824:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1825:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1826:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1827:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1828:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1829:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1830:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1831:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1832:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1833:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1834:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1835:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1836:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1837:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1838:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1839:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1841:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
1842:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1843:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
1844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
1845:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
1846:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** )
1847:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1848:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1849:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1850:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1851:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1852:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (refer to device datasheet).
1853:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Calculation formula:
1854:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1855:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 34


1856:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1857:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                   (unit: digital value)
1858:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1859:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1860:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1861:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1862:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1863:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1864:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                  datasheet typical values.
1865:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note:  On this STM32 series, calibtation parameter TS_CAL1 can be used
1866:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to improve calculation accuracy.
1867:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to @ref TEMPSENSOR_CAL1_ADDR.
1868:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1869:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1870:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1871:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1872:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1873:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1874:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1875:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1876:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1877:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           (unit: uV/DegCelsius).
1878:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                       On this STM32 series, refer to device datasheet parameter
1879:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1880:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           (at temperature and Vref+ defined in parameters below) (u
1881:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                       On this STM32 series, refer to datasheet parameter "V30" 
1882:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                       to TS_CAL1).
1883:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1884:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                           (see parameter above) is corresponding (unit: mV)
1885:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
1886:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1887:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1888:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1889:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1890:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1891:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1892:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1893:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1894:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1895:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1896:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1897:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1898:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1899:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1900:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
1901:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1902:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1903:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****               * 1000UL)                                                     \
1904:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     -                                                                       \
1905:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1906:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****               * 1000UL)                                                     \
1907:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****    )                                                                        \
1908:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
1909:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
1910:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** )
1911:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1912:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 35


1913:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1914:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1915:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1916:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1917:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1918:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1919:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1920:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1921:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1922:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1923:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1924:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1925:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1926:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1927:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1928:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1929:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1930:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1931:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1932:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1933:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1934:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1935:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1936:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1937:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1938:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1939:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1940:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1941:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1942:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example:
1943:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1944:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1945:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1946:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1947:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1948:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1949:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1950:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1951:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1952:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1953:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
1954:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1955:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1956:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval ADC register address
1957:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1958:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
1959:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
1960:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1961:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   (void)(Register);
1962:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1963:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Retrieve address of register DR */
1964:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
1965:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
1966:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1967:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1968:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
1969:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 36


1970:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1971:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1972:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC instances
1973:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
1974:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
1975:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
1976:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
1977:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1978:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1979:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
1980:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1981:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1982:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1983:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1984:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1985:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1986:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1987:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1988:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1989:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1990:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1991:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1992:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1993:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1994:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1995:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1996:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1997:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1998:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1999:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
2000:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
2001:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
2002:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
2003:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             is set to clock source asynchronous.
2004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
2005:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2006:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2007:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2008:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2009:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
2010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2011:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2013:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
2015:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2016:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2017:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2018:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
2019:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
2020:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
2021:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
2022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
2023:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
2024:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
2025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
2026:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 37


2027:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
2028:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
2029:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
2030:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
2031:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
2032:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
2033:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             is set to clock source asynchronous.
2034:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
2035:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
2037:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
2039:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2040:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2041:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2042:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2043:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2044:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2045:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
2046:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2047:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2048:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2049:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2050:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2051:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2052:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2053:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2054:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2055:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2056:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2057:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2058:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2059:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2060:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2061:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2062:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2063:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2064:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2065:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2066:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2067:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2068:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2069:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2070:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2071:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2072:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2073:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2074:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2075:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2076:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2077:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2079:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN, PathInternal);
2081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2082:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2083:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 38


2084:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2085:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2086:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Add paths to the current configuration.
2087:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
2088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2089:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2090:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2091:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2092:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2093:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         temperature sensor stabilization time.
2094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2095:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
2097:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2099:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a sampling time minimum value is required.
2101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Remove paths to the current configuration.
2127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
2128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 39


2141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
2155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
2168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN));
2170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
2174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
2178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
2182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
2186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
2188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
2193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
2194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
2195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 40


2198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             cycle).
2200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Refer to reference manual.
2201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
2204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
2206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
2210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
2211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
2218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
2219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
2220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             cycle).
2225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Refer to reference manual.
2226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(const ADC_TypeDef *ADCx)
2228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
2230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         without having to perform a new calibration using
2237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on going on group regular.
2242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
2243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
2248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
2251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              CalibrationFactor);
2252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 41


2255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
2260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx)
2264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
2266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC resolution.
2270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
2276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC resolution.
2291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
2294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
2302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
2304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 42


2312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
2314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
2330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
2336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           in order to reduce power consumption.
2346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           has been retrieved by user software.
2349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           other conversion.
2351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           applications.
2355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           How to use this low power mode:
2356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC conversion start.
2367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 43


2369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC channel.
2379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           in order to reduce power consumption.
2403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           has been retrieved by user software.
2406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           other conversion.
2408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           applications.
2412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           How to use this low power mode:
2413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC conversion start.
2424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 44


2426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC channel.
2436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
2446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
2464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           is discarded.
2465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
2476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 45


2483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(const ADC_TypeDef *ADCx)
2489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Sampling time common to all channels.
2498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         converted:
2501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         setting).
2504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TS_temp, ...).
2506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is required.
2515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
2516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
2520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
2521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
2538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
2539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 46


2540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Sampling time common to all channels.
2550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         this STM32 series.
2554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(const ADC_TypeDef *ADCx, uint32_t Sam
2571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
2578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
2582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         external interrupt line).
2588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         also set trigger polarity to rising edge
2590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC trigger frequency mode must be set
2595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of function
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 47


2597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO (1)
2611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) ADC external trigger available on STM32C071xx device only.
2614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         external interrupt line).
2625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (equivalent to
2629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO (1)
2641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) ADC external trigger available on STM32C071xx device only.
2644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
2646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
2652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 48


2654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((TriggerSource
2656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
2657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
2658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          );
2659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or external.
2664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
2673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
2684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
2708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 49


2711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         available:
2717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank
2719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Refer to description of function
2721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are fixed by channel HW number.
2725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Refer to description of function
2726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
2734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
2745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         available:
2754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank
2756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Refer to description of function
2758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are fixed by channel HW number.
2762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Refer to description of function
2763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 50


2768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(const ADC_TypeDef *ADCx)
2771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are configurable.
2782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This function performs configuration of:
2783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2786:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2787:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2788:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2789:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2790:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2791:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are defined by channel number.
2792:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This function performs configuration of:
2793:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2794:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2795:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2796:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2797:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2798:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2799:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             highest channel number).
2800:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2801:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2802:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           To set scan direction differently, refer to function
2803:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2804:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2805:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2806:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
2807:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2808:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2809:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2810:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2811:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2812:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2813:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2814:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2815:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
2816:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2817:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2818:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2819:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2820:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2821:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
2822:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2823:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2824:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 51


2825:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2826:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2827:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2828:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2829:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2830:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2831:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2832:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2833:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2834:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2835:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2836:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2837:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2838:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2839:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2841:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2842:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2843:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2845:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2846:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2847:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2848:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2849:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2850:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2851:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2852:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2853:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are configurable.
2854:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This function retrieves:
2855:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2856:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2857:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2858:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2859:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2860:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2861:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2862:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2863:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are defined by channel number.
2864:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This function retrieves:
2865:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2866:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2867:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2868:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2869:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2870:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2871:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             highest channel number).
2872:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2873:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2874:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *          To set scan direction differently, refer to function
2875:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
2876:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2877:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2878:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
2879:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2880:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2881:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 52


2882:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2883:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2884:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2885:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2886:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2887:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2888:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2889:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2890:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2891:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2892:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2893:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2894:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2895:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2896:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2897:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2898:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2899:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2900:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2901:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
2902:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2903:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t ChannelsRanks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2904:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2905:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t RankIndex;
2906:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2907:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2908:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   for (RankIndex = 0UL; RankIndex < (32U - 4U); RankIndex += 4U)
2909:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
2910:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     if ((ChannelsRanks & (ADC_CHSELR_SQ2 << RankIndex)) == (ADC_CHSELR_SQ2 << RankIndex))
2911:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     {
2912:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       SequencerLength = (ADC_CHSELR_SQ2 << RankIndex);
2913:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       break;
2914:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     }
2915:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
2916:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2917:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return SequencerLength;
2918:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2919:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2920:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2921:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2922:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2923:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to mode not fully configurable,
2924:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2925:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2926:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         the default scan direction is forward.
2927:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2928:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2929:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2930:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2931:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2932:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2933:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2934:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
2935:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2936:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2937:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2938:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 53


2939:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2940:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2941:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2942:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2943:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2944:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2945:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2946:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2947:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2948:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2949:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2950:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2951:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2952:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2953:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         to mode not fully configurable,
2954:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2955:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2956:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         the default scan direction is forward.
2957:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2958:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2959:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2960:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2961:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2962:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2963:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(const ADC_TypeDef *ADCx)
2964:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2965:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2966:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2967:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2968:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2969:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2970:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2971:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number of ranks.
2972:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2973:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2974:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2975:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
2976:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
2977:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2978:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2979:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2980:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2981:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2982:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
2983:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2984:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2985:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
2986:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2987:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
2988:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
2989:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
2990:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2991:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2992:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         number of ranks.
2993:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2994:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
2995:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 54


2996:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2997:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2998:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
2999:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
3000:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3001:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
3002:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3003:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3005:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3006:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         scan sequence rank.
3007:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs configuration of:
3008:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3009:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3011:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         affectation to a channel are configurable.
3013:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3015:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3016:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3017:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3018:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3019:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3020:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3021:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3023:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3024:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3026:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3027:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
3028:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3029:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3030:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3031:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3032:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
3033:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
3034:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
3035:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
3036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
3037:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
3038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
3039:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
3040:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3041:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3042:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3043:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3044:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3045:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3046:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3047:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3048:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3049:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3050:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3051:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3052:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 55


3053:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3054:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3055:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3056:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3057:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3058:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3059:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3060:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3061:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3062:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3063:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3064:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3065:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3066:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3067:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3068:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3069:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3070:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3071:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3072:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3073:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3074:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3075:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3076:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3077:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3079:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3082:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3083:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3084:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3085:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3086:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3087:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3089:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3090:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3091:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
3092:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3093:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
3095:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
3097:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
3098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3099:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         scan sequence rank.
3103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         affectation to a channel are configurable.
3106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 56


3110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           as parameter for another function.
3117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           process the returned value with the helper macro
3119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
3121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
3122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
3123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
3124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
3125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
3126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
3127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
3128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 57


3167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
3176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CHSELR,
3178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                               ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
3179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
3180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
3181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                    );
3182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
3186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channel number.
3187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs:
3188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
3192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           configuration.
3193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
3196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
3208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
3219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
3221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
3222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
3223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 58


3224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
3225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
3226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
3227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
3228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
3229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
3230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
3231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
3232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
3233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
3234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
3235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
3236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
3237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
3238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
3239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
3279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 59


3281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
3287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channel number.
3288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs:
3289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
3293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           configuration.
3294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
3297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
3309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
3320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
3322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
3323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
3324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
3325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
3326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
3327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
3328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
3329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
3330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
3331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
3332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
3333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
3334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
3335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
3336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
3337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 60


3338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
3339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
3340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
3380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
3388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channel number.
3389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs:
3390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           configuration.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 61


3395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
3398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         for more details.
3410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be selected.
3421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
3431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
3437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 62


3452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         channel number.
3490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function performs:
3491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are available, they can be chosen using
3497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         enabled separately.
3506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 63


3509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
3512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
3521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
3522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
3527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
3530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 64


3566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(const ADC_TypeDef *ADCx)
3571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t ChannelsBitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CHA
3575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_C
3576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_C
3577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_C
3578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_C
3579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_C
3580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_C
3581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_C
3582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_C
3583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_C
3584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_ADC
3585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_ADC
3586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_ADC
3587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_ADC
3588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_ADC
3589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_ADC
3590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_ADC
3591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_ADC
3592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_ADC
3593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL19) >> ADC_CHSELR_CHSEL19_BITOFFSET_POS) * LL_ADC
3594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL20) >> ADC_CHSELR_CHSEL20_BITOFFSET_POS) * LL_ADC
3595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL21) >> ADC_CHSELR_CHSEL21_BITOFFSET_POS) * LL_ADC
3596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (((ChannelsBitfield & ADC_CHSELR_CHSEL22) >> ADC_CHSELR_CHSEL22_BITOFFSET_POS) * LL_ADC
3597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****          );
3598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           conversions launched successively automatically.
3606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
3611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 65


3623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           conversions launched successively automatically.
3629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
3636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         mode:
3645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions) is reached.
3648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions).
3652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         mode non-circular:
3655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
3663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
3665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 66


3680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         mode:
3682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions) is reached.
3685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC conversions).
3689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         mode non-circular:
3692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
3706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         data preserved or overwritten.
3713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         other devices without this feature have a behavior
3715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         equivalent to data overwritten.
3716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
3722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         data preserved or overwritten.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 67


3737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
3744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
3750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
3754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         converted:
3763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         setting).
3766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         TS_temp, ...).
3768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         this STM32 series.
3771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is required.
3774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet.
3775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
3779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
3781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
3782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3786:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3787:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3788:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3789:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3790:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3791:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3792:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3793:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 68


3794:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3795:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3796:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3797:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
3798:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3799:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3800:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3801:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3802:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3803:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3804:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3805:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3806:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3807:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3808:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3809:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3810:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3811:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3812:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3813:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3814:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3815:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3816:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3817:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3818:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3819:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3820:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3821:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3822:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3823:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3824:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3825:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3826:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3827:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3828:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
3829:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3830:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3831:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3832:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3833:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3834:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3835:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3836:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3837:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3838:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
3839:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
3841:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3842:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3843:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3845:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3846:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
3847:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****             );
3848:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3849:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3850:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 69


3851:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3852:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3853:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3854:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3855:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3856:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3857:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         this STM32 series.
3858:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3859:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3860:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3861:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3862:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3863:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3864:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3865:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
3866:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3867:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3868:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3869:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3870:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3871:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3872:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3873:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3874:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3875:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3876:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3877:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3878:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3879:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_0
3880:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_1
3881:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_2
3882:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_3
3883:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_4
3884:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_5
3885:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_6
3886:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_7
3887:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_8           (1)
3888:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_9           (1)
3889:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_10
3890:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_11
3891:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_12
3892:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_13
3893:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_14
3894:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_15          (1)
3895:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_16          (1)
3896:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_17          (3)
3897:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_18          (3)
3898:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_19          (3)
3899:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_20          (3)
3900:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_21          (3)
3901:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_22          (3)
3902:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VREFINT     (2)
3903:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_TEMPSENSOR  (2)
3904:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VDDA        (2)
3905:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref ADC_CHANNEL_VSSA        (2)
3906:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
3907:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter can be set in ADC group sequencer
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 70


3908:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3909:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
3910:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
3911:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3912:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3913:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (3) ADC channels available on STM32C031xx device only.
3914:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3915:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3916:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3917:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3918:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
3919:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
3920:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3921:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3922:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3923:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* and shift it to position 0.                                                 */
3924:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3925:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                   >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NU
3926:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                        + ADC_SMPR_SMPSEL0_BITOFFSET_POS)
3927:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                       & 0x1FUL));
3928:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3929:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3930:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3931:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****           | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2));
3932:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
3933:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3934:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3935:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
3936:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3937:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3938:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3939:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
3940:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
3941:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
3942:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
3943:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3944:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a single channel or all channels,
3945:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on ADC group regular.
3946:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3947:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled.
3948:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3949:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
3950:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3951:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
3952:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         instance:
3953:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3954:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3955:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3956:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3957:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
3958:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3959:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
3960:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
3961:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3962:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3963:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3964:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 71


3965:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3966:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
3967:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3968:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3969:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3970:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3971:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3972:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3973:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3974:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3975:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3976:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3977:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3978:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3979:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3980:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3981:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3982:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3983:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3984:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3985:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3986:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3987:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3988:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3989:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3990:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3991:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3992:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (1)
3993:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (1)
3994:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_20_REG          (1)
3995:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_21_REG          (1)
3996:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_22_REG          (1)
3997:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
3998:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3999:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDA_REG
4000:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VSSA_REG
4001:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter not available on all devices: only on STM32C031xx.
4002:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4003:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
4005:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
  28              		.loc 2 4005 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 2 4005 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 1300     		movs	r3, r2
4006:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
4007:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
4008:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
4009:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   register __IO uint32_t *preg;
  38              		.loc 2 4010 3 is_stmt 1 view .LVU2
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 72


4011:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   if (AWDy == LL_ADC_AWD1)
  39              		.loc 2 4012 3 view .LVU3
  40              		.loc 2 4012 6 is_stmt 0 view .LVU4
  41 0004 094A     		ldr	r2, .L5
  42              	.LVL1:
  43              		.loc 2 4012 6 view .LVU5
  44 0006 9142     		cmp	r1, r2
  45 0008 0DD0     		beq	.L4
4013:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
4014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
4015:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
4016:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   else
4017:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
4018:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR,
  46              		.loc 2 4018 5 is_stmt 1 view .LVU6
  47              		.loc 2 4018 12 is_stmt 0 view .LVU7
  48 000a A030     		adds	r0, r0, #160
  49              	.LVL2:
  50              		.loc 2 4018 12 view .LVU8
  51 000c 4C0D     		lsrs	r4, r1, #21
  52 000e A400     		lsls	r4, r4, #2
  53 0010 0422     		movs	r2, #4
  54 0012 2240     		ands	r2, r4
  55 0014 8018     		adds	r0, r0, r2
  56              	.LVL3:
  57              	.L3:
4019:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
4020:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
4021:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(*preg,
  58              		.loc 2 4022 3 is_stmt 1 view .LVU9
  59 0016 0268     		ldr	r2, [r0]
  60 0018 054C     		ldr	r4, .L5+4
  61 001a 0C40     		ands	r4, r1
  62 001c A243     		bics	r2, r4
  63 001e 0B40     		ands	r3, r1
  64              	.LVL4:
  65              		.loc 2 4022 3 is_stmt 0 view .LVU10
  66 0020 1A43     		orrs	r2, r3
  67 0022 0260     		str	r2, [r0]
4023:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
4024:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              AWDChannelGroup & AWDy);
4025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
  68              		.loc 2 4025 1 view .LVU11
  69              		@ sp needed
  70 0024 10BD     		pop	{r4, pc}
  71              	.LVL5:
  72              	.L4:
4014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
  73              		.loc 2 4014 5 is_stmt 1 view .LVU12
4014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
  74              		.loc 2 4014 10 is_stmt 0 view .LVU13
  75 0026 0C30     		adds	r0, r0, #12
  76              	.LVL6:
4014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
  77              		.loc 2 4014 10 view .LVU14
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 73


  78 0028 F5E7     		b	.L3
  79              	.L6:
  80 002a C046     		.align	2
  81              	.L5:
  82 002c 0000C07C 		.word	2092957696
  83 0030 FFFFC77C 		.word	2093481983
  84              		.cfi_endproc
  85              	.LFE262:
  87              		.section	.text.LL_ADC_ConfigAnalogWDThresholds,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.code	16
  91              		.thumb_func
  93              	LL_ADC_ConfigAnalogWDThresholds:
  94              	.LVL7:
  95              	.LFB264:
4026:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4027:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4028:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
4029:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4030:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4031:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4032:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4033:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4034:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4035:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           as parameter for another function.
4037:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           process the returned value with the helper macro
4039:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4040:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
4041:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           one channel.
4042:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 1 kind of analog watchdog
4043:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         instance:
4044:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4045:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4046:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4047:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4048:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4049:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4050:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4051:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4052:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4053:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             be selected. For example:
4054:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4055:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4056:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             groups regular and injected).
4057:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4058:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4059:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4060:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4061:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4062:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4063:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4064:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4065:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
4066:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 74


4067:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
4068:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
4069:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
4070:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
4071:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4072:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4073:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4074:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
4075:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
4076:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *
4077:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
4078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
4079:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
4080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
4081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             by bitfield.
4082:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4083:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4084:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
4085:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
4086:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
4087:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
4088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
4089:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
4090:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
4091:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
4092:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
4093:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
4094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
4095:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
4096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
4097:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
4098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
4099:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
4100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
4101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
4102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
4103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (1)
4104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (1)
4105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_20_REG          (1)
4106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_21_REG          (1)
4107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_22_REG          (1)
4108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
4109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
4110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VDDA_REG
4111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VSSA_REG
4112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (1) On STM32C0, parameter not available on all devices: only on STM32C031xx.
4113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */__STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy
4114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1,
4116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                       ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_A
4117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
4118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                          * ADC_AWD_CR12_REGOFFSETGAP_VAL));
4119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   register uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_
4121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
4123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 75


4124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
4125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* or a single channel.                                                     */
4126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
4127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
4128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
4129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     {
4130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR1_AWD1SGL) == 0UL)
4131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       {
4132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
4134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
4135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  )
4136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  & (~(ADC_CFGR1_AWD1CH))
4137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 );
4138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       }
4139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       else
4140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       {
4141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
4143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR1_AWD1
4144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 );
4145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       }
4146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     }
4147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     else
4148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     {
4149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
4150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       {
4151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
4153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  | (ADC_CFGR1_AWD1EN)
4154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 );
4155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       }
4156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       else
4157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       {
4158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a single channel */
4159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
4160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
4161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
4162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
4163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                 );
4164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****       }
4165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****     }
4166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
4167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return AnalogWDMonitChannels;
4169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
4172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         high and low.
4173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
4174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
4175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
4178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 2 kind of analog watchdog
4179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         instance:
4180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 76


4181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             be selected. For example:
4190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             groups regular and injected).
4193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Examples:
4203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
4212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
4216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_ConfigAnalogWDThresholds\n
4217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_ConfigAnalogWDThresholds\n
4218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_ConfigAnalogWDThresholds\n
4219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_ConfigAnalogWDThresholds\n
4220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_ConfigAnalogWDThresholds\n
4221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_ConfigAnalogWDThresholds
4222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
4228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
4229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
4232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
4233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
  96              		.loc 2 4233 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 77


 100              		.loc 2 4233 1 is_stmt 0 view .LVU16
 101 0000 30B5     		push	{r4, r5, lr}
 102              		.cfi_def_cfa_offset 12
 103              		.cfi_offset 4, -12
 104              		.cfi_offset 5, -8
 105              		.cfi_offset 14, -4
 106 0002 0D00     		movs	r5, r1
4234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
4235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
4236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* "AWDy".                                                                  */
4237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
4238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
 107              		.loc 2 4239 3 is_stmt 1 view .LVU17
 108              		.loc 2 4239 25 is_stmt 0 view .LVU18
 109 0004 2030     		adds	r0, r0, #32
 110              	.LVL8:
 111              		.loc 2 4239 25 view .LVU19
 112 0006 0C0D     		lsrs	r4, r1, #20
 113 0008 0321     		movs	r1, #3
 114              	.LVL9:
 115              		.loc 2 4239 25 view .LVU20
 116 000a 0C40     		ands	r4, r1
 117 000c 6D0D     		lsrs	r5, r5, #21
 118              	.LVL10:
 119              		.loc 2 4239 25 view .LVU21
 120 000e 0239     		subs	r1, r1, #2
 121 0010 2940     		ands	r1, r5
 122 0012 6118     		adds	r1, r4, r1
 123 0014 8900     		lsls	r1, r1, #2
 124 0016 4018     		adds	r0, r0, r1
 125              	.LVL11:
4240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                               >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                 >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL))
4244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                             );
4245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(*preg,
 126              		.loc 2 4246 3 is_stmt 1 view .LVU22
 127 0018 0168     		ldr	r1, [r0]
 128 001a 034C     		ldr	r4, .L8
 129 001c 2140     		ands	r1, r4
 130 001e 1204     		lsls	r2, r2, #16
 131              	.LVL12:
 132              		.loc 2 4246 3 is_stmt 0 view .LVU23
 133 0020 1A43     		orrs	r2, r3
 134 0022 1143     		orrs	r1, r2
 135 0024 0160     		str	r1, [r0]
4247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
4248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
4249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 136              		.loc 2 4249 1 view .LVU24
 137              		@ sp needed
 138 0026 30BD     		pop	{r4, r5, pc}
 139              	.L9:
 140              		.align	2
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 78


 141              	.L8:
 142 0028 00F000F0 		.word	-268374016
 143              		.cfi_endproc
 144              	.LFE264:
 146              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 147              		.align	1
 148              		.weak	HAL_ADC_MspInit
 149              		.syntax unified
 150              		.code	16
 151              		.thumb_func
 153              	HAL_ADC_MspInit:
 154              	.LVL13:
 155              	.LFB344:
   1:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
   2:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @file    stm32c0xx_hal_adc.c
   4:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          "stm32c0xx_hal_adc_ex.c".
  21:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *
  22:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ******************************************************************************
  23:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @attention
  24:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *
  25:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * Copyright (c) 2022 STMicroelectronics.
  26:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * All rights reserved.
  27:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *
  28:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * in the root directory of this software component.
  30:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  31:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *
  32:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ******************************************************************************
  33:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   @verbatim
  34:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ==============================================================================
  35:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      ##### ADC peripheral features #####
  36:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ==============================================================================
  37:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   [..]
  38:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  39:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  40:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  41:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       analog watchdog or overrun events.
  42:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  43:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  44:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 79


  45:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  46:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  47:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  48:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  49:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) Programmable sampling time (common to group of channels)
  50:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  51:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  52:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  53:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  54:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  55:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) ADC calibration
  56:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  57:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) ADC conversion of regular group.
  58:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  59:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  60:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  61:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  62:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       Vdda or to an external voltage reference).
  63:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  64:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  65:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      ##### How to use this driver #####
  66:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ==============================================================================
  67:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]
  68:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  69:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  70:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      ============================================================
  71:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      [..]
  72:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  73:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Enable the ADC interface
  74:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  75:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****              Caution: On STM32C0, ADC clock frequency max is 35MHz (refer
  76:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                       to device datasheet).
  77:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                       Therefore, ADC clock source from RCC and ADC clock
  78:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                       prescaler must be configured to remain below
  79:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                       this maximum frequency.
  80:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  81:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  82:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  83:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  84:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  85:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    Four possible clock sources: synchronous clock from APB clock (same as ADC core 
  86:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    or asynchronous clock from RCC level: SYSCLK, HSI48.
  87:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  88:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****              (+++) Example:
  89:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  90:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    other device clock parameters configuration:
  91:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory: core clock)
  92:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  93:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  94:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  95:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
  96:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) ADC pins configuration
  97:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  98:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  99:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
 100:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               using function HAL_GPIO_Init()
 101:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 80


 102:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 103:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 104:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 105:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 106:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 107:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               ADCx_IRQHandler().
 108:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 109:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 110:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 111:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               using function HAL_DMA_Init().
 112:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 113:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 114:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 115:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 116:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 117:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 118:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 119:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      ================================================================
 120:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      [..]
 121:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 122:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 123:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 124:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         using function HAL_ADC_Init().
 125:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 126:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 127:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 128:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 129:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 130:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 131:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         monitored, thresholds, ...)
 132:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 133:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 134:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      *** Execution of ADC conversions ***
 135:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      ====================================
 136:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      [..]
 137:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 138:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 139:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         conversion accuracy
 140:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 141:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 142:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 143:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         transfer by DMA.
 144:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 145:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         (++) ADC conversion by polling:
 146:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 147:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 using function HAL_ADC_Start()
 148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 149:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 150:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Retrieve conversion results
 151:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 152:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 153:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 154:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 155:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         (++) ADC conversion by interruption:
 156:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 157:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 158:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 81


 159:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 160:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 (this function must be implemented in user program)
 161:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Retrieve conversion results
 162:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 163:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 164:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 165:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 167:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 168:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 170:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 171:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 (these functions must be implemented in user program)
 172:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 173:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 destination variable address.
 174:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 175:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 176:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 177:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      [..]
 178:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 179:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 180:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 181:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 182:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 183:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 184:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 185:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      *** Deinitialization of ADC ***
 186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      ============================================================
 187:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      [..]
 188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 189:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Disable the ADC interface
 190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 191:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 192:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 193:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         (++) ADC clock disable
 194:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 195:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****              (+++) Example:
 196:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 197:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    other device clock parameters configuration:
 198:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 199:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 200:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 201:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 202:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) ADC pins configuration
 203:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 204:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 205:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 206:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 207:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 208:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 209:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 210:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 211:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Deinitialize the DMA
 212:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               using function HAL_DMA_Init().
 213:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 214:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 215:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 82


 216:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]
 217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 218:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     *** Callback registration ***
 219:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     =============================================
 220:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]
 221:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 222:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 223:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 224:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 225:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      to register an interrupt callback.
 226:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]
 227:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 228:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 229:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 230:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 231:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 232:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 233:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 234:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 235:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 237:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 238:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 239:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      and a pointer to the user callback function.
 240:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]
 241:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 242:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 243:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      weak function.
 244:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]
 245:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 246:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 247:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      and the Callback ID.
 248:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      This function allows to reset following callbacks:
 249:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 250:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 251:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 252:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 253:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 254:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 255:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 256:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 257:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 258:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      [..]
 259:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 261:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 262:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 263:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 264:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 265:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 266:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]
 267:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 268:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 269:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 270:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      [..]
 271:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 272:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 83


 273:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 274:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 275:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 276:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]
 277:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 278:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 279:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 280:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 281:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      [..]
 282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 283:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 284:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 285:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      are set to the corresponding weak functions.
 286:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 287:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   @endverbatim
 288:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ******************************************************************************
 289:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 290:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 291:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 292:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #include "stm32c0xx_hal.h"
 293:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 294:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @addtogroup STM32C0xx_HAL_Driver
 295:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
 296:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 297:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 298:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @defgroup ADC ADC
 299:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief ADC HAL module driver
 300:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
 301:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 302:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 303:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 304:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 305:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 306:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 308:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 309:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
 310:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 311:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 312:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Fixed timeout values for ADC calibration, enable settling time, disable  */
 313:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* settling time.                                                           */
 314:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Values defined to be higher than worst cases: low clock frequency,       */
 315:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* maximum prescaler.                                                       */
 316:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 317:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* prescaler 4, sampling time 7.5 ADC clock cycles, resolution 12 bits.     */
 318:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Unit: ms                                                                 */
 319:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)
 320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
 321:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #define ADC_STOP_CONVERSION_TIMEOUT     (2UL)
 322:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #define ADC_CHANNEL_CONF_RDY_TIMEOUT    (1UL)
 323:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 324:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Register CHSELR bits corresponding to ranks 2 to 8 .                     */
 325:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #define ADC_CHSELR_SQ2_TO_SQ8           (ADC_CHSELR_SQ2 | ADC_CHSELR_SQ3 | ADC_CHSELR_SQ4 | \
 326:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                          ADC_CHSELR_SQ5 | ADC_CHSELR_SQ6 | ADC_CHSELR_SQ7 | ADC_CHS
 327:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
 329:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @}
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 84


 330:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 331:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 332:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 333:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 334:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 335:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 336:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
 337:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 338:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 339:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 340:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 341:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
 342:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @}
 343:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 344:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 345:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /* Exported functions ---------------------------------------------------------*/
 346:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 347:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 348:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
 349:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 350:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 351:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 352:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 353:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *
 354:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** @verbatim
 355:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****  ===============================================================================
 356:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 357:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****  ===============================================================================
 358:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 359:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) De-initialize the ADC.
 361:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** @endverbatim
 362:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
 363:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 364:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 365:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
 366:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 367:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 368:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 369:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 370:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         in header of this file).
 371:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 372:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 373:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 374:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 375:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 376:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 377:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         before HAL_ADC_Init().
 378:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 379:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 380:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 381:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 382:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 383:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 384:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
 385:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
 386:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 85


 387:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 388:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 389:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 391:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 392:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 393:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 394:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 395:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check ADC handle */
 396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (hadc == NULL)
 397:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 398:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     return HAL_ERROR;
 399:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 401:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
 402:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 403:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 404:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 405:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 406:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 407:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 408:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 409:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 410:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 411:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 412:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 413:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 414:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 415:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 416:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 417:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 418:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 419:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_TRIGGER_FREQ(hadc->Init.TriggerFrequencyMode));
 420:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 421:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 422:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 423:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 424:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 425:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 426:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 427:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 428:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 429:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 430:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 431:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ADC group regular discontinuous mode can be enabled only if              */
 432:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* continuous mode is disabled.                                             */
 433:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 434:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 435:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 436:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 437:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 439:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 440:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Init the ADC Callback settings */
 441:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 442:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 443:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 86


 444:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 445:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 446:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 447:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 448:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->CalibrationCpltCallback       = HAL_ADC_CalibrationCpltCallback;          /* Legacy weak 
 449:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ADCReadyCallback              = HAL_ADC_ADCReadyCallback;                 /* Legacy weak 
 450:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ChannelConfigReadyCallback    = HAL_ADCEx_ChannelConfigReadyCallback;     /* Legacy weak 
 451:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 452:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 453:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 454:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 455:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 456:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 457:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Init the low level hardware */
 458:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 459:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
 460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Init the low level hardware */
 461:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 462:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 463:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 464:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Set ADC error code to none */
 465:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 466:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 467:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Initialize Lock */
 468:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 469:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 470:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 472:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 473:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 474:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 475:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 476:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 477:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Wait loop initialization and execution */
 478:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 479:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 480:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * (SystemCoreClock / (100000UL 
 482:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 483:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 484:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       wait_loop_index--;
 485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 486:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 487:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 489:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 490:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 492:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update ADC state machine to error */
 494:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 495:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 496:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 497:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 498:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 500:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 87


 501:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 503:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 505:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 506:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 509:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 510:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      )
 511:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 512:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Set ADC state */
 513:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 514:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 515:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 516:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 517:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 518:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 519:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 520:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 521:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - Internal voltage regulator (no parameter in HAL ADC init structure) */
 522:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - Clock configuration                                                 */
 523:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - ADC resolution                                                      */
 524:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - Oversampling                                                        */
 525:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - discontinuous mode                                                  */
 526:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - LowPowerAutoWait mode                                               */
 527:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - LowPowerAutoPowerOff mode                                           */
 528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 529:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - overrun                                                             */
 530:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 531:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - external trigger polarity                                           */
 532:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - data alignment                                                      */
 533:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - resolution                                                          */
 534:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - scan direction                                                      */
 535:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - DMA continuous request                                              */
 536:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  - Trigger frequency mode                                              */
 537:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Note: If low power mode AutoPowerOff is enabled, ADC enable            */
 538:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*       and disable phases are performed automatically by hardware       */
 539:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*       (in this case, flag ADC_FLAG_RDY is not set).                    */
 540:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 541:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 542:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 543:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 544:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 545:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 546:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* parameters):                                                         */
 547:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*   - internal measurement paths: temperature sensor, Vref             */
 548:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() )                              */
 549:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       tmpCFGR1 |= (hadc->Init.Resolution                                          |
 551:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 552:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 554:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 555:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 557:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 88


 558:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 559:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Update setting of discontinuous mode only if continuous mode is disabled */
 560:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (hadc->Init.DiscontinuousConvMode == ENABLE)
 561:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 562:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if (hadc->Init.ContinuousConvMode == DISABLE)
 563:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 564:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Enable the selected ADC group regular discontinuous mode */
 565:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           tmpCFGR1 |= ADC_CFGR1_DISCEN;
 566:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 567:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         else
 568:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* ADC regular group discontinuous was intended to be enabled,        */
 570:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* but ADC regular group modes continuous and sequencer discontinuous */
 571:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* cannot be enabled simultaneously.                                  */
 572:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 573:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Update ADC state machine to error */
 574:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 576:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
 577:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 578:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 580:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 581:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Enable external trigger if trigger selection is different of software  */
 582:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* start.                                                                 */
 583:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Note: This configuration keeps the hardware feature of parameter       */
 584:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 585:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       software start.                                                  */
 586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 587:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 588:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         tmpCFGR1 |= ((hadc->Init.ExternalTrigConv & ADC_CFGR1_EXTSEL) |
 589:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 590:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 591:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 592:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Update ADC configuration register with previous settings */
 593:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR1,
 594:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_RES     |
 595:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_DISCEN  |
 596:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_CHSELRMOD |
 597:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_AUTOFF  |
 598:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_WAIT    |
 599:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_CONT    |
 600:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_OVRMOD  |
 601:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_EXTSEL  |
 602:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_EXTEN   |
 603:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_ALIGN   |
 604:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_SCANDIR |
 605:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_DMACFG,
 606:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  tmpCFGR1);
 607:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       tmpCFGR2 |= ((hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 609:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 610:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                   );
 611:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 612:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 613:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 614:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         tmpCFGR2 |= (ADC_CFGR2_OVSE |
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 89


 615:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.Oversampling.Ratio         |
 617:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 618:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 619:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                     );
 620:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 621:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 622:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2,
 623:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 624:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR2_LFTRIG |
 625:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR2_OVSE   |
 626:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR2_OVSR   |
 627:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR2_OVSS   |
 628:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR2_TOVS,
 629:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  tmpCFGR2);
 630:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 631:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Configuration of ADC clock mode: asynchronous clock source           */
 632:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* with selectable prescaler.                                           */
 633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV1) &&
 634:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 635:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 636:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 637:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         MODIFY_REG(ADC1_COMMON->CCR,
 638:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CCR_PRESC,
 639:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.ClockPrescaler & ADC_CCR_PRESC);
 640:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 642:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 643:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Channel sampling time configuration */
 644:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1, hadc->Init.S
 645:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 646:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 647:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 648:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 649:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 650:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 651:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 652:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 653:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 654:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 655:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*   Channels must be configured into each rank using function            */
 656:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*   "HAL_ADC_ConfigChannel()".                                           */
 657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 658:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 659:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set sequencer scan length by clearing ranks above rank 1             */
 660:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* and do not modify rank 1 value.                                      */
 661:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->Instance->CHSELR,
 662:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 663:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 664:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 666:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC group regular sequencer:                                   */
 667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*  - Set ADC group regular sequencer to value memorized              */
 668:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*    in HAL ADC handle                                               */
 669:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*    Note: This value maybe be initialized at a unknown value,       */
 670:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*          therefore after the first call of "HAL_ADC_Init()",       */
 671:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*          each rank corresponding to parameter "NbrOfConversion"    */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 90


 672:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*          must be set using "HAL_ADC_ConfigChannel()".              */
 673:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*  - Set sequencer scan length by clearing ranks above maximum rank  */
 674:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*    and do not modify other ranks value.                            */
 675:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CHSELR,
 676:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CHSELR_SQ_ALL,
 677:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  (ADC_CHSELR_SQ2_TO_SQ8 << (((hadc->Init.NbrOfConversion - 1UL) * ADC_REGULAR_RANK_
 678:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  | (hadc->ADCGroupRegularSequencerRanks)
 679:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                 );
 680:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 681:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
 682:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 683:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Nothing to do */
 684:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 685:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 686:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* ensure of no potential problem of ADC core peripheral clocking.        */
 687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (LL_ADC_GetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1)
 688:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         == hadc->Init.SamplingTimeCommon1)
 689:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 690:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC error code to none */
 691:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 692:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 693:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set the ADC state */
 694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 695:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 696:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 697:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 698:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
 699:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 700:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Update ADC state machine to error */
 701:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 702:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 703:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 704:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 705:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
 706:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 707:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 709:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 710:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 711:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 712:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
 713:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 714:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update ADC state machine to error */
 715:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 716:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 717:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 718:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 719:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 720:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
 721:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
 722:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 723:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 724:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
 725:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 726:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 727:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 728:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 91


 729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 730:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 731:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 732:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 733:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 734:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 735:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         common group is still running.
 736:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 737:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 738:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 739:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
 740:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
 741:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 742:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 743:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 744:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 745:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 746:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check ADC handle */
 747:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (hadc == NULL)
 748:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 749:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     return HAL_ERROR;
 750:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 751:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 752:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
 753:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 754:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Set ADC state */
 756:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 758:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Stop potential conversion on going, on regular group */
 759:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
 760:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 761:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 762:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 763:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 764:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Disable the ADC peripheral */
 765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 766:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 767:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 768:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 769:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 770:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Change ADC state */
 771:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 772:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 773:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 774:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Disable ADC internal voltage regulator */
 775:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 776:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 777:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 778:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 779:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 780:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 781:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 782:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 783:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 784:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 785:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 92


 786:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset register IER */
 787:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 |
 788:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 790:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                               ADC_IT_EOCAL | ADC_IT_EOSMP | ADC_IT_RDY));
 791:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 792:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset register ISR */
 793:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 |
 794:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 795:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 796:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                               ADC_FLAG_EOCAL | ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 797:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 798:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset register CR */
 799:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 800:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* "read-set": no direct reset applicable.                                */
 801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 802:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset register CFGR1 */
 803:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->CFGR1 &= ~(ADC_CFGR1_AWD1CH  | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL | ADC_CFGR1_D
 804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD | ADC_CFGR1_AUTOFF |
 805:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                              ADC_CFGR1_WAIT    | ADC_CFGR1_CONT   | ADC_CFGR1_OVRMOD  |
 806:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                              ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN   | ADC_CFGR1_R
 807:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                              ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN);
 808:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 809:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset register CFGR2 */
 810:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
 811:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*       already done above.                                              */
 812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->CFGR2 &= ~ADC_CFGR2_CKMODE;
 813:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 814:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset register SMPR */
 815:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->SMPR &= ~ADC_SMPR_SMP1;
 816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 817:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset registers AWDxTR */
 818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD1TR &= ~(ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1);
 819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 821:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 822:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset register CHSELR */
 823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->CHSELR &= ~(ADC_CHSELR_SQ_ALL);
 824:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 825:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset register DR */
 826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable */
 827:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 828:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset register CCR */
 829:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ADC1_COMMON->CCR &= ~(ADC_CCR_TSEN | ADC_CCR_VREFEN | ADC_CCR_PRESC);
 830:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 831:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Hard reset ADC peripheral ========== */
 832:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 833:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* forced to a similar state after device power-on.                       */
 834:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* If needed, copy-paste and uncomment the following reset code into      */
 835:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":            */
 836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*                                                                        */
 837:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
 838:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
 839:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 840:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 841:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 842:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 93


 843:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 844:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 845:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 846:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* DeInit the low level hardware */
 847:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 848:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
 849:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* DeInit the low level hardware */
 850:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 851:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 852:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 853:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Reset HAL ADC handle variable */
 854:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->ADCGroupRegularSequencerRanks = 0x00000000UL;
 855:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 856:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Set ADC error code to none */
 857:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 858:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 859:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Set ADC state */
 860:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 861:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 862:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process unlocked */
 863:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 864:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 865:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
 866:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
 867:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 868:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 869:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
 870:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 871:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
 872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
 873:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 874:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 875:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 156              		.loc 1 875 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 876:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 877:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   UNUSED(hadc);
 161              		.loc 1 877 3 view .LVU26
 878:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 879:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 880:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 881:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****    */
 882:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 162              		.loc 1 882 1 is_stmt 0 view .LVU27
 163              		@ sp needed
 164 0000 7047     		bx	lr
 165              		.cfi_endproc
 166              	.LFE344:
 168              		.section	.text.HAL_ADC_Init,"ax",%progbits
 169              		.align	1
 170              		.global	HAL_ADC_Init
 171              		.syntax unified
 172              		.code	16
 173              		.thumb_func
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 94


 175              	HAL_ADC_Init:
 176              	.LVL14:
 177              	.LFB342:
 388:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 178              		.loc 1 388 1 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 8
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 388:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 182              		.loc 1 388 1 is_stmt 0 view .LVU29
 183 0000 30B5     		push	{r4, r5, lr}
 184              		.cfi_def_cfa_offset 12
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 5, -8
 187              		.cfi_offset 14, -4
 188 0002 83B0     		sub	sp, sp, #12
 189              		.cfi_def_cfa_offset 24
 190 0004 0400     		movs	r4, r0
 389:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 191              		.loc 1 389 3 is_stmt 1 view .LVU30
 192              	.LVL15:
 390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 193              		.loc 1 390 3 view .LVU31
 391:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 194              		.loc 1 391 3 view .LVU32
 392:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 195              		.loc 1 392 3 view .LVU33
 393:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 196              		.loc 1 393 3 view .LVU34
 393:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 197              		.loc 1 393 17 is_stmt 0 view .LVU35
 198 0006 0023     		movs	r3, #0
 199 0008 0193     		str	r3, [sp, #4]
 396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 200              		.loc 1 396 3 is_stmt 1 view .LVU36
 396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 201              		.loc 1 396 6 is_stmt 0 view .LVU37
 202 000a 0028     		cmp	r0, #0
 203 000c 00D1     		bne	.LCB159
 204 000e 05E1     		b	.L30	@long jump
 205              	.LCB159:
 402:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 206              		.loc 1 402 3 is_stmt 1 view .LVU38
 403:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 207              		.loc 1 403 3 view .LVU39
 404:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 208              		.loc 1 404 3 view .LVU40
 405:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 209              		.loc 1 405 3 view .LVU41
 406:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 210              		.loc 1 406 3 view .LVU42
 407:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 211              		.loc 1 407 3 view .LVU43
 408:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 212              		.loc 1 408 3 view .LVU44
 409:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 213              		.loc 1 409 3 view .LVU45
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 95


 410:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 214              		.loc 1 410 3 view .LVU46
 411:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 215              		.loc 1 411 3 view .LVU47
 412:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 216              		.loc 1 412 3 view .LVU48
 413:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 217              		.loc 1 413 3 view .LVU49
 414:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 218              		.loc 1 414 3 view .LVU50
 415:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 219              		.loc 1 415 3 view .LVU51
 416:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 220              		.loc 1 416 3 view .LVU52
 417:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 221              		.loc 1 417 3 view .LVU53
 419:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 222              		.loc 1 419 3 view .LVU54
 421:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 223              		.loc 1 421 3 view .LVU55
 423:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 224              		.loc 1 423 5 view .LVU56
 425:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 225              		.loc 1 425 5 view .LVU57
 427:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 226              		.loc 1 427 7 view .LVU58
 433:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 227              		.loc 1 433 3 view .LVU59
 437:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 228              		.loc 1 437 3 view .LVU60
 437:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 229              		.loc 1 437 11 is_stmt 0 view .LVU61
 230 0010 836D     		ldr	r3, [r0, #88]
 437:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 231              		.loc 1 437 6 view .LVU62
 232 0012 002B     		cmp	r3, #0
 233 0014 12D0     		beq	.L36
 234              	.LVL16:
 235              	.L13:
 471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 236              		.loc 1 471 3 is_stmt 1 view .LVU63
 471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 237              		.loc 1 471 45 is_stmt 0 view .LVU64
 238 0016 2368     		ldr	r3, [r4]
 239              	.LVL17:
 240              	.LBB122:
 241              	.LBI122:
4250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
4252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         high or low.
4253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
4254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
4255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
4258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there is only 2 kinds of analog watchdog
4259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         instance:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 96


4260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
4263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             be selected. For example:
4270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             groups regular and injected).
4273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *             ADC resolution configured).
4278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
4279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
4280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
4281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
4282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Examples:
4283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
4285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
4286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
4288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
4289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
4290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
4291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
4292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
4293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
4295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on ADC group regular.
4296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_SetAnalogWDThresholds\n
4297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_SetAnalogWDThresholds\n
4298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_SetAnalogWDThresholds\n
4299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_SetAnalogWDThresholds\n
4300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_SetAnalogWDThresholds\n
4301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_SetAnalogWDThresholds
4302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
4311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
4314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
4315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 97


4317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                               >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                 >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL)));
4326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(*preg,
4328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              AWDThresholdsHighLow,
4329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
4330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
4334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
4335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         concatenated.
4336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
4337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
4338:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using helper macro:
4339:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
4340:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
4341:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
4342:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
4343:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_GetAnalogWDThresholds\n
4344:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_GetAnalogWDThresholds\n
4345:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_GetAnalogWDThresholds\n
4346:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_GetAnalogWDThresholds\n
4347:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_GetAnalogWDThresholds\n
4348:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_GetAnalogWDThresholds
4349:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4350:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4351:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4352:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4353:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4354:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4355:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4356:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4357:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
4358:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4359:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4360:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx, uint32_t AWDy, uint3
4361:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4362:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4363:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4364:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4365:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4366:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4367:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4368:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4369:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                     >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4370:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                    + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4371:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                       >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL
4372:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4373:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 98


4374:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_AWD1TR_LT1))
4375:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
4376:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                         (AWDThresholdsHighLow & ADC_AWD1TR_LT1))
4377:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                    );
4378:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4380:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4381:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
4382:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4384:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
4385:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
4386:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4387:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4388:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4389:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
4390:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4391:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4392:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
4393:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
4394:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4395:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
4396:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4397:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4398:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4399:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4400:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
4401:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4402:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
4403:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4404:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4405:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4406:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
4407:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
4408:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4409:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4410:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4411:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4412:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4413:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
4414:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4415:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
4416:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4417:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4418:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4419:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
4420:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on the selected ADC group.
4421:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4422:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4423:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are done from 1 trigger)
4424:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4425:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           needs a trigger)
4426:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4427:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4428:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
4429:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
4430:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 99


4431:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
4432:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4433:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4434:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4435:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4436:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
4437:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4438:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
4439:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4440:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4441:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4442:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
4443:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on the selected ADC group.
4444:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4445:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4446:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           are done from 1 trigger)
4447:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4448:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           needs a trigger)
4449:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
4450:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4451:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4452:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4453:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4454:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4455:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
4456:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4457:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4458:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4459:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4460:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4461:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Set ADC oversampling
4462:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
4463:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - ratio
4464:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - shift
4465:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4466:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4467:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be disabled.
4468:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4469:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
4470:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4471:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4472:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4473:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4474:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4475:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4476:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4477:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4478:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4479:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4481:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4482:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4483:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4485:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4486:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4487:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 100


4488:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4489:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4490:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4491:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4492:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4493:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4494:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4495:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4496:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4497:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4498:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4499:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
4500:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4501:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4502:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4503:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4504:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4505:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4506:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4507:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4508:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4509:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4510:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4511:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
4512:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4513:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4514:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4515:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4516:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4517:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4518:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
4519:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4520:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4521:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4522:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4523:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4524:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4525:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4526:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4527:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4528:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4529:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4530:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4531:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
4532:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4533:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4534:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4535:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4536:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
4538:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4539:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4541:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
4542:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4543:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4544:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 101


4545:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4546:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
4547:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         the voltage regulator:
4548:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - by enabling it manually
4549:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4550:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - by launching a calibration
4551:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4552:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - by enabling the ADC
4553:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4554:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
4555:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4556:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
4557:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4558:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4559:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4560:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4561:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4562:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4563:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4564:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4565:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4567:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4568:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4569:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4573:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
4574:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4575:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4576:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4577:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4578:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4579:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4580:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4581:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4582:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4583:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4584:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4586:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4589:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4590:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4591:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4592:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4593:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4594:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4595:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
 242              		.loc 2 4596 26 is_stmt 1 view .LVU65
 243              	.LBB123:
4597:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4598:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 244              		.loc 2 4598 3 view .LVU66
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 102


 245              		.loc 2 4598 12 is_stmt 0 view .LVU67
 246 0018 9A68     		ldr	r2, [r3, #8]
 247              		.loc 2 4598 76 view .LVU68
 248 001a D200     		lsls	r2, r2, #3
 249 001c 1BD4     		bmi	.L14
 250              	.LVL18:
 251              		.loc 2 4598 76 view .LVU69
 252              	.LBE123:
 253              	.LBE122:
 474:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 254              		.loc 1 474 5 is_stmt 1 view .LVU70
 255              	.LBB124:
 256              	.LBI124:
4566:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 257              		.loc 2 4566 22 view .LVU71
 258              	.LBB125:
4571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 259              		.loc 2 4571 3 view .LVU72
 260 001e 9968     		ldr	r1, [r3, #8]
 261 0020 7F4A     		ldr	r2, .L41
 262 0022 1140     		ands	r1, r2
 263 0024 8022     		movs	r2, #128
 264 0026 5205     		lsls	r2, r2, #21
 265 0028 0A43     		orrs	r2, r1
 266 002a 9A60     		str	r2, [r3, #8]
 267              	.LVL19:
4571:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 268              		.loc 2 4571 3 is_stmt 0 view .LVU73
 269              	.LBE125:
 270              	.LBE124:
 481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 271              		.loc 1 481 5 is_stmt 1 view .LVU74
 481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 272              		.loc 1 481 88 is_stmt 0 view .LVU75
 273 002c 7D4B     		ldr	r3, .L41+4
 274 002e 1868     		ldr	r0, [r3]
 275 0030 7D49     		ldr	r1, .L41+8
 276 0032 FFF7FEFF 		bl	__aeabi_uidiv
 277              	.LVL20:
 481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 278              		.loc 1 481 69 view .LVU76
 279 0036 4000     		lsls	r0, r0, #1
 481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 280              		.loc 1 481 21 view .LVU77
 281 0038 0190     		str	r0, [sp, #4]
 482:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 282              		.loc 1 482 5 is_stmt 1 view .LVU78
 482:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 283              		.loc 1 482 11 is_stmt 0 view .LVU79
 284 003a 09E0     		b	.L15
 285              	.LVL21:
 286              	.L36:
 461:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 287              		.loc 1 461 5 is_stmt 1 view .LVU80
 288 003c FFF7FEFF 		bl	HAL_ADC_MspInit
 289              	.LVL22:
 465:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 103


 290              		.loc 1 465 5 view .LVU81
 291 0040 0023     		movs	r3, #0
 292 0042 E365     		str	r3, [r4, #92]
 468:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 293              		.loc 1 468 5 view .LVU82
 468:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 294              		.loc 1 468 16 is_stmt 0 view .LVU83
 295 0044 5422     		movs	r2, #84
 296 0046 A354     		strb	r3, [r4, r2]
 297 0048 E5E7     		b	.L13
 298              	.L16:
 484:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 299              		.loc 1 484 7 is_stmt 1 view .LVU84
 484:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 300              		.loc 1 484 22 is_stmt 0 view .LVU85
 301 004a 019B     		ldr	r3, [sp, #4]
 302 004c 013B     		subs	r3, r3, #1
 303 004e 0193     		str	r3, [sp, #4]
 304              	.L15:
 482:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 305              		.loc 1 482 28 is_stmt 1 view .LVU86
 306 0050 019B     		ldr	r3, [sp, #4]
 307 0052 002B     		cmp	r3, #0
 308 0054 F9D1     		bne	.L16
 309              	.L14:
 491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 310              		.loc 1 491 3 view .LVU87
 491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 311              		.loc 1 491 45 is_stmt 0 view .LVU88
 312 0056 2368     		ldr	r3, [r4]
 313              	.LVL23:
 314              	.LBB126:
 315              	.LBI126:
4596:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 316              		.loc 2 4596 26 is_stmt 1 view .LVU89
 317              	.LBB127:
 318              		.loc 2 4598 3 view .LVU90
 319              		.loc 2 4598 12 is_stmt 0 view .LVU91
 320 0058 9A68     		ldr	r2, [r3, #8]
 321              		.loc 2 4598 76 view .LVU92
 322 005a D200     		lsls	r2, r2, #3
 323 005c 00D5     		bpl	.LCB269
 324 005e 9DE0     		b	.L31	@long jump
 325              	.LCB269:
 326              	.LVL24:
 327              		.loc 2 4598 76 view .LVU93
 328              	.LBE127:
 329              	.LBE126:
 494:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 330              		.loc 1 494 5 is_stmt 1 view .LVU94
 331 0060 A26D     		ldr	r2, [r4, #88]
 332 0062 1021     		movs	r1, #16
 333 0064 0A43     		orrs	r2, r1
 334 0066 A265     		str	r2, [r4, #88]
 497:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 335              		.loc 1 497 5 view .LVU95
 336 0068 E26D     		ldr	r2, [r4, #92]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 104


 337 006a 0F39     		subs	r1, r1, #15
 338 006c 0A43     		orrs	r2, r1
 339 006e E265     		str	r2, [r4, #92]
 499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 340              		.loc 1 499 5 view .LVU96
 341              	.LVL25:
 499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 342              		.loc 1 499 20 is_stmt 0 view .LVU97
 343 0070 0120     		movs	r0, #1
 344              	.LVL26:
 345              	.L17:
 506:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 346              		.loc 1 506 3 is_stmt 1 view .LVU98
 347              	.LBB128:
 348              	.LBI128:
4599:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4600:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4601:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4602:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4603:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
4604:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
4605:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversion start.
4606:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4607:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4608:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4609:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4610:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4611:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4612:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4613:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
4614:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4615:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4616:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
4618:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4619:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4620:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4621:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4623:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4624:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADEN);
4625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4626:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4627:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4628:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4629:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4630:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4631:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
4632:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         on group regular.
4633:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
4634:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4635:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4636:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4638:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4639:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4640:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 105


4641:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4643:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4644:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADDIS);
4645:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4646:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4647:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4648:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4649:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4650:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4651:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4652:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4653:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4654:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4655:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
4657:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
4659:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4660:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4661:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4662:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
4663:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4664:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4665:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4666:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
4668:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4670:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4671:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4673:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
4675:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
4676:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
4677:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
4678:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4679:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
4680:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         during calibration:
4681:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Calibration factor is available in data register
4682:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         and also transferred by DMA.
4683:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4684:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4685:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         calibration.
4686:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4687:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4688:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
4689:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
4690:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
4691:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         This mode must be disabled during calibration
4692:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
4693:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4694:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4695:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4696:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4697:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 106


4698:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4699:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4700:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
4701:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4702:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4703:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4704:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4706:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADCAL);
4708:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4709:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4710:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4711:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
4712:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4713:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4714:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4715:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4716:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
4717:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4718:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
4719:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4720:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4721:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4722:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
4723:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4724:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4725:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4726:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
4727:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4728:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4729:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4730:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4731:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
4732:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4733:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
4734:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           starts immediately.
4735:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4736:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
4737:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *           following the ADC start conversion command.
4738:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4739:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4740:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4741:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4742:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         without ADC disable command on going.
4743:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4744:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4745:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4746:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4748:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4749:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4750:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4751:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4753:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4754:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADSTART);
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 107


4755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4756:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4757:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4758:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4759:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4760:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC state:
4761:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
4762:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         without ADC disable command on going.
4763:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4764:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4765:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
4766:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4768:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4769:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4770:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4771:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4773:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4774:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_ADSTP);
4775:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4776:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4777:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4778:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4779:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4780:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4781:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4782:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
 349              		.loc 2 4783 26 view .LVU99
 350              	.LBB129:
4784:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4785:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 351              		.loc 2 4785 3 view .LVU100
 352              		.loc 2 4785 12 is_stmt 0 view .LVU101
 353 0072 9A68     		ldr	r2, [r3, #8]
 354 0074 0421     		movs	r1, #4
 355 0076 0D00     		movs	r5, r1
 356 0078 1540     		ands	r5, r2
 357              		.loc 2 4785 74 view .LVU102
 358 007a 1142     		tst	r1, r2
 359 007c 00D0     		beq	.L18
 360              		.loc 2 4785 74 discriminator 1 view .LVU103
 361 007e 0125     		movs	r5, #1
 362              	.L18:
 363              	.LVL27:
 364              		.loc 2 4785 74 discriminator 1 view .LVU104
 365              	.LBE129:
 366              	.LBE128:
 508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 367              		.loc 1 508 3 is_stmt 1 view .LVU105
 508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 368              		.loc 1 508 13 is_stmt 0 view .LVU106
 369 0080 A26D     		ldr	r2, [r4, #88]
 508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 370              		.loc 1 508 6 view .LVU107
 371 0082 D206     		lsls	r2, r2, #27
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 108


 372 0084 00D5     		bpl	.LCB315
 373 0086 C2E0     		b	.L19	@long jump
 374              	.LCB315:
 509:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      )
 375              		.loc 1 509 7 view .LVU108
 376 0088 002D     		cmp	r5, #0
 377 008a 00D0     		beq	.LCB317
 378 008c BFE0     		b	.L19	@long jump
 379              	.LCB317:
 513:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 380              		.loc 1 513 5 is_stmt 1 view .LVU109
 381 008e A26D     		ldr	r2, [r4, #88]
 382 0090 6649     		ldr	r1, .L41+12
 383 0092 0A40     		ands	r2, r1
 384 0094 0631     		adds	r1, r1, #6
 385 0096 FF31     		adds	r1, r1, #255
 386 0098 0A43     		orrs	r2, r1
 387 009a A265     		str	r2, [r4, #88]
 540:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 388              		.loc 1 540 5 view .LVU110
 389              	.LVL28:
 390              	.LBB130:
 391              	.LBI130:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 392              		.loc 2 4656 26 view .LVU111
 393              	.LBB131:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 394              		.loc 2 4658 3 view .LVU112
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 395              		.loc 2 4658 12 is_stmt 0 view .LVU113
 396 009c 9A68     		ldr	r2, [r3, #8]
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 397              		.loc 2 4658 68 view .LVU114
 398 009e D207     		lsls	r2, r2, #31
 399 00a0 52D4     		bmi	.L20
 400              	.LVL29:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 401              		.loc 2 4658 68 view .LVU115
 402              	.LBE131:
 403              	.LBE130:
 550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 404              		.loc 1 550 7 is_stmt 1 view .LVU116
 550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 405              		.loc 1 550 30 is_stmt 0 view .LVU117
 406 00a2 A268     		ldr	r2, [r4, #8]
 551:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 407              		.loc 1 551 20 view .LVU118
 408 00a4 217E     		ldrb	r1, [r4, #24]
 409 00a6 8903     		lsls	r1, r1, #14
 550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 410              		.loc 1 550 83 view .LVU119
 411 00a8 0A43     		orrs	r2, r1
 552:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 412              		.loc 1 552 20 view .LVU120
 413 00aa 617E     		ldrb	r1, [r4, #25]
 414 00ac C903     		lsls	r1, r1, #15
 551:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 109


 415              		.loc 1 551 83 view .LVU121
 416 00ae 0A43     		orrs	r2, r1
 553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 417              		.loc 1 553 20 view .LVU122
 418 00b0 A57E     		ldrb	r5, [r4, #26]
 419              	.LVL30:
 553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 420              		.loc 1 553 20 view .LVU123
 421 00b2 6903     		lsls	r1, r5, #13
 552:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 422              		.loc 1 552 83 view .LVU124
 423 00b4 0A43     		orrs	r2, r1
 554:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 424              		.loc 1 554 20 view .LVU125
 425 00b6 216B     		ldr	r1, [r4, #48]
 426 00b8 0029     		cmp	r1, #0
 427 00ba 01D0     		beq	.L21
 554:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 428              		.loc 1 554 20 discriminator 1 view .LVU126
 429 00bc 8021     		movs	r1, #128
 430 00be 4901     		lsls	r1, r1, #5
 431              	.L21:
 553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 432              		.loc 1 553 83 view .LVU127
 433 00c0 0A43     		orrs	r2, r1
 555:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 434              		.loc 1 555 30 view .LVU128
 435 00c2 E168     		ldr	r1, [r4, #12]
 554:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 436              		.loc 1 554 83 view .LVU129
 437 00c4 0A43     		orrs	r2, r1
 556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 438              		.loc 1 556 20 view .LVU130
 439 00c6 2169     		ldr	r1, [r4, #16]
 440 00c8 0029     		cmp	r1, #0
 441 00ca 69DB     		blt	.L37
 556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 442              		.loc 1 556 20 discriminator 2 view .LVU131
 443 00cc 8021     		movs	r1, #128
 444 00ce 8903     		lsls	r1, r1, #14
 445              	.L22:
 555:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 446              		.loc 1 555 83 view .LVU132
 447 00d0 0A43     		orrs	r2, r1
 557:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 448              		.loc 1 557 20 view .LVU133
 449 00d2 2C21     		movs	r1, #44
 450 00d4 615C     		ldrb	r1, [r4, r1]
 451 00d6 4900     		lsls	r1, r1, #1
 556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 452              		.loc 1 556 83 view .LVU134
 453 00d8 0A43     		orrs	r2, r1
 454              	.LVL31:
 560:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 455              		.loc 1 560 7 is_stmt 1 view .LVU135
 560:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 456              		.loc 1 560 21 is_stmt 0 view .LVU136
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 110


 457 00da 2021     		movs	r1, #32
 458 00dc 615C     		ldrb	r1, [r4, r1]
 560:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 459              		.loc 1 560 10 view .LVU137
 460 00de 0129     		cmp	r1, #1
 461 00e0 61D0     		beq	.L38
 462              	.L23:
 586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 463              		.loc 1 586 7 is_stmt 1 view .LVU138
 586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 464              		.loc 1 586 21 is_stmt 0 view .LVU139
 465 00e2 616A     		ldr	r1, [r4, #36]
 586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 466              		.loc 1 586 10 view .LVU140
 467 00e4 0029     		cmp	r1, #0
 468 00e6 05D0     		beq	.L25
 588:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 469              		.loc 1 588 9 is_stmt 1 view .LVU141
 588:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 470              		.loc 1 588 51 is_stmt 0 view .LVU142
 471 00e8 E025     		movs	r5, #224
 472 00ea 6D00     		lsls	r5, r5, #1
 473 00ec 2940     		ands	r1, r5
 589:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 474              		.loc 1 589 32 view .LVU143
 475 00ee A56A     		ldr	r5, [r4, #40]
 588:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 476              		.loc 1 588 71 view .LVU144
 477 00f0 2943     		orrs	r1, r5
 588:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 478              		.loc 1 588 18 view .LVU145
 479 00f2 0A43     		orrs	r2, r1
 480              	.LVL32:
 481              	.L25:
 593:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_RES     |
 482              		.loc 1 593 7 is_stmt 1 view .LVU146
 483 00f4 D968     		ldr	r1, [r3, #12]
 484 00f6 4E4D     		ldr	r5, .L41+16
 485 00f8 2940     		ands	r1, r5
 486 00fa 0A43     		orrs	r2, r1
 487              	.LVL33:
 593:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR1_RES     |
 488              		.loc 1 593 7 is_stmt 0 view .LVU147
 489 00fc DA60     		str	r2, [r3, #12]
 608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 490              		.loc 1 608 7 is_stmt 1 view .LVU148
 608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 491              		.loc 1 608 31 is_stmt 0 view .LVU149
 492 00fe 6368     		ldr	r3, [r4, #4]
 608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 493              		.loc 1 608 47 view .LVU150
 494 0100 9B0F     		lsrs	r3, r3, #30
 495 0102 9B07     		lsls	r3, r3, #30
 609:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                   );
 496              		.loc 1 609 30 view .LVU151
 497 0104 E26C     		ldr	r2, [r4, #76]
 608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 111


 498              		.loc 1 608 67 view .LVU152
 499 0106 1A43     		orrs	r2, r3
 500              	.LVL34:
 612:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 501              		.loc 1 612 7 is_stmt 1 view .LVU153
 612:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 502              		.loc 1 612 21 is_stmt 0 view .LVU154
 503 0108 3C21     		movs	r1, #60
 504 010a 615C     		ldrb	r1, [r4, r1]
 612:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 505              		.loc 1 612 10 view .LVU155
 506 010c 0129     		cmp	r1, #1
 507 010e 59D0     		beq	.L39
 508              	.LVL35:
 509              	.L26:
 622:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 510              		.loc 1 622 7 is_stmt 1 view .LVU156
 511 0110 2168     		ldr	r1, [r4]
 512 0112 0B69     		ldr	r3, [r1, #16]
 513 0114 474D     		ldr	r5, .L41+20
 514 0116 2B40     		ands	r3, r5
 515 0118 1343     		orrs	r3, r2
 516 011a 0B61     		str	r3, [r1, #16]
 633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 517              		.loc 1 633 7 view .LVU157
 633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 518              		.loc 1 633 23 is_stmt 0 view .LVU158
 519 011c 6368     		ldr	r3, [r4, #4]
 633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 520              		.loc 1 633 10 view .LVU159
 521 011e C022     		movs	r2, #192
 522              	.LVL36:
 633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 523              		.loc 1 633 10 view .LVU160
 524 0120 1206     		lsls	r2, r2, #24
 525 0122 9342     		cmp	r3, r2
 526 0124 10D0     		beq	.L20
 633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 527              		.loc 1 633 69 discriminator 1 view .LVU161
 528 0126 8022     		movs	r2, #128
 529 0128 D205     		lsls	r2, r2, #23
 530 012a 9342     		cmp	r3, r2
 531 012c 0CD0     		beq	.L20
 634:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 532              		.loc 1 634 69 view .LVU162
 533 012e 8022     		movs	r2, #128
 534 0130 1206     		lsls	r2, r2, #24
 535 0132 9342     		cmp	r3, r2
 536 0134 08D0     		beq	.L20
 637:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CCR_PRESC,
 537              		.loc 1 637 9 is_stmt 1 view .LVU163
 538 0136 4049     		ldr	r1, .L41+24
 539 0138 0A68     		ldr	r2, [r1]
 540 013a 404D     		ldr	r5, .L41+28
 541 013c 2A40     		ands	r2, r5
 542 013e F025     		movs	r5, #240
 543 0140 AD03     		lsls	r5, r5, #14
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 112


 544 0142 2B40     		ands	r3, r5
 545 0144 1343     		orrs	r3, r2
 546 0146 0B60     		str	r3, [r1]
 547              	.LVL37:
 548              	.L20:
 644:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 549              		.loc 1 644 5 view .LVU164
 550 0148 2168     		ldr	r1, [r4]
 551 014a 636B     		ldr	r3, [r4, #52]
 552              	.LVL38:
 553              	.LBB132:
 554              	.LBI132:
2537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
 555              		.loc 2 2537 22 view .LVU165
 556              	.LBB133:
2540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 557              		.loc 2 2540 3 view .LVU166
 558 014c 4A69     		ldr	r2, [r1, #20]
 559 014e 0725     		movs	r5, #7
 560 0150 AA43     		bics	r2, r5
 561 0152 1343     		orrs	r3, r2
 562              	.LVL39:
2540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 563              		.loc 2 2540 3 is_stmt 0 view .LVU167
 564 0154 4B61     		str	r3, [r1, #20]
 565              	.LVL40:
2540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 566              		.loc 2 2540 3 view .LVU168
 567              	.LBE133:
 568              	.LBE132:
 645:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 569              		.loc 1 645 5 is_stmt 1 view .LVU169
 570 0156 2168     		ldr	r1, [r4]
 571 0158 A26B     		ldr	r2, [r4, #56]
 572              	.LVL41:
 573              	.LBB134:
 574              	.LBI134:
2537:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                                                           uint32_t SamplingTime)
 575              		.loc 2 2537 22 view .LVU170
 576              	.LBB135:
2540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 577              		.loc 2 2540 3 view .LVU171
 578 015a 4B69     		ldr	r3, [r1, #20]
 579 015c 6935     		adds	r5, r5, #105
 580 015e AB43     		bics	r3, r5
 581 0160 1201     		lsls	r2, r2, #4
 582              	.LVL42:
2540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 583              		.loc 2 2540 3 is_stmt 0 view .LVU172
 584 0162 1343     		orrs	r3, r2
 585 0164 4B61     		str	r3, [r1, #20]
 586              	.LVL43:
2540:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 587              		.loc 2 2540 3 view .LVU173
 588              	.LBE135:
 589              	.LBE134:
 657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 113


 590              		.loc 1 657 5 is_stmt 1 view .LVU174
 657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 591              		.loc 1 657 19 is_stmt 0 view .LVU175
 592 0166 2369     		ldr	r3, [r4, #16]
 657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 593              		.loc 1 657 8 view .LVU176
 594 0168 002B     		cmp	r3, #0
 595 016a 35D1     		bne	.L27
 661:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 596              		.loc 1 661 7 is_stmt 1 view .LVU177
 597 016c 2268     		ldr	r2, [r4]
 598 016e 916A     		ldr	r1, [r2, #40]
 599 0170 103B     		subs	r3, r3, #16
 600 0172 0B43     		orrs	r3, r1
 601 0174 9362     		str	r3, [r2, #40]
 602              	.L28:
 684:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 603              		.loc 1 684 5 view .LVU178
 687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         == hadc->Init.SamplingTimeCommon1)
 604              		.loc 1 687 5 view .LVU179
 687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         == hadc->Init.SamplingTimeCommon1)
 605              		.loc 1 687 50 is_stmt 0 view .LVU180
 606 0176 2368     		ldr	r3, [r4]
 607              	.LVL44:
 608              	.LBB136:
 609              	.LBI136:
2570:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 610              		.loc 2 2570 26 is_stmt 1 view .LVU181
 611              	.LBB137:
2572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 612              		.loc 2 2572 3 view .LVU182
2572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 613              		.loc 2 2572 22 is_stmt 0 view .LVU183
 614 0178 5A69     		ldr	r2, [r3, #20]
 615 017a 0723     		movs	r3, #7
 616              	.LVL45:
2572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 617              		.loc 2 2572 22 view .LVU184
 618 017c 1340     		ands	r3, r2
 619              	.LVL46:
2572:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 620              		.loc 2 2572 22 view .LVU185
 621              	.LBE137:
 622              	.LBE136:
 688:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 623              		.loc 1 688 22 view .LVU186
 624 017e 626B     		ldr	r2, [r4, #52]
 687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         == hadc->Init.SamplingTimeCommon1)
 625              		.loc 1 687 8 view .LVU187
 626 0180 9A42     		cmp	r2, r3
 627 0182 3BD0     		beq	.L40
 701:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 628              		.loc 1 701 7 is_stmt 1 view .LVU188
 629 0184 A36D     		ldr	r3, [r4, #88]
 630 0186 1222     		movs	r2, #18
 631 0188 9343     		bics	r3, r2
 632 018a 023A     		subs	r2, r2, #2
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 114


 633 018c 1343     		orrs	r3, r2
 634 018e A365     		str	r3, [r4, #88]
 706:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 635              		.loc 1 706 7 view .LVU189
 636 0190 E36D     		ldr	r3, [r4, #92]
 637 0192 0F3A     		subs	r2, r2, #15
 638 0194 1343     		orrs	r3, r2
 639 0196 E365     		str	r3, [r4, #92]
 708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 640              		.loc 1 708 7 view .LVU190
 641              	.LVL47:
 708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 642              		.loc 1 708 22 is_stmt 0 view .LVU191
 643 0198 0120     		movs	r0, #1
 644 019a 3DE0     		b	.L12
 645              	.LVL48:
 646              	.L31:
 389:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 647              		.loc 1 389 21 view .LVU192
 648 019c 0020     		movs	r0, #0
 649 019e 68E7     		b	.L17
 650              	.LVL49:
 651              	.L37:
 556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 652              		.loc 1 556 20 discriminator 1 view .LVU193
 653 01a0 4900     		lsls	r1, r1, #1
 654 01a2 4908     		lsrs	r1, r1, #1
 655 01a4 94E7     		b	.L22
 656              	.LVL50:
 657              	.L38:
 562:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 658              		.loc 1 562 9 is_stmt 1 view .LVU194
 562:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 659              		.loc 1 562 12 is_stmt 0 view .LVU195
 660 01a6 002D     		cmp	r5, #0
 661 01a8 03D1     		bne	.L24
 565:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 662              		.loc 1 565 11 is_stmt 1 view .LVU196
 565:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 663              		.loc 1 565 20 is_stmt 0 view .LVU197
 664 01aa 8021     		movs	r1, #128
 665 01ac 4902     		lsls	r1, r1, #9
 666 01ae 0A43     		orrs	r2, r1
 667              	.LVL51:
 565:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 668              		.loc 1 565 20 view .LVU198
 669 01b0 97E7     		b	.L23
 670              	.L24:
 574:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 671              		.loc 1 574 11 is_stmt 1 view .LVU199
 672 01b2 A16D     		ldr	r1, [r4, #88]
 673 01b4 2025     		movs	r5, #32
 674 01b6 2943     		orrs	r1, r5
 675 01b8 A165     		str	r1, [r4, #88]
 577:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 676              		.loc 1 577 11 view .LVU200
 677 01ba E16D     		ldr	r1, [r4, #92]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 115


 678 01bc 1F3D     		subs	r5, r5, #31
 679 01be 2943     		orrs	r1, r5
 680 01c0 E165     		str	r1, [r4, #92]
 681 01c2 8EE7     		b	.L23
 682              	.LVL52:
 683              	.L39:
 614:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 684              		.loc 1 614 9 view .LVU201
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 685              		.loc 1 616 45 is_stmt 0 view .LVU202
 686 01c4 216C     		ldr	r1, [r4, #64]
 615:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.Oversampling.Ratio         |
 687              		.loc 1 615 69 view .LVU203
 688 01c6 0B43     		orrs	r3, r1
 617:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 689              		.loc 1 617 45 view .LVU204
 690 01c8 616C     		ldr	r1, [r4, #68]
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 691              		.loc 1 616 60 view .LVU205
 692 01ca 0B43     		orrs	r3, r1
 618:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                     );
 693              		.loc 1 618 45 view .LVU206
 694 01cc A16C     		ldr	r1, [r4, #72]
 617:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 695              		.loc 1 617 60 view .LVU207
 696 01ce 0B43     		orrs	r3, r1
 614:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 697              		.loc 1 614 18 view .LVU208
 698 01d0 1343     		orrs	r3, r2
 699 01d2 0122     		movs	r2, #1
 700              	.LVL53:
 614:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 701              		.loc 1 614 18 view .LVU209
 702 01d4 1A43     		orrs	r2, r3
 703 01d6 9BE7     		b	.L26
 704              	.LVL54:
 705              	.L27:
 664:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 706              		.loc 1 664 10 is_stmt 1 view .LVU210
 664:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 707              		.loc 1 664 13 is_stmt 0 view .LVU211
 708 01d8 8022     		movs	r2, #128
 709 01da 9203     		lsls	r2, r2, #14
 710 01dc 9342     		cmp	r3, r2
 711 01de CAD1     		bne	.L28
 675:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ADC_CHSELR_SQ_ALL,
 712              		.loc 1 675 7 is_stmt 1 view .LVU212
 713 01e0 2168     		ldr	r1, [r4]
 714 01e2 8B6A     		ldr	r3, [r1, #40]
 715 01e4 E369     		ldr	r3, [r4, #28]
 716 01e6 013B     		subs	r3, r3, #1
 717 01e8 9B00     		lsls	r3, r3, #2
 718 01ea 1C22     		movs	r2, #28
 719 01ec 1A40     		ands	r2, r3
 720 01ee 1023     		movs	r3, #16
 721 01f0 5B42     		rsbs	r3, r3, #0
 722 01f2 9340     		lsls	r3, r3, r2
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 116


 723 01f4 226E     		ldr	r2, [r4, #96]
 724 01f6 1343     		orrs	r3, r2
 725 01f8 8B62     		str	r3, [r1, #40]
 726 01fa BCE7     		b	.L28
 727              	.L40:
 691:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 728              		.loc 1 691 7 view .LVU213
 729 01fc 0023     		movs	r3, #0
 730 01fe E365     		str	r3, [r4, #92]
 694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 731              		.loc 1 694 7 view .LVU214
 732 0200 A36D     		ldr	r3, [r4, #88]
 733 0202 0322     		movs	r2, #3
 734 0204 9343     		bics	r3, r2
 735 0206 023A     		subs	r2, r2, #2
 736 0208 1343     		orrs	r3, r2
 737 020a A365     		str	r3, [r4, #88]
 738 020c 04E0     		b	.L12
 739              	.LVL55:
 740              	.L19:
 715:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 741              		.loc 1 715 5 view .LVU215
 742 020e A36D     		ldr	r3, [r4, #88]
 743 0210 1022     		movs	r2, #16
 744 0212 1343     		orrs	r3, r2
 745 0214 A365     		str	r3, [r4, #88]
 717:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 746              		.loc 1 717 5 view .LVU216
 747              	.LVL56:
 717:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 748              		.loc 1 717 20 is_stmt 0 view .LVU217
 749 0216 0120     		movs	r0, #1
 750              	.LVL57:
 751              	.L12:
 722:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 752              		.loc 1 722 1 view .LVU218
 753 0218 03B0     		add	sp, sp, #12
 754              		@ sp needed
 755              	.LVL58:
 722:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 756              		.loc 1 722 1 view .LVU219
 757 021a 30BD     		pop	{r4, r5, pc}
 758              	.LVL59:
 759              	.L30:
 398:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 760              		.loc 1 398 12 view .LVU220
 761 021c 0120     		movs	r0, #1
 762              	.LVL60:
 398:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 763              		.loc 1 398 12 view .LVU221
 764 021e FBE7     		b	.L12
 765              	.L42:
 766              		.align	2
 767              	.L41:
 768 0220 E8FFFF6F 		.word	1879048168
 769 0224 00000000 		.word	SystemCoreClock
 770 0228 400D0300 		.word	200000
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 117


 771 022c FDFEFFFF 		.word	-259
 772 0230 0102DEFF 		.word	-2227711
 773 0234 02FCFF1F 		.word	536869890
 774 0238 08270140 		.word	1073817352
 775 023c FFFFC3FF 		.word	-3932161
 776              		.cfi_endproc
 777              	.LFE342:
 779              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 780              		.align	1
 781              		.weak	HAL_ADC_MspDeInit
 782              		.syntax unified
 783              		.code	16
 784              		.thumb_func
 786              	HAL_ADC_MspDeInit:
 787              	.LVL61:
 788              	.LFB345:
 883:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 884:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
 885:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 886:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
 887:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 888:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
 890:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 891:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 892:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 789              		.loc 1 892 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 893:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 894:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   UNUSED(hadc);
 794              		.loc 1 894 3 view .LVU223
 895:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 896:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 897:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 898:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****    */
 899:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 795              		.loc 1 899 1 is_stmt 0 view .LVU224
 796              		@ sp needed
 797 0000 7047     		bx	lr
 798              		.cfi_endproc
 799              	.LFE345:
 801              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 802              		.align	1
 803              		.global	HAL_ADC_PollForConversion
 804              		.syntax unified
 805              		.code	16
 806              		.thumb_func
 808              	HAL_ADC_PollForConversion:
 809              	.LVL62:
 810              	.LFB348:
 900:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 901:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 902:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
 903:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Register a User ADC Callback
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 118


 904:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 905:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 906:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 907:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 908:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         This parameter can be one of the following values:
 909:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 910:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 911:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 912:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 913:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 914:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 916:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 917:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 918:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 919:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 920:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 921:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
 922:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
 923:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 924:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 925:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 926:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 927:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 928:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (pCallback == NULL)
 929:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 930:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update the error code */
 931:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 933:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     return HAL_ERROR;
 934:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 935:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 936:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 937:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 938:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     switch (CallbackID)
 939:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 941:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 942:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 943:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 944:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 945:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 946:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 947:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 948:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 949:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 950:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 951:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 952:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 953:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 954:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 955:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 956:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 957:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
 958:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 959:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 960:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 119


 961:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
 962:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 963:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 964:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
 965:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
 966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 967:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 968:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 969:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 970:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 971:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 972:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 973:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 974:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 975:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 976:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       default :
 977:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update the error code */
 978:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 979:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 980:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Return error status */
 981:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         status = HAL_ERROR;
 982:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 983:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 984:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 985:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 986:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 987:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     switch (CallbackID)
 988:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 989:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 990:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 991:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 992:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 993:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 994:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 995:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
 996:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 997:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       default :
 998:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update the error code */
 999:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1000:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1001:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Return error status */
1002:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         status = HAL_ERROR;
1003:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1004:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1005:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1006:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
1007:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1008:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update the error code */
1009:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1010:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1011:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Return error status */
1012:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     status =  HAL_ERROR;
1013:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1014:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1015:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return status;
1016:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
1017:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 120


1018:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1019:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1020:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1021:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1022:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1023:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1024:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         This parameter can be one of the following values:
1025:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1026:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1027:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1028:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1029:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1030:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1031:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1032:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1033:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1034:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1035:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1036:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
1037:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1038:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1039:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
1040:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1041:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1042:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0)
1043:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1044:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     switch (CallbackID)
1045:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1046:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1047:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1048:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1049:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1050:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1051:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1052:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1053:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1054:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1055:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1056:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1057:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1058:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1059:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1060:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1061:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1062:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1063:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1064:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1065:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1066:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1067:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1068:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1069:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1070:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1071:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1072:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1073:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1074:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 121


1075:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1076:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1077:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1078:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1079:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1080:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1081:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1082:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       default :
1083:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update the error code */
1084:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1085:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1086:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Return error status */
1087:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         status =  HAL_ERROR;
1088:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1089:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1090:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1091:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1092:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1093:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     switch (CallbackID)
1094:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1095:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1096:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1097:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1098:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1099:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1100:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1101:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1102:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1103:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       default :
1104:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update the error code */
1105:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1106:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1107:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Return error status */
1108:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         status =  HAL_ERROR;
1109:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         break;
1110:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1111:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1112:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
1113:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1114:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update the error code */
1115:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1116:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1117:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Return error status */
1118:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     status =  HAL_ERROR;
1119:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1120:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1121:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return status;
1122:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
1123:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1124:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1125:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1126:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1127:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @}
1128:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1129:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1130:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1131:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *  @brief    ADC IO operation functions
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 122


1132:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *
1133:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** @verbatim
1134:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****  ===============================================================================
1135:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                       ##### IO operation functions #####
1136:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****  ===============================================================================
1137:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1138:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Start conversion of regular group.
1139:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Stop conversion of regular group.
1140:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1141:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Poll for conversion event.
1142:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1143:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1144:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1145:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Handle ADC interrupt request
1146:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1147:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** @endverbatim
1149:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
1150:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1151:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1152:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1153:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1154:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1155:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1156:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
1157:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1158:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1159:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
1160:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1161:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1162:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1163:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1164:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1165:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1167:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1168:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Process locked */
1169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1170:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1171:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1172:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1173:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1174:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1175:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1176:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1177:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state                                                        */
1178:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1179:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1180:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1181:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1182:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1183:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1184:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC error code */
1185:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1187:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 123


1189:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1191:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1192:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Process unlocked */
1193:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1194:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1195:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1196:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1197:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1198:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1199:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1200:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* trigger event.                                                       */
1201:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1202:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1203:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1204:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
1205:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1206:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Process unlocked */
1207:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1208:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1209:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1210:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
1211:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1212:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1213:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1214:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1215:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
1216:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
1217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
1218:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1219:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1220:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1221:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1222:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1223:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1224:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1225:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1226:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status.
1227:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1228:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1229:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
1230:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1231:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1232:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1233:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1234:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1235:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process locked */
1236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1237:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1238:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1239:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1240:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1241:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1242:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1243:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1244:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1245:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 124


1246:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1247:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1248:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1249:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1250:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
1251:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1252:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1253:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1254:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1255:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1256:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1257:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process unlocked */
1258:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1259:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
1261:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
1262:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
1263:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1264:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1265:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1266:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1267:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1268:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1269:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1270:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1271:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1272:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1273:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1274:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1275:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1276:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1277:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1278:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1279:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1280:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
1281:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1283:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 811              		.loc 1 1283 1 is_stmt 1 view -0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		.loc 1 1283 1 is_stmt 0 view .LVU226
 816 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 817              		.cfi_def_cfa_offset 24
 818              		.cfi_offset 3, -24
 819              		.cfi_offset 4, -20
 820              		.cfi_offset 5, -16
 821              		.cfi_offset 6, -12
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0002 0400     		movs	r4, r0
 825 0004 0D00     		movs	r5, r1
1284:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
 826              		.loc 1 1284 3 is_stmt 1 view .LVU227
1285:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_Flag_End;
 827              		.loc 1 1285 3 view .LVU228
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 125


1286:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1287:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1288:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 828              		.loc 1 1288 3 view .LVU229
1289:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1290:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1291:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 829              		.loc 1 1291 3 view .LVU230
 830              		.loc 1 1291 17 is_stmt 0 view .LVU231
 831 0006 4669     		ldr	r6, [r0, #20]
 832              		.loc 1 1291 6 view .LVU232
 833 0008 082E     		cmp	r6, #8
 834 000a 04D0     		beq	.L45
1292:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1293:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1294:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1295:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1296:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1297:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1298:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1299:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* each conversion:                                                       */
1300:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1301:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1302:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1303:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1304:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) != 0UL)
 835              		.loc 1 1304 5 is_stmt 1 view .LVU233
 836              		.loc 1 1304 14 is_stmt 0 view .LVU234
 837 000c 0368     		ldr	r3, [r0]
 838              		.loc 1 1304 24 view .LVU235
 839 000e DB68     		ldr	r3, [r3, #12]
 840              		.loc 1 1304 8 view .LVU236
 841 0010 DB07     		lsls	r3, r3, #31
 842 0012 19D4     		bmi	.L57
1305:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1306:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Update ADC state machine to error */
1307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1308:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1309:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       return HAL_ERROR;
1310:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1311:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
1312:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1313:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
 843              		.loc 1 1313 20 view .LVU237
 844 0014 0426     		movs	r6, #4
 845              	.L45:
 846              	.LVL63:
1314:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1315:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1316:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1317:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Get tick count */
1318:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   tickstart = HAL_GetTick();
 847              		.loc 1 1318 3 is_stmt 1 view .LVU238
 848              		.loc 1 1318 15 is_stmt 0 view .LVU239
 849 0016 FFF7FEFF 		bl	HAL_GetTick
 850              	.LVL64:
 851              		.loc 1 1318 15 view .LVU240
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 126


 852 001a 0700     		movs	r7, r0
 853              	.LVL65:
1319:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1321:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 854              		.loc 1 1321 3 is_stmt 1 view .LVU241
 855              	.L48:
 856              		.loc 1 1321 47 view .LVU242
 857              		.loc 1 1321 15 is_stmt 0 view .LVU243
 858 001c 2368     		ldr	r3, [r4]
 859              		.loc 1 1321 25 view .LVU244
 860 001e 1A68     		ldr	r2, [r3]
 861              		.loc 1 1321 47 view .LVU245
 862 0020 1642     		tst	r6, r2
 863 0022 17D1     		bne	.L58
1322:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1323:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1324:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 864              		.loc 1 1324 5 is_stmt 1 view .LVU246
 865              		.loc 1 1324 8 is_stmt 0 view .LVU247
 866 0024 6B1C     		adds	r3, r5, #1
 867 0026 F9D0     		beq	.L48
1325:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1326:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 868              		.loc 1 1326 7 is_stmt 1 view .LVU248
 869              		.loc 1 1326 13 is_stmt 0 view .LVU249
 870 0028 FFF7FEFF 		bl	HAL_GetTick
 871              	.LVL66:
 872              		.loc 1 1326 27 discriminator 1 view .LVU250
 873 002c C01B     		subs	r0, r0, r7
 874              		.loc 1 1326 10 discriminator 1 view .LVU251
 875 002e A842     		cmp	r0, r5
 876 0030 01D8     		bhi	.L49
 877              		.loc 1 1326 51 discriminator 1 view .LVU252
 878 0032 002D     		cmp	r5, #0
 879 0034 F2D1     		bne	.L48
 880              	.L49:
1327:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1329:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 881              		.loc 1 1329 9 is_stmt 1 view .LVU253
 882 0036 A36D     		ldr	r3, [r4, #88]
 883 0038 0422     		movs	r2, #4
 884 003a 1343     		orrs	r3, r2
 885 003c A365     		str	r3, [r4, #88]
1330:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1331:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Process unlocked */
1332:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 886              		.loc 1 1332 9 view .LVU254
 887              		.loc 1 1332 9 view .LVU255
 888 003e 5423     		movs	r3, #84
 889 0040 0022     		movs	r2, #0
 890 0042 E254     		strb	r2, [r4, r3]
 891              		.loc 1 1332 9 view .LVU256
1333:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1334:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         return HAL_TIMEOUT;
 892              		.loc 1 1334 9 view .LVU257
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 127


 893              		.loc 1 1334 16 is_stmt 0 view .LVU258
 894 0044 0320     		movs	r0, #3
 895 0046 29E0     		b	.L46
 896              	.LVL67:
 897              	.L57:
1307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 898              		.loc 1 1307 7 is_stmt 1 view .LVU259
 899 0048 836D     		ldr	r3, [r0, #88]
 900 004a 2022     		movs	r2, #32
 901 004c 1343     		orrs	r3, r2
 902 004e 8365     		str	r3, [r0, #88]
1309:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 903              		.loc 1 1309 7 view .LVU260
1309:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 904              		.loc 1 1309 14 is_stmt 0 view .LVU261
 905 0050 0120     		movs	r0, #1
 906              	.LVL68:
1309:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 907              		.loc 1 1309 14 view .LVU262
 908 0052 23E0     		b	.L46
 909              	.LVL69:
 910              	.L58:
1335:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1336:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1337:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1338:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1339:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Update ADC state machine */
1340:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 911              		.loc 1 1340 3 is_stmt 1 view .LVU263
 912 0054 A16D     		ldr	r1, [r4, #88]
 913 0056 8022     		movs	r2, #128
 914 0058 9200     		lsls	r2, r2, #2
 915 005a 0A43     		orrs	r2, r1
 916 005c A265     		str	r2, [r4, #88]
1341:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1342:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1343:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1344:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 917              		.loc 1 1344 3 view .LVU264
 918              	.LVL70:
 919              	.LBB138:
 920              	.LBI138:
2672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 921              		.loc 2 2672 26 view .LVU265
 922              	.LBB139:
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 923              		.loc 2 2674 3 view .LVU266
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 924              		.loc 2 2674 12 is_stmt 0 view .LVU267
 925 005e D968     		ldr	r1, [r3, #12]
 926 0060 C022     		movs	r2, #192
 927 0062 1201     		lsls	r2, r2, #4
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 928              		.loc 2 2674 106 view .LVU268
 929 0064 1142     		tst	r1, r2
 930 0066 13D1     		bne	.L51
 931              	.LVL71:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 128


2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 932              		.loc 2 2674 106 view .LVU269
 933              	.LBE139:
 934              	.LBE138:
1345:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 935              		.loc 1 1345 21 view .LVU270
 936 0068 A27E     		ldrb	r2, [r4, #26]
 937              		.loc 1 1345 7 view .LVU271
 938 006a 002A     		cmp	r2, #0
 939 006c 10D1     		bne	.L51
1346:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      )
1347:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1348:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1349:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 940              		.loc 1 1349 5 is_stmt 1 view .LVU272
 941              		.loc 1 1349 9 is_stmt 0 view .LVU273
 942 006e 1A68     		ldr	r2, [r3]
 943              		.loc 1 1349 8 view .LVU274
 944 0070 1207     		lsls	r2, r2, #28
 945 0072 0DD5     		bpl	.L51
1350:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1351:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
1352:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* ADSTART==0 (no conversion on going)                                  */
1353:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 946              		.loc 1 1353 7 is_stmt 1 view .LVU275
 947              	.LVL72:
 948              	.LBB140:
 949              	.LBI140:
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 950              		.loc 2 4783 26 view .LVU276
 951              	.LBB141:
 952              		.loc 2 4785 3 view .LVU277
 953              		.loc 2 4785 12 is_stmt 0 view .LVU278
 954 0074 9A68     		ldr	r2, [r3, #8]
 955              		.loc 2 4785 74 view .LVU279
 956 0076 5207     		lsls	r2, r2, #29
 957 0078 11D4     		bmi	.L52
 958              	.LVL73:
 959              		.loc 2 4785 74 view .LVU280
 960              	.LBE141:
 961              	.LBE140:
1354:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1355:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Disable ADC end of single conversion interrupt on group regular */
1356:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1357:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* HAL_Start_IT(), but is not disabled here because can be used       */
1358:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* by overrun IRQ process below.                                      */
1359:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 962              		.loc 1 1359 9 is_stmt 1 view .LVU281
 963 007a 5A68     		ldr	r2, [r3, #4]
 964 007c 0C21     		movs	r1, #12
 965 007e 8A43     		bics	r2, r1
 966 0080 5A60     		str	r2, [r3, #4]
1360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1361:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Set ADC state */
1362:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
 967              		.loc 1 1362 9 view .LVU282
 968 0082 A36D     		ldr	r3, [r4, #88]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 129


 969 0084 0B4A     		ldr	r2, .L59
 970 0086 1340     		ands	r3, r2
 971 0088 0432     		adds	r2, r2, #4
 972 008a FF32     		adds	r2, r2, #255
 973 008c 1343     		orrs	r3, r2
 974 008e A365     		str	r3, [r4, #88]
 975              	.L51:
1363:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
1364:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                           HAL_ADC_STATE_READY);
1365:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1366:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       else
1367:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1368:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Change ADC state to error state */
1369:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1370:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1371:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
1372:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1373:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1374:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1375:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1376:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1377:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Clear end of conversion flag of regular group if low power feature       */
1378:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
1379:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
1380:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (hadc->Init.LowPowerAutoWait == DISABLE)
 976              		.loc 1 1380 3 view .LVU283
 977              		.loc 1 1380 17 is_stmt 0 view .LVU284
 978 0090 207E     		ldrb	r0, [r4, #24]
 979              		.loc 1 1380 6 view .LVU285
 980 0092 0028     		cmp	r0, #0
 981 0094 0CD1     		bne	.L54
1381:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1382:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1383:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 982              		.loc 1 1383 5 is_stmt 1 view .LVU286
 983 0096 2368     		ldr	r3, [r4]
 984 0098 0C22     		movs	r2, #12
 985 009a 1A60     		str	r2, [r3]
 986              	.LVL74:
 987              	.L46:
1384:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1385:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1386:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
1387:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return HAL_OK;
1388:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 988              		.loc 1 1388 1 is_stmt 0 view .LVU287
 989              		@ sp needed
 990              	.LVL75:
 991              	.LVL76:
 992              		.loc 1 1388 1 view .LVU288
 993 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 994              	.LVL77:
 995              	.L52:
1369:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 996              		.loc 1 1369 9 is_stmt 1 view .LVU289
 997 009e A36D     		ldr	r3, [r4, #88]
 998 00a0 2022     		movs	r2, #32
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 130


 999 00a2 1343     		orrs	r3, r2
 1000 00a4 A365     		str	r3, [r4, #88]
1372:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 1001              		.loc 1 1372 9 view .LVU290
 1002 00a6 E36D     		ldr	r3, [r4, #92]
 1003 00a8 1F3A     		subs	r2, r2, #31
 1004 00aa 1343     		orrs	r3, r2
 1005 00ac E365     		str	r3, [r4, #92]
 1006 00ae EFE7     		b	.L51
 1007              	.L54:
1387:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1008              		.loc 1 1387 10 is_stmt 0 view .LVU291
 1009 00b0 0020     		movs	r0, #0
 1010 00b2 F3E7     		b	.L46
 1011              	.L60:
 1012              		.align	2
 1013              	.L59:
 1014 00b4 FEFEFFFF 		.word	-258
 1015              		.cfi_endproc
 1016              	.LFE348:
 1018              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1019              		.align	1
 1020              		.global	HAL_ADC_PollForEvent
 1021              		.syntax unified
 1022              		.code	16
 1023              		.thumb_func
 1025              	HAL_ADC_PollForEvent:
 1026              	.LVL78:
 1027              	.LFB349:
1389:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1391:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Poll for ADC event.
1392:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1393:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param EventType the ADC event type.
1394:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          This parameter can be one of the following values:
1395:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1397:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *                                       all STM32 devices)
1398:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1399:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *                                       all STM32 families)
1400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1401:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *                                       all STM32 families)
1402:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1403:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1404:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1405:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1406:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1407:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1408:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1409:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1410:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
1411:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1412:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1413:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 1028              		.loc 1 1413 1 is_stmt 1 view -0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 131


 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              		.loc 1 1413 1 is_stmt 0 view .LVU293
 1033 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1034              		.cfi_def_cfa_offset 24
 1035              		.cfi_offset 3, -24
 1036              		.cfi_offset 4, -20
 1037              		.cfi_offset 5, -16
 1038              		.cfi_offset 6, -12
 1039              		.cfi_offset 7, -8
 1040              		.cfi_offset 14, -4
 1041 0002 0500     		movs	r5, r0
 1042 0004 0C00     		movs	r4, r1
 1043 0006 1600     		movs	r6, r2
1414:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
 1044              		.loc 1 1414 3 is_stmt 1 view .LVU294
1415:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1416:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1417:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1045              		.loc 1 1417 3 view .LVU295
1418:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 1046              		.loc 1 1418 3 view .LVU296
1419:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1420:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Get tick count */
1421:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   tickstart = HAL_GetTick();
 1047              		.loc 1 1421 3 view .LVU297
 1048              		.loc 1 1421 15 is_stmt 0 view .LVU298
 1049 0008 FFF7FEFF 		bl	HAL_GetTick
 1050              	.LVL79:
 1051              		.loc 1 1421 15 view .LVU299
 1052 000c 0700     		movs	r7, r0
 1053              	.LVL80:
1422:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1423:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check selected event flag */
1424:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 1054              		.loc 1 1424 3 is_stmt 1 view .LVU300
 1055              	.L63:
 1056              		.loc 1 1424 46 view .LVU301
 1057              		.loc 1 1424 10 is_stmt 0 view .LVU302
 1058 000e 2968     		ldr	r1, [r5]
 1059 0010 0B68     		ldr	r3, [r1]
 1060 0012 2340     		ands	r3, r4
 1061              		.loc 1 1424 46 view .LVU303
 1062 0014 A342     		cmp	r3, r4
 1063 0016 11D0     		beq	.L75
1425:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1426:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1427:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 1064              		.loc 1 1427 5 is_stmt 1 view .LVU304
 1065              		.loc 1 1427 8 is_stmt 0 view .LVU305
 1066 0018 731C     		adds	r3, r6, #1
 1067 001a F8D0     		beq	.L63
1428:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1429:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 1068              		.loc 1 1429 7 is_stmt 1 view .LVU306
 1069              		.loc 1 1429 13 is_stmt 0 view .LVU307
 1070 001c FFF7FEFF 		bl	HAL_GetTick
 1071              	.LVL81:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 132


 1072              		.loc 1 1429 27 discriminator 1 view .LVU308
 1073 0020 C01B     		subs	r0, r0, r7
 1074              		.loc 1 1429 10 discriminator 1 view .LVU309
 1075 0022 B042     		cmp	r0, r6
 1076 0024 01D8     		bhi	.L64
 1077              		.loc 1 1429 51 discriminator 1 view .LVU310
 1078 0026 002E     		cmp	r6, #0
 1079 0028 F1D1     		bne	.L63
 1080              	.L64:
1430:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1431:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1432:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1081              		.loc 1 1432 9 is_stmt 1 view .LVU311
 1082 002a AB6D     		ldr	r3, [r5, #88]
 1083 002c 0422     		movs	r2, #4
 1084 002e 1343     		orrs	r3, r2
 1085 0030 AB65     		str	r3, [r5, #88]
1433:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1434:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Process unlocked */
1435:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 1086              		.loc 1 1435 9 view .LVU312
 1087              		.loc 1 1435 9 view .LVU313
 1088 0032 5423     		movs	r3, #84
 1089 0034 0022     		movs	r2, #0
 1090 0036 EA54     		strb	r2, [r5, r3]
 1091              		.loc 1 1435 9 view .LVU314
1436:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1437:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         return HAL_TIMEOUT;
 1092              		.loc 1 1437 9 view .LVU315
 1093              		.loc 1 1437 16 is_stmt 0 view .LVU316
 1094 0038 0320     		movs	r0, #3
 1095 003a 27E0     		b	.L65
 1096              	.L75:
1438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1439:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1440:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1441:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1442:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   switch (EventType)
 1097              		.loc 1 1442 3 is_stmt 1 view .LVU317
 1098 003c 8023     		movs	r3, #128
 1099 003e 5B00     		lsls	r3, r3, #1
 1100 0040 9C42     		cmp	r4, r3
 1101 0042 24D0     		beq	.L67
 1102 0044 0CD8     		bhi	.L68
 1103 0046 022C     		cmp	r4, #2
 1104 0048 18D0     		beq	.L69
 1105 004a 802C     		cmp	r4, #128
 1106 004c 29D1     		bne	.L71
1443:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1444:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* End Of Sampling event */
1445:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1446:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
1447:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1448:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1449:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1450:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1451:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 133


1452:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       break;
1453:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1454:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1455:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1456:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1457:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1458:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* For example:                                                             */
1459:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1461:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1462:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1463:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1464:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     case ADC_AWD_EVENT:
1465:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
1466:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1107              		.loc 1 1466 7 view .LVU318
 1108 004e AA6D     		ldr	r2, [r5, #88]
 1109 0050 8023     		movs	r3, #128
 1110 0052 5B02     		lsls	r3, r3, #9
 1111 0054 1343     		orrs	r3, r2
 1112 0056 AB65     		str	r3, [r5, #88]
1467:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1468:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1469:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 1113              		.loc 1 1469 7 view .LVU319
 1114 0058 8023     		movs	r3, #128
 1115 005a 0B60     		str	r3, [r1]
1470:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       break;
 1116              		.loc 1 1471 7 view .LVU320
1472:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1473:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1474:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1475:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
1476:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1477:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1478:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1479:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1480:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       break;
1482:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1483:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1484:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
1486:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1487:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1489:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1490:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       break;
1492:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Overrun event */
1494:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1495:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1496:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* considered as an error.                                                */
1497:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1498:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* overrun ")                                                             */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 134


1499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1500:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1501:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Set ADC state */
1502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1503:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Set ADC error code to overrun */
1505:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1506:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       else
1508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1509:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1510:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1511:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****            as OVR is cleared. */
1512:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1513:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1514:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       break;
1515:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1516:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1517:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
1518:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return HAL_OK;
 1117              		.loc 1 1518 10 is_stmt 0 view .LVU321
 1118 005c 0020     		movs	r0, #0
1471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1119              		.loc 1 1471 7 view .LVU322
 1120 005e 15E0     		b	.L65
 1121              	.L68:
1442:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1122              		.loc 1 1442 3 view .LVU323
 1123 0060 8023     		movs	r3, #128
 1124 0062 9B00     		lsls	r3, r3, #2
 1125 0064 9C42     		cmp	r4, r3
 1126 0066 1CD1     		bne	.L71
1486:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1127              		.loc 1 1486 7 is_stmt 1 view .LVU324
 1128 0068 AA6D     		ldr	r2, [r5, #88]
 1129 006a 8023     		movs	r3, #128
 1130 006c DB02     		lsls	r3, r3, #11
 1131 006e 1343     		orrs	r3, r2
 1132 0070 AB65     		str	r3, [r5, #88]
1489:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1133              		.loc 1 1489 7 view .LVU325
 1134 0072 8023     		movs	r3, #128
 1135 0074 9B00     		lsls	r3, r3, #2
 1136 0076 0B60     		str	r3, [r1]
1491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1137              		.loc 1 1491 7 view .LVU326
 1138              		.loc 1 1518 10 is_stmt 0 view .LVU327
 1139 0078 0020     		movs	r0, #0
1491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1140              		.loc 1 1491 7 view .LVU328
 1141 007a 07E0     		b	.L65
 1142              	.L69:
1447:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1143              		.loc 1 1447 7 is_stmt 1 view .LVU329
 1144 007c AA6D     		ldr	r2, [r5, #88]
 1145 007e 8023     		movs	r3, #128
 1146 0080 1B01     		lsls	r3, r3, #4
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 135


 1147 0082 1343     		orrs	r3, r2
 1148 0084 AB65     		str	r3, [r5, #88]
1450:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1149              		.loc 1 1450 7 view .LVU330
 1150 0086 0223     		movs	r3, #2
 1151 0088 0B60     		str	r3, [r1]
1452:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1152              		.loc 1 1452 7 view .LVU331
 1153              		.loc 1 1518 10 is_stmt 0 view .LVU332
 1154 008a 0020     		movs	r0, #0
 1155              	.L65:
1519:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1156              		.loc 1 1519 1 view .LVU333
 1157              		@ sp needed
 1158              	.LVL82:
 1159              	.LVL83:
 1160              	.LVL84:
 1161              	.LVL85:
 1162              		.loc 1 1519 1 view .LVU334
 1163 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1164              	.LVL86:
 1165              	.L67:
1476:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1166              		.loc 1 1476 7 is_stmt 1 view .LVU335
 1167 008e AA6D     		ldr	r2, [r5, #88]
 1168 0090 8023     		movs	r3, #128
 1169 0092 9B02     		lsls	r3, r3, #10
 1170 0094 1343     		orrs	r3, r2
 1171 0096 AB65     		str	r3, [r5, #88]
1479:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1172              		.loc 1 1479 7 view .LVU336
 1173 0098 8023     		movs	r3, #128
 1174 009a 5B00     		lsls	r3, r3, #1
 1175 009c 0B60     		str	r3, [r1]
1481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1176              		.loc 1 1481 7 view .LVU337
1518:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1177              		.loc 1 1518 10 is_stmt 0 view .LVU338
 1178 009e 0020     		movs	r0, #0
1481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1179              		.loc 1 1481 7 view .LVU339
 1180 00a0 F4E7     		b	.L65
 1181              	.L71:
1499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1182              		.loc 1 1499 7 is_stmt 1 view .LVU340
1499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1183              		.loc 1 1499 21 is_stmt 0 view .LVU341
 1184 00a2 2B6B     		ldr	r3, [r5, #48]
1499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1185              		.loc 1 1499 10 view .LVU342
 1186 00a4 002B     		cmp	r3, #0
 1187 00a6 0AD1     		bne	.L73
1502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1188              		.loc 1 1502 9 is_stmt 1 view .LVU343
 1189 00a8 AA6D     		ldr	r2, [r5, #88]
 1190 00aa 8023     		movs	r3, #128
 1191 00ac DB00     		lsls	r3, r3, #3
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 136


 1192 00ae 1343     		orrs	r3, r2
 1193 00b0 AB65     		str	r3, [r5, #88]
1505:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 1194              		.loc 1 1505 9 view .LVU344
 1195 00b2 EB6D     		ldr	r3, [r5, #92]
 1196 00b4 0222     		movs	r2, #2
 1197 00b6 1343     		orrs	r3, r2
 1198 00b8 EB65     		str	r3, [r5, #92]
1518:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1199              		.loc 1 1518 10 is_stmt 0 view .LVU345
 1200 00ba 0020     		movs	r0, #0
 1201 00bc E6E7     		b	.L65
 1202              	.L73:
1512:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 1203              		.loc 1 1512 9 is_stmt 1 view .LVU346
 1204 00be 1023     		movs	r3, #16
 1205 00c0 0B60     		str	r3, [r1]
1518:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1206              		.loc 1 1518 10 is_stmt 0 view .LVU347
 1207 00c2 0020     		movs	r0, #0
 1208 00c4 E2E7     		b	.L65
 1209              		.cfi_endproc
 1210              	.LFE349:
 1212              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1213              		.align	1
 1214              		.global	HAL_ADC_GetValue
 1215              		.syntax unified
 1216              		.code	16
 1217              		.thumb_func
 1219              	HAL_ADC_GetValue:
 1220              	.LVL87:
 1221              	.LFB354:
1520:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1521:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1522:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1523:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1524:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1525:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         OVR overrun.
1526:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1527:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1529:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1530:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1531:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1532:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         mode), the user must:
1533:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1534:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1535:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1536:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1537:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
1538:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1539:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1540:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
1541:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1542:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1543:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1544:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 137


1545:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1546:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1547:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1548:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1549:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Process locked */
1550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1551:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1552:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1554:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1555:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1557:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1558:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state                                                        */
1559:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1560:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1561:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1562:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1563:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1564:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1565:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1566:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC error code */
1567:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1568:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1570:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1571:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1572:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1573:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1574:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Process unlocked */
1575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1576:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1577:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1578:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1580:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1581:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1582:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1583:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1584:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1585:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1587:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
1588:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1589:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         default:
1590:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1591:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
1592:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1593:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1594:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1595:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1596:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1597:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1598:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1599:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1600:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1601:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 138


1602:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1603:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1604:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1605:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1606:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* trigger event.                                                       */
1607:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1609:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1610:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
1611:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1612:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Process unlocked */
1613:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1614:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1615:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1617:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
1618:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1619:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1620:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1621:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1622:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
1623:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
1624:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
1625:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1626:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1627:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1628:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1629:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1630:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1631:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status.
1632:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1634:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
1635:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1636:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1637:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1638:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1639:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1640:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process locked */
1641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1642:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1643:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1644:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1645:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1646:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1647:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1648:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1649:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1650:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1651:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1652:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1653:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1654:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1655:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1656:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1658:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 139


1659:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
1660:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1661:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1662:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1663:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1664:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1666:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process unlocked */
1667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1668:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1669:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
1670:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
1671:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
1672:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1673:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1674:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1675:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1676:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1677:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1678:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1679:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param pData Destination Buffer address.
1680:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1681:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status.
1682:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1683:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1684:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
1685:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1686:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1688:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1689:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1690:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1691:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1692:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1693:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Process locked */
1694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1695:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1696:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Specific case for first call occurrence of this function (DMA transfer */
1697:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* not activated and ADC disabled), DMA transfer must be activated        */
1698:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* with ADC disabled.                                                     */
1699:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) == 0UL)
1700:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1701:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
1702:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1703:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Disable ADC */
1704:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         LL_ADC_Disable(hadc->Instance);
1705:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1706:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1707:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Enable ADC DMA mode */
1708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       hadc->Instance->CFGR1 |= ADC_CFGR1_DMAEN;
1709:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1710:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1711:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1712:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1713:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1714:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1715:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 140


1716:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1717:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state                                                        */
1718:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1719:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1720:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1721:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1722:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1723:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1724:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC error code */
1725:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1726:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1727:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1728:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1730:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1731:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1732:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1733:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1734:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set the DMA error callback */
1735:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1736:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1737:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1738:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1739:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* start (in case of SW start):                                         */
1740:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1741:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1742:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1743:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* operations)                                                          */
1744:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1745:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1746:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Process unlocked */
1747:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1748:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1749:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1750:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1751:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1752:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1753:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1754:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Start the DMA channel */
1755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)
1756:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1758:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1759:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1760:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* trigger event.                                                       */
1761:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1762:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1763:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1764:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
1766:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1767:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1768:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1769:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1770:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
1771:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
1772:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 141


1773:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1774:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1775:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1776:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1777:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         ADC peripheral.
1778:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1779:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status.
1780:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1781:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
1782:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
1783:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1784:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1785:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1786:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1787:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1788:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process locked */
1789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1790:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1791:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
1792:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1793:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1794:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1795:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1796:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1797:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1798:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
1799:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
1800:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1802:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1803:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
1805:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1806:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update ADC state machine to error */
1807:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1808:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1809:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1810:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1811:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1813:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1814:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1815:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
1817:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
1820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1821:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
1822:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (void)ADC_Disable(hadc);
1824:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1825:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1827:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1828:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1829:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 142


1830:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1831:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1832:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1833:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1834:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1835:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
1836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
1837:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1838:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1839:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process unlocked */
1840:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1841:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1842:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
1843:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
1844:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
1845:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1846:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1847:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1848:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1849:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1850:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
1851:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1852:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1853:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1854:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *            to flag EOC.
1855:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1856:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1857:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1858:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         To clear this flag, either use function:
1859:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1860:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
1861:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1862:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1863:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval ADC group regular conversion data
1864:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1865:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(const ADC_HandleTypeDef *hadc)
1866:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 1222              		.loc 1 1866 1 is_stmt 1 view -0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              		@ link register save eliminated.
1867:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1868:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1227              		.loc 1 1868 3 view .LVU349
1869:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1870:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1871:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1873:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return ADC converted value */
1874:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return hadc->Instance->DR;
 1228              		.loc 1 1874 3 view .LVU350
 1229              		.loc 1 1874 14 is_stmt 0 view .LVU351
 1230 0000 0368     		ldr	r3, [r0]
 1231              		.loc 1 1874 24 view .LVU352
 1232 0002 186C     		ldr	r0, [r3, #64]
 1233              	.LVL88:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 143


1875:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1234              		.loc 1 1875 1 view .LVU353
 1235              		@ sp needed
 1236 0004 7047     		bx	lr
 1237              		.cfi_endproc
 1238              	.LFE354:
 1240              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1241              		.align	1
 1242              		.weak	HAL_ADC_ConvCpltCallback
 1243              		.syntax unified
 1244              		.code	16
 1245              		.thumb_func
 1247              	HAL_ADC_ConvCpltCallback:
 1248              	.LVL89:
 1249              	.LFB356:
1876:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1877:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
1878:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
1879:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
1880:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
1881:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
1882:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
1883:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
1884:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
1885:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
1886:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
1887:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1888:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
1889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1890:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
1891:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1892:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
1893:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
1894:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1895:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
1896:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1897:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1898:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
1899:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1900:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1901:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1902:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* End Of Sampling callback */
1903:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1904:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
1905:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
1906:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
1907:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1908:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1909:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1910:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1911:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1912:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1913:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
1914:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
1915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
1916:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1917:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 144


1918:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1919:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1920:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
1921:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1922:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1923:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1924:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
1925:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
1926:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* to disable interruption.                                               */
1927:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1928:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
1929:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        )
1930:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
1931:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
1932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1933:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
1934:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
1935:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
1936:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1937:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
1938:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
1939:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
1940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
1941:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
1942:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1943:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1944:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Set ADC state */
1945:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
1946:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
1947:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
1948:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
1949:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         else
1950:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
1951:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Change ADC state to error state */
1952:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1953:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1954:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
1955:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1956:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
1957:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
1958:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
1959:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1960:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Conversion complete callback */
1961:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
1962:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
1963:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*       possibility to use:                                              */
1964:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
1965:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1967:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
1968:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1969:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1970:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1971:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1972:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
1973:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
1974:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 145


1975:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
1976:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1977:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1978:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1979:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
1980:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
1981:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1982:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Set ADC state */
1983:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1984:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1985:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Level out of window 1 callback */
1986:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1987:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
1988:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
1989:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
1990:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1991:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1992:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1993:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1994:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
1995:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
1996:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
1997:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
1998:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
1999:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Set ADC state */
2000:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2001:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2002:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Level out of window 2 callback */
2003:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2004:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2005:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
2006:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2007:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2008:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2009:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2010:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2011:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2012:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2013:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2014:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2015:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2016:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Set ADC state */
2017:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2018:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2019:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Level out of window 3 callback */
2020:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2021:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2022:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
2023:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2024:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2025:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2026:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2027:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2028:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2029:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2030:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2031:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 146


2032:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2033:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2034:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2035:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* overrun ")                                                             */
2036:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2037:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* error.                                                                 */
2038:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2039:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2040:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       overrun_error = 1UL;
2041:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2042:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
2043:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2044:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Check DMA configuration */
2045:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (LL_ADC_REG_GetDMATransfer(hadc->Instance) != LL_ADC_REG_DMA_TRANSFER_NONE)
2046:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2047:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         overrun_error = 1UL;
2048:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2049:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2050:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2051:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (overrun_error == 1UL)
2052:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2053:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Change ADC state to error state */
2054:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2055:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2056:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC error code to overrun */
2057:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2058:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2059:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Error callback */
2060:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2061:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2062:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2063:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2064:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2065:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2066:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
2067:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2068:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2069:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2070:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2071:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Clear ADC overrun flag */
2072:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2073:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2074:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2075:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Check ADC Ready flag ========== */
2076:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_RDY) == ADC_FLAG_RDY) && ((tmp_ier & ADC_IT_RDY) == ADC_IT_RDY))
2077:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2078:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2079:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2080:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2081:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC state */
2082:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2083:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2084:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2085:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* ADC Ready callback */
2086:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2087:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ADCReadyCallback(hadc);
2088:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 147


2089:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADC_ADCReadyCallback(hadc);
2090:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2091:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2092:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Leave ADRDY flag up (used by HAL), disable interrupt source instead */
2093:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_RDY);
2094:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2095:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2096:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Check End of Calibration flag ========== */
2097:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOCAL) == ADC_FLAG_EOCAL) && ((tmp_ier & ADC_IT_EOCAL) == ADC_IT_EOCAL))
2098:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2099:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* End Of Calibration callback */
2100:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2101:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->CalibrationCpltCallback(hadc);
2102:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
2103:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADC_CalibrationCpltCallback(hadc);
2104:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2105:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2106:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Clear end of calibration flag */
2107:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOCAL);
2108:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2109:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2110:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ========== Check channel configuration ready flag ========== */
2111:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_CCRDY) == ADC_FLAG_CCRDY) && ((tmp_ier & ADC_IT_CCRDY) == ADC_IT_CCRDY))
2112:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2113:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Channel configuration ready callback */
2114:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2115:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ChannelConfigReadyCallback(hadc);
2116:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
2117:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADCEx_ChannelConfigReadyCallback(hadc);
2118:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2119:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2120:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2121:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_CCRDY);
2122:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2123:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2124:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2125:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2126:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2127:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2128:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
2129:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2130:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2131:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 1250              		.loc 1 2131 1 is_stmt 1 view -0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 0
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254              		@ link register save eliminated.
2132:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2133:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   UNUSED(hadc);
 1255              		.loc 1 2133 3 view .LVU355
2134:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2135:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2136:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2137:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****    */
2138:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1256              		.loc 1 2138 1 is_stmt 0 view .LVU356
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 148


 1257              		@ sp needed
 1258 0000 7047     		bx	lr
 1259              		.cfi_endproc
 1260              	.LFE356:
 1262              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1263              		.align	1
 1264              		.weak	HAL_ADC_ConvHalfCpltCallback
 1265              		.syntax unified
 1266              		.code	16
 1267              		.thumb_func
 1269              	HAL_ADC_ConvHalfCpltCallback:
 1270              	.LVL90:
 1271              	.LFB357:
2139:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2140:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2141:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2142:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2143:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
2144:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2145:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2146:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 1272              		.loc 1 2146 1 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276              		@ link register save eliminated.
2147:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   UNUSED(hadc);
 1277              		.loc 1 2148 3 view .LVU358
2149:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2150:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2151:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2152:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2153:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1278              		.loc 1 2153 1 is_stmt 0 view .LVU359
 1279              		@ sp needed
 1280 0000 7047     		bx	lr
 1281              		.cfi_endproc
 1282              	.LFE357:
 1284              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1285              		.align	1
 1286              		.syntax unified
 1287              		.code	16
 1288              		.thumb_func
 1290              	ADC_DMAHalfConvCplt:
 1291              	.LVL91:
 1292              	.LFB370:
2154:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2155:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2156:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2157:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2158:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
2159:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2160:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2161:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2162:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2163:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   UNUSED(hadc);
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 149


2164:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2165:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2167:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2168:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2170:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2171:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2172:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2173:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2174:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2175:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2176:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2177:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2178:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2179:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2180:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
2181:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2182:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2183:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2184:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2185:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   UNUSED(hadc);
2186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2187:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2189:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2191:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2192:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2193:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Calibration complete callback in non-blocking mode.
2194:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2195:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
2196:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2197:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** __weak void HAL_ADC_CalibrationCpltCallback(ADC_HandleTypeDef *hadc)
2198:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2199:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2200:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   UNUSED(hadc);
2201:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2202:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2203:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             function HAL_ADC_CalibrationCpltCallback must be implemented in the user file.
2204:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****    */
2205:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2206:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2207:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2208:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief ADC Ready callback in non-blocking mode.
2209:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2210:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
2211:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2212:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** __weak void HAL_ADC_ADCReadyCallback(ADC_HandleTypeDef *hadc)
2213:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2214:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2215:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   UNUSED(hadc);
2216:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2218:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             function HAL_ADC_ADCReadyCallback must be implemented in the user file.
2219:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****    */
2220:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 150


2221:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2222:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2223:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @}
2224:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2225:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2226:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2227:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief    Peripheral Control functions
2228:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *
2229:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** @verbatim
2230:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****  ===============================================================================
2231:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****              ##### Peripheral Control functions #####
2232:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****  ===============================================================================
2233:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2234:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Configure channels on regular group
2235:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Configure the analog watchdog
2236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2237:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** @endverbatim
2238:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
2239:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2240:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2241:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2242:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2243:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2244:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         VrefInt/TempSensor.
2245:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         These internal paths can be disabled using function
2246:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2247:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2248:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2249:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2250:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2251:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         without resetting the ADC.
2252:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2253:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2254:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2255:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2256:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
2257:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2258:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, const ADC_ChannelConfTypeDef *sCon
2259:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2261:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2262:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2263:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2264:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
2265:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2266:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
2267:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(sConfig->SamplingTime));
2268:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2269:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2270:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2271:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2272:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK_SEQ_FIXED(sConfig->Rank));
2273:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2274:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
2275:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2276:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
2277:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 151


2278:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2279:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2280:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2281:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process locked */
2282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_LOCK(hadc);
2283:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2284:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2285:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2286:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2287:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*  - Channel number                                                        */
2288:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*  - Channel sampling time                                                 */
2289:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*  - Management of internal measurement channels: VrefInt/TempSensor       */
2290:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2291:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2292:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Configure channel: depending on rank setting, add it or remove it from */
2293:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* ADC sequencer.                                                         */
2294:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* If sequencer set to not fully configurable with channel rank set to    */
2295:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* none, remove the channel from the sequencer.                           */
2296:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Otherwise (sequencer set to fully configurable or to to not fully      */
2297:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* configurable with channel rank to be set), configure the selected      */
2298:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* channel.                                                               */
2299:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (sConfig->Rank != ADC_RANK_NONE)
2300:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2301:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Regular sequence configuration */
2302:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Note: ADC channel configuration requires few ADC clock cycles        */
2303:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       to be ready. Processing of ADC settings in this function       */
2304:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       induce that a specific wait time is not necessary.             */
2305:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       For more details on ADC channel configuration ready,           */
2306:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       refer to function "LL_ADC_IsActiveFlag_CCRDY()".               */
2307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2308:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2309:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2310:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2311:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Set the channel by enabling the corresponding bitfield.            */
2312:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         LL_ADC_REG_SetSequencerChAdd(hadc->Instance, sConfig->Channel);
2313:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2314:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       else
2315:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2316:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Sequencer set to fully configurable:                               */
2317:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Set the channel by entering it into the selected rank.             */
2318:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2319:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Memorize the channel set into variable in HAL ADC handle */
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         MODIFY_REG(hadc->ADCGroupRegularSequencerRanks,
2321:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
2322:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel) << (sConfig->Rank & 0x1FUL));
2323:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2324:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* If the selected rank is below ADC group regular sequencer length,  */
2325:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* apply the configuration in ADC register.                           */
2326:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Note: Otherwise, configuration is not applied.                     */
2327:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /*       To apply it, parameter'NbrOfConversion' must be increased.   */
2328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if (((sConfig->Rank >> 2UL) + 1UL) <= hadc->Init.NbrOfConversion)
2329:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2330:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2331:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2332:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2333:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2334:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 152


2335:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2336:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2337:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor      */
2338:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* internal measurement paths enable: If internal channel selected,     */
2339:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* enable dedicated internal buffers and path.                          */
2340:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using         */
2341:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
2342:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       channel configuration parameter "Rank".                        */
2343:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2344:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2345:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2346:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2347:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* If the requested internal measurement path has already been enabled,   */
2348:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* bypass the configuration processing.                                   */
2349:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
2350:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2351:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2352:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2353:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2354:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2355:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2356:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Wait loop initialization and execution */
2357:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2358:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2359:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           wait_loop_index = (((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * (SystemCoreClock / (100000
2361:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2362:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           {
2363:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             wait_loop_index--;
2364:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
2365:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2366:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) &&
2367:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2368:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2369:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2370:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2371:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2372:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         else
2373:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2374:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* nothing to do */
2375:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2376:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2377:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2378:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
2379:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2380:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Regular sequencer configuration */
2381:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Note: Case of sequencer set to fully configurable:                   */
2382:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       Sequencer rank cannot be disabled, only affected to            */
2383:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       another channel.                                               */
2384:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       To remove a rank, use parameter 'NbrOfConversion".             */
2385:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2386:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2387:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2388:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2389:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Reset the channel by disabling the corresponding bitfield.         */
2390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         LL_ADC_REG_SetSequencerChRem(hadc->Instance, sConfig->Channel);
2391:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 153


2392:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2393:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor.       */
2394:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2395:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* paths.                                                                 */
2396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2397:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2398:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2399:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2401:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2402:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2403:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
2404:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2405:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         else if (sConfig->Channel == ADC_CHANNEL_VREFINT)
2406:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2407:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2408:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
2409:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2410:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         else
2411:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2412:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* nothing to do */
2413:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2414:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2415:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2416:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2417:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2418:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2419:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2420:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* parameters.                                                              */
2421:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
2422:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2423:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Update ADC state machine to error */
2424:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2425:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2426:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2427:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2428:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2429:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process unlocked */
2430:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2431:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2432:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
2433:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
2434:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2435:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2436:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2437:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2439:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2440:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2441:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2442:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         the ADC.
2443:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2444:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2445:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2446:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds can be modified
2447:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         while ADC conversion is on going.
2448:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 154


2449:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2450:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2451:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2452:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2453:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2454:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2455:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2456:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status
2457:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2458:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, const ADC_AnalogWDGConfTypeDef *
2459:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2461:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
2462:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
2463:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t backup_setting_adc_enable_state = 0UL;
2464:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2465:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
2466:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2467:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
2468:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2469:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2470:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)
2472:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2473:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
2474:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2475:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2476:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Verify thresholds range */
2477:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2478:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2479:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2480:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2482:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
2483:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
2484:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
2486:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2487:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
2489:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
2490:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2492:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process locked */
2493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_LOCK(hadc);
2494:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2495:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2496:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2497:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* conversion on going on ADC group regular:                                */
2498:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
2499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2500:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2501:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Analog watchdog configuration */
2502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2503:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Constraint of ADC on this STM32 series: ADC must be disable
2505:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****          to modify bitfields of register ADC_CFGR1 */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 155


2506:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         backup_setting_adc_enable_state = 1UL;
2509:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
2510:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2511:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Check if ADC is effectively disabled */
2512:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if (tmp_hal_status == HAL_OK)
2513:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2514:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Set ADC state */
2515:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
2516:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
2517:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
2518:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2519:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2520:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2521:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
2522:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
2523:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*    channels.                                                         */
2524:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
2525:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2526:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2527:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
2528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(AnalogWDGConfig->Channel,
2529:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
2530:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
2531:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2532:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2533:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
2534:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
2535:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2536:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2537:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
2538:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
2539:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2540:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2541:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (backup_setting_adc_enable_state == 1UL)
2542:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2543:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         tmp_hal_status = ADC_Enable(hadc);
2544:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2545:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2546:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
2547:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2548:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2549:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
2550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2551:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2552:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
2553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
2554:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2555:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
2556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
2557:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2558:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
2559:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2560:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       else
2561:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2562:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 156


2563:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2564:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2565:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
2566:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
2567:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2568:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
2569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2570:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2571:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
2572:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
2573:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2574:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           {
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig-
2576:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
2577:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           else
2578:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           {
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig-
2580:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
2581:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
2582:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2583:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2584:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
2585:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
2586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2587:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2588:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
2589:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
2590:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2591:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2592:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2593:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2594:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
2595:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2596:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2597:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2598:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2599:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2600:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2601:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
2602:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2603:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2604:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
2605:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2606:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
2607:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         else
2609:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2610:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
2611:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2612:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2613:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
2614:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       else
2615:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
2617:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2618:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2619:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 157


2620:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2621:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2622:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2623:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
2624:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2625:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2626:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
2627:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2628:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
2629:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2630:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         else
2631:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2632:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
2633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2634:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2635:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2636:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2637:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2638:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2639:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
2640:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2642:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
2643:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2644:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* are set to 0.                                                        */
2645:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighThre
2646:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
2647:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2648:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
2649:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else
2650:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2651:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* No need to shift the offset with respect to the selected ADC resolution: */
2652:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2653:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* are set to 0.                                                        */
2654:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmpAWDHighThresholdShifted = AnalogWDGConfig->HighThreshold;
2655:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = AnalogWDGConfig->LowThreshold;
2656:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2658:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
2659:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighThresh
2660:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                   tmpAWDLowThresholdShifted);
2661:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2662:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Process unlocked */
2663:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2664:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return function status */
2666:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return tmp_hal_status;
2667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2668:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2669:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2670:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2671:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @}
2672:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2673:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2674:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2675:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
2676:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 158


2677:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** @verbatim
2678:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****  ===============================================================================
2679:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
2680:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****  ===============================================================================
2681:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     [..]
2682:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
2683:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     peripheral.
2684:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Check the ADC state
2685:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (+) Check the ADC error code
2686:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** @endverbatim
2688:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
2689:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2690:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2691:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2692:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Return the ADC handle state.
2693:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
2694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         compared with states bits.
2695:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         For example:
2696:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
2697:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
2698:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2699:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
2700:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2701:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** uint32_t HAL_ADC_GetState(const ADC_HandleTypeDef *hadc)
2702:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2703:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
2704:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2705:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2706:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return ADC handle state */
2707:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return hadc->State;
2708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2709:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2710:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2711:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Return the ADC error code.
2712:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2713:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
2714:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2715:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** uint32_t HAL_ADC_GetError(const ADC_HandleTypeDef *hadc)
2716:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2717:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
2718:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2719:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2720:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return hadc->ErrorCode;
2721:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2722:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2723:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2724:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @}
2725:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2726:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2727:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2728:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @}
2729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2730:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2731:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2732:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @{
2733:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 159


2734:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2735:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2736:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Stop ADC conversion.
2737:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2738:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         stopped to disable the ADC.
2739:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param  hadc ADC handle
2740:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status.
2741:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2742:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc)
2743:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2744:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
2745:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2746:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
2747:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2748:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2749:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Verification if ADC is not already stopped on regular group to bypass    */
2750:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* this function if not needed.                                             */
2751:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
2752:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2753:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
2754:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
2755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
2756:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Stop ADC group regular conversion */
2758:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
2759:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2760:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2761:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
2762:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Get tick count */
2763:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tickstart = HAL_GetTick();
2764:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2766:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2767:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
2768:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2769:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update ADC state machine to error */
2770:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2771:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2772:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
2773:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2774:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2775:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         return HAL_ERROR;
2776:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2777:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2778:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2779:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2780:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2781:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return HAL status */
2782:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return HAL_OK;
2783:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2784:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2785:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2786:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Enable the selected ADC.
2787:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
2788:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
2789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2790:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 160


2791:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2792:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
2793:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2794:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
2795:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2796:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2797:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
2798:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
2799:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
2800:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
2801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2802:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2803:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
2804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR
2805:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2806:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Update ADC state machine to error */
2807:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2808:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2809:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2810:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2811:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       return HAL_ERROR;
2813:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2814:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2815:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Enable the ADC peripheral */
2816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
2817:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) & LL_ADC_PATH_INT
2819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         != 0UL)
2820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2821:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
2822:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Wait loop initialization and execution */
2823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
2824:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
2825:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
2826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US / 10UL)
2827:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
2828:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
2829:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2830:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         wait_loop_index--;
2831:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2832:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2833:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2834:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
2835:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* performed automatically by hardware and flag ADC ready is not set.     */
2836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
2837:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2838:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Wait for ADC effectively enabled */
2839:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       tickstart = HAL_GetTick();
2840:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2841:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2842:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2843:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
2844:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the
2845:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             calibration logic.
2846:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
2847:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 161


2848:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             4 ADC clock cycle duration */
2849:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
2850:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
2851:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2852:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2853:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
2854:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2855:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2856:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
2857:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2858:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Update ADC state machine to error */
2859:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2860:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2861:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2862:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2863:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2864:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           return HAL_ERROR;
2865:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2866:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2867:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2868:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2869:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2870:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return HAL status */
2871:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return HAL_OK;
2872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2873:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2874:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2875:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  Disable the selected ADC.
2876:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2877:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   *         stopped.
2878:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hadc ADC handle
2879:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval HAL status.
2880:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2881:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
2882:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2883:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
2884:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
2885:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2886:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
2887:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
2888:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /*       disabled.                                                          */
2889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2890:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
2891:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      )
2892:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2893:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
2894:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
2895:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2896:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Disable the ADC peripheral */
2897:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
2898:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
2899:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2900:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
2901:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2902:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Update ADC state machine to error */
2903:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2904:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 162


2905:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2906:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2907:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2908:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       return HAL_ERROR;
2909:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2910:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2911:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2912:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Get tick count */
2913:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tickstart = HAL_GetTick();
2914:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
2916:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2917:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2918:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2919:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Update ADC state machine to error */
2920:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2921:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2922:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
2923:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2924:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2925:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         return HAL_ERROR;
2926:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2927:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2928:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2929:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2930:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Return HAL status */
2931:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   return HAL_OK;
2932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
2933:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2934:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
2935:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
2936:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2937:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
2938:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
2939:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
2941:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2942:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2943:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2944:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2945:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
2946:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2947:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Set ADC state */
2948:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2949:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2950:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2951:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2952:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* to disable interruption.                                               */
2953:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2954:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
2955:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        )
2956:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2957:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2958:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2959:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
2960:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2961:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 163


2962:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2963:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2964:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
2965:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
2967:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
2968:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2969:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2970:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Set ADC state */
2971:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
2972:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
2973:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
2974:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2975:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         else
2976:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
2977:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Change ADC state to error state */
2978:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2979:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2980:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2981:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2982:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
2983:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
2984:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
2985:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
2986:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     /* Conversion complete callback */
2987:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2988:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2989:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
2990:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2991:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2992:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
2993:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
2994:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
2995:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
2996:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
2997:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
2998:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2999:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3000:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
3001:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3002:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3003:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
3004:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     else
3005:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
3006:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       /* Call ADC DMA error callback */
3007:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3008:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
3009:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
3010:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
3011:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
3012:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
3013:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3014:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3015:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
3016:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
3017:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3018:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 164


 1293              		.loc 1 3018 1 is_stmt 1 view -0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297              		.loc 1 3018 1 is_stmt 0 view .LVU361
 1298 0000 10B5     		push	{r4, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 4, -8
 1301              		.cfi_offset 14, -4
3019:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3020:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1302              		.loc 1 3020 3 is_stmt 1 view .LVU362
 1303              		.loc 1 3020 22 is_stmt 0 view .LVU363
 1304 0002 806A     		ldr	r0, [r0, #40]
 1305              	.LVL92:
3021:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
3022:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Half conversion callback */
3023:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3024:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3025:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
3026:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1306              		.loc 1 3026 3 is_stmt 1 view .LVU364
 1307 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1308              	.LVL93:
3027:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3028:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1309              		.loc 1 3028 1 is_stmt 0 view .LVU365
 1310              		@ sp needed
 1311 0008 10BD     		pop	{r4, pc}
 1312              		.cfi_endproc
 1313              	.LFE370:
 1315              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1316              		.align	1
 1317              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1318              		.syntax unified
 1319              		.code	16
 1320              		.thumb_func
 1322              	HAL_ADC_LevelOutOfWindowCallback:
 1323              	.LVL94:
 1324              	.LFB358:
2161:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1325              		.loc 1 2161 1 is_stmt 1 view -0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
2163:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1330              		.loc 1 2163 3 view .LVU367
2168:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1331              		.loc 1 2168 1 is_stmt 0 view .LVU368
 1332              		@ sp needed
 1333 0000 7047     		bx	lr
 1334              		.cfi_endproc
 1335              	.LFE358:
 1337              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1338              		.align	1
 1339              		.weak	HAL_ADC_ErrorCallback
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 165


 1340              		.syntax unified
 1341              		.code	16
 1342              		.thumb_func
 1344              	HAL_ADC_ErrorCallback:
 1345              	.LVL95:
 1346              	.LFB359:
2183:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1347              		.loc 1 2183 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		@ link register save eliminated.
2185:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1352              		.loc 1 2185 3 view .LVU370
2190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1353              		.loc 1 2190 1 is_stmt 0 view .LVU371
 1354              		@ sp needed
 1355 0000 7047     		bx	lr
 1356              		.cfi_endproc
 1357              	.LFE359:
 1359              		.section	.text.ADC_DMAError,"ax",%progbits
 1360              		.align	1
 1361              		.syntax unified
 1362              		.code	16
 1363              		.thumb_func
 1365              	ADC_DMAError:
 1366              	.LVL96:
 1367              	.LFB371:
3029:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
3030:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** /**
3031:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @brief  DMA error callback.
3032:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3033:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   * @retval None
3034:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   */
3035:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)
3036:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** {
 1368              		.loc 1 3036 1 is_stmt 1 view -0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
 1372              		.loc 1 3036 1 is_stmt 0 view .LVU373
 1373 0000 10B5     		push	{r4, lr}
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 4, -8
 1376              		.cfi_offset 14, -4
3037:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3038:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1377              		.loc 1 3038 3 is_stmt 1 view .LVU374
 1378              		.loc 1 3038 22 is_stmt 0 view .LVU375
 1379 0002 806A     		ldr	r0, [r0, #40]
 1380              	.LVL97:
3039:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
3040:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Set ADC state */
3041:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1381              		.loc 1 3041 3 is_stmt 1 view .LVU376
 1382 0004 836D     		ldr	r3, [r0, #88]
 1383 0006 4022     		movs	r2, #64
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 166


 1384 0008 1343     		orrs	r3, r2
 1385 000a 8365     		str	r3, [r0, #88]
3042:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
3043:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3044:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1386              		.loc 1 3044 3 view .LVU377
 1387 000c C36D     		ldr	r3, [r0, #92]
 1388 000e 3C3A     		subs	r2, r2, #60
 1389 0010 1343     		orrs	r3, r2
 1390 0012 C365     		str	r3, [r0, #92]
3045:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
3046:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Error callback */
3047:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3048:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3049:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #else
3050:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1391              		.loc 1 3050 3 view .LVU378
 1392 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1393              	.LVL98:
3051:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3052:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 1394              		.loc 1 3052 1 is_stmt 0 view .LVU379
 1395              		@ sp needed
 1396 0018 10BD     		pop	{r4, pc}
 1397              		.cfi_endproc
 1398              	.LFE371:
 1400              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1401              		.align	1
 1402              		.syntax unified
 1403              		.code	16
 1404              		.thumb_func
 1406              	ADC_DMAConvCplt:
 1407              	.LVL99:
 1408              	.LFB369:
2940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1409              		.loc 1 2940 1 is_stmt 1 view -0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
2940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1413              		.loc 1 2940 1 is_stmt 0 view .LVU381
 1414 0000 10B5     		push	{r4, lr}
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 4, -8
 1417              		.cfi_offset 14, -4
 1418 0002 0300     		movs	r3, r0
2942:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1419              		.loc 1 2942 3 is_stmt 1 view .LVU382
2942:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1420              		.loc 1 2942 22 is_stmt 0 view .LVU383
 1421 0004 806A     		ldr	r0, [r0, #40]
 1422              	.LVL100:
2945:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1423              		.loc 1 2945 3 is_stmt 1 view .LVU384
2945:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1424              		.loc 1 2945 12 is_stmt 0 view .LVU385
 1425 0006 826D     		ldr	r2, [r0, #88]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 167


2945:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1426              		.loc 1 2945 20 view .LVU386
 1427 0008 5021     		movs	r1, #80
2945:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1428              		.loc 1 2945 6 view .LVU387
 1429 000a 1142     		tst	r1, r2
 1430 000c 2AD1     		bne	.L84
2948:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1431              		.loc 1 2948 5 is_stmt 1 view .LVU388
 1432 000e 826D     		ldr	r2, [r0, #88]
 1433 0010 8023     		movs	r3, #128
 1434              	.LVL101:
2948:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1435              		.loc 1 2948 5 is_stmt 0 view .LVU389
 1436 0012 9B00     		lsls	r3, r3, #2
 1437 0014 1343     		orrs	r3, r2
 1438 0016 8365     		str	r3, [r0, #88]
2953:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1439              		.loc 1 2953 5 is_stmt 1 view .LVU390
2953:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1440              		.loc 1 2953 48 is_stmt 0 view .LVU391
 1441 0018 0368     		ldr	r3, [r0]
 1442              	.LVL102:
 1443              	.LBB142:
 1444              	.LBI142:
2672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 1445              		.loc 2 2672 26 is_stmt 1 view .LVU392
 1446              	.LBB143:
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1447              		.loc 2 2674 3 view .LVU393
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1448              		.loc 2 2674 12 is_stmt 0 view .LVU394
 1449 001a D968     		ldr	r1, [r3, #12]
 1450 001c C022     		movs	r2, #192
 1451 001e 1201     		lsls	r2, r2, #4
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1452              		.loc 2 2674 106 view .LVU395
 1453 0020 1142     		tst	r1, r2
 1454 0022 13D1     		bne	.L85
 1455              	.LVL103:
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1456              		.loc 2 2674 106 view .LVU396
 1457              	.LBE143:
 1458              	.LBE142:
2954:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        )
 1459              		.loc 1 2954 23 view .LVU397
 1460 0024 827E     		ldrb	r2, [r0, #26]
2954:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        )
 1461              		.loc 1 2954 9 view .LVU398
 1462 0026 002A     		cmp	r2, #0
 1463 0028 10D1     		bne	.L85
2958:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1464              		.loc 1 2958 7 is_stmt 1 view .LVU399
2958:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1465              		.loc 1 2958 11 is_stmt 0 view .LVU400
 1466 002a 1A68     		ldr	r2, [r3]
2958:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 168


 1467              		.loc 1 2958 10 view .LVU401
 1468 002c 1207     		lsls	r2, r2, #28
 1469 002e 0DD5     		bpl	.L85
2962:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 1470              		.loc 1 2962 9 is_stmt 1 view .LVU402
 1471              	.LVL104:
 1472              	.LBB144:
 1473              	.LBI144:
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 1474              		.loc 2 4783 26 view .LVU403
 1475              	.LBB145:
 1476              		.loc 2 4785 3 view .LVU404
 1477              		.loc 2 4785 12 is_stmt 0 view .LVU405
 1478 0030 9A68     		ldr	r2, [r3, #8]
 1479              		.loc 2 4785 74 view .LVU406
 1480 0032 5207     		lsls	r2, r2, #29
 1481 0034 0DD4     		bmi	.L86
 1482              	.LVL105:
 1483              		.loc 2 4785 74 view .LVU407
 1484              	.LBE145:
 1485              	.LBE144:
2968:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1486              		.loc 1 2968 11 is_stmt 1 view .LVU408
 1487 0036 5A68     		ldr	r2, [r3, #4]
 1488 0038 0C21     		movs	r1, #12
 1489 003a 8A43     		bics	r2, r1
 1490 003c 5A60     		str	r2, [r3, #4]
2971:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1491              		.loc 1 2971 11 view .LVU409
 1492 003e 836D     		ldr	r3, [r0, #88]
 1493 0040 0E4A     		ldr	r2, .L91
 1494 0042 1340     		ands	r3, r2
 1495 0044 0432     		adds	r2, r2, #4
 1496 0046 FF32     		adds	r2, r2, #255
 1497 0048 1343     		orrs	r3, r2
 1498 004a 8365     		str	r3, [r0, #88]
 1499              	.L85:
2990:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1500              		.loc 1 2990 5 view .LVU410
 1501 004c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1502              	.LVL106:
 1503              	.L83:
3010:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1504              		.loc 1 3010 1 is_stmt 0 view .LVU411
 1505              		@ sp needed
 1506 0050 10BD     		pop	{r4, pc}
 1507              	.LVL107:
 1508              	.L86:
2978:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1509              		.loc 1 2978 11 is_stmt 1 view .LVU412
 1510 0052 836D     		ldr	r3, [r0, #88]
 1511 0054 2022     		movs	r2, #32
 1512 0056 1343     		orrs	r3, r2
 1513 0058 8365     		str	r3, [r0, #88]
2981:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 1514              		.loc 1 2981 11 view .LVU413
 1515 005a C36D     		ldr	r3, [r0, #92]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 169


 1516 005c 1F3A     		subs	r2, r2, #31
 1517 005e 1343     		orrs	r3, r2
 1518 0060 C365     		str	r3, [r0, #92]
 1519 0062 F3E7     		b	.L85
 1520              	.LVL108:
 1521              	.L84:
2995:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1522              		.loc 1 2995 5 view .LVU414
2995:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1523              		.loc 1 2995 14 is_stmt 0 view .LVU415
 1524 0064 826D     		ldr	r2, [r0, #88]
2995:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1525              		.loc 1 2995 8 view .LVU416
 1526 0066 D206     		lsls	r2, r2, #27
 1527 0068 04D4     		bmi	.L90
3007:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 1528              		.loc 1 3007 7 is_stmt 1 view .LVU417
3007:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 1529              		.loc 1 3007 11 is_stmt 0 view .LVU418
 1530 006a 026D     		ldr	r2, [r0, #80]
3007:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 1531              		.loc 1 3007 23 view .LVU419
 1532 006c 526B     		ldr	r2, [r2, #52]
3007:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 1533              		.loc 1 3007 7 view .LVU420
 1534 006e 1800     		movs	r0, r3
 1535              	.LVL109:
3007:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 1536              		.loc 1 3007 7 view .LVU421
 1537 0070 9047     		blx	r2
 1538              	.LVL110:
3010:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1539              		.loc 1 3010 1 view .LVU422
 1540 0072 EDE7     		b	.L83
 1541              	.LVL111:
 1542              	.L90:
3001:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1543              		.loc 1 3001 7 is_stmt 1 view .LVU423
 1544 0074 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1545              	.LVL112:
3001:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1546              		.loc 1 3001 7 is_stmt 0 view .LVU424
 1547 0078 EAE7     		b	.L83
 1548              	.L92:
 1549 007a C046     		.align	2
 1550              	.L91:
 1551 007c FEFEFFFF 		.word	-258
 1552              		.cfi_endproc
 1553              	.LFE369:
 1555              		.section	.text.HAL_ADC_CalibrationCpltCallback,"ax",%progbits
 1556              		.align	1
 1557              		.weak	HAL_ADC_CalibrationCpltCallback
 1558              		.syntax unified
 1559              		.code	16
 1560              		.thumb_func
 1562              	HAL_ADC_CalibrationCpltCallback:
 1563              	.LVL113:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 170


 1564              	.LFB360:
2198:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1565              		.loc 1 2198 1 is_stmt 1 view -0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              		@ link register save eliminated.
2200:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1570              		.loc 1 2200 3 view .LVU426
2205:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1571              		.loc 1 2205 1 is_stmt 0 view .LVU427
 1572              		@ sp needed
 1573 0000 7047     		bx	lr
 1574              		.cfi_endproc
 1575              	.LFE360:
 1577              		.section	.text.HAL_ADC_ADCReadyCallback,"ax",%progbits
 1578              		.align	1
 1579              		.weak	HAL_ADC_ADCReadyCallback
 1580              		.syntax unified
 1581              		.code	16
 1582              		.thumb_func
 1584              	HAL_ADC_ADCReadyCallback:
 1585              	.LVL114:
 1586              	.LFB361:
2213:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1587              		.loc 1 2213 1 is_stmt 1 view -0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 0
 1590              		@ frame_needed = 0, uses_anonymous_args = 0
 1591              		@ link register save eliminated.
2215:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1592              		.loc 1 2215 3 view .LVU429
2220:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1593              		.loc 1 2220 1 is_stmt 0 view .LVU430
 1594              		@ sp needed
 1595 0000 7047     		bx	lr
 1596              		.cfi_endproc
 1597              	.LFE361:
 1599              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1600              		.align	1
 1601              		.global	HAL_ADC_IRQHandler
 1602              		.syntax unified
 1603              		.code	16
 1604              		.thumb_func
 1606              	HAL_ADC_IRQHandler:
 1607              	.LVL115:
 1608              	.LFB355:
1883:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1609              		.loc 1 1883 1 is_stmt 1 view -0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
1883:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1613              		.loc 1 1883 1 is_stmt 0 view .LVU432
 1614 0000 70B5     		push	{r4, r5, r6, lr}
 1615              		.cfi_def_cfa_offset 16
 1616              		.cfi_offset 4, -16
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 171


 1617              		.cfi_offset 5, -12
 1618              		.cfi_offset 6, -8
 1619              		.cfi_offset 14, -4
 1620 0002 0400     		movs	r4, r0
1884:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1621              		.loc 1 1884 3 is_stmt 1 view .LVU433
 1622              	.LVL116:
1885:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1623              		.loc 1 1885 3 view .LVU434
1885:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1624              		.loc 1 1885 26 is_stmt 0 view .LVU435
 1625 0004 0368     		ldr	r3, [r0]
1885:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1626              		.loc 1 1885 12 view .LVU436
 1627 0006 1D68     		ldr	r5, [r3]
 1628              	.LVL117:
1886:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1629              		.loc 1 1886 3 is_stmt 1 view .LVU437
1886:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1630              		.loc 1 1886 12 is_stmt 0 view .LVU438
 1631 0008 5E68     		ldr	r6, [r3, #4]
 1632              	.LVL118:
1889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1633              		.loc 1 1889 3 is_stmt 1 view .LVU439
1890:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1634              		.loc 1 1890 3 view .LVU440
1893:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1635              		.loc 1 1893 3 view .LVU441
1893:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1636              		.loc 1 1893 6 is_stmt 0 view .LVU442
 1637 000a AB07     		lsls	r3, r5, #30
 1638 000c 0FD5     		bpl	.L96
1893:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1639              		.loc 1 1893 54 discriminator 1 view .LVU443
 1640 000e B307     		lsls	r3, r6, #30
 1641 0010 0DD5     		bpl	.L96
1896:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1642              		.loc 1 1896 5 is_stmt 1 view .LVU444
1896:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1643              		.loc 1 1896 14 is_stmt 0 view .LVU445
 1644 0012 836D     		ldr	r3, [r0, #88]
1896:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1645              		.loc 1 1896 8 view .LVU446
 1646 0014 DB06     		lsls	r3, r3, #27
 1647 0016 04D4     		bmi	.L97
1899:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 1648              		.loc 1 1899 7 is_stmt 1 view .LVU447
 1649 0018 826D     		ldr	r2, [r0, #88]
 1650 001a 8023     		movs	r3, #128
 1651 001c 1B01     		lsls	r3, r3, #4
 1652 001e 1343     		orrs	r3, r2
 1653 0020 8365     		str	r3, [r0, #88]
 1654              	.L97:
1906:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1655              		.loc 1 1906 5 view .LVU448
 1656 0022 2000     		movs	r0, r4
 1657              	.LVL119:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 172


1906:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1658              		.loc 1 1906 5 is_stmt 0 view .LVU449
 1659 0024 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1660              	.LVL120:
1910:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 1661              		.loc 1 1910 5 is_stmt 1 view .LVU450
 1662 0028 2368     		ldr	r3, [r4]
 1663 002a 0222     		movs	r2, #2
 1664 002c 1A60     		str	r2, [r3]
 1665              	.L96:
1914:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1666              		.loc 1 1914 3 view .LVU451
1914:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1667              		.loc 1 1914 6 is_stmt 0 view .LVU452
 1668 002e 6B07     		lsls	r3, r5, #29
 1669 0030 01D5     		bpl	.L98
1914:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1670              		.loc 1 1914 51 discriminator 1 view .LVU453
 1671 0032 7307     		lsls	r3, r6, #29
 1672 0034 03D4     		bmi	.L99
 1673              	.L98:
1914:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1674              		.loc 1 1914 94 discriminator 3 view .LVU454
 1675 0036 2B07     		lsls	r3, r5, #28
 1676 0038 29D5     		bpl	.L100
1915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1677              		.loc 1 1915 51 view .LVU455
 1678 003a 3307     		lsls	r3, r6, #28
 1679 003c 27D5     		bpl	.L100
 1680              	.L99:
1918:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1681              		.loc 1 1918 5 is_stmt 1 view .LVU456
1918:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1682              		.loc 1 1918 14 is_stmt 0 view .LVU457
 1683 003e A36D     		ldr	r3, [r4, #88]
1918:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1684              		.loc 1 1918 8 view .LVU458
 1685 0040 DB06     		lsls	r3, r3, #27
 1686 0042 04D4     		bmi	.L101
1921:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 1687              		.loc 1 1921 7 is_stmt 1 view .LVU459
 1688 0044 A26D     		ldr	r2, [r4, #88]
 1689 0046 8023     		movs	r3, #128
 1690 0048 9B00     		lsls	r3, r3, #2
 1691 004a 1343     		orrs	r3, r2
 1692 004c A365     		str	r3, [r4, #88]
 1693              	.L101:
1927:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1694              		.loc 1 1927 5 view .LVU460
1927:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1695              		.loc 1 1927 48 is_stmt 0 view .LVU461
 1696 004e 2368     		ldr	r3, [r4]
 1697              	.LVL121:
 1698              	.LBB146:
 1699              	.LBI146:
2672:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 1700              		.loc 2 2672 26 is_stmt 1 view .LVU462
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 173


 1701              	.LBB147:
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1702              		.loc 2 2674 3 view .LVU463
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1703              		.loc 2 2674 12 is_stmt 0 view .LVU464
 1704 0050 D968     		ldr	r1, [r3, #12]
 1705 0052 C022     		movs	r2, #192
 1706 0054 1201     		lsls	r2, r2, #4
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1707              		.loc 2 2674 106 view .LVU465
 1708 0056 1142     		tst	r1, r2
 1709 0058 13D1     		bne	.L102
 1710              	.LVL122:
2674:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1711              		.loc 2 2674 106 view .LVU466
 1712              	.LBE147:
 1713              	.LBE146:
1928:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        )
 1714              		.loc 1 1928 23 view .LVU467
 1715 005a A27E     		ldrb	r2, [r4, #26]
1928:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****        )
 1716              		.loc 1 1928 9 view .LVU468
 1717 005c 002A     		cmp	r2, #0
 1718 005e 10D1     		bne	.L102
1932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1719              		.loc 1 1932 7 is_stmt 1 view .LVU469
1932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1720              		.loc 1 1932 11 is_stmt 0 view .LVU470
 1721 0060 1A68     		ldr	r2, [r3]
1932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1722              		.loc 1 1932 10 view .LVU471
 1723 0062 1207     		lsls	r2, r2, #28
 1724 0064 0DD5     		bpl	.L102
1936:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 1725              		.loc 1 1936 9 is_stmt 1 view .LVU472
 1726              	.LVL123:
 1727              	.LBB148:
 1728              	.LBI148:
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 1729              		.loc 2 4783 26 view .LVU473
 1730              	.LBB149:
 1731              		.loc 2 4785 3 view .LVU474
 1732              		.loc 2 4785 12 is_stmt 0 view .LVU475
 1733 0066 9A68     		ldr	r2, [r3, #8]
 1734              		.loc 2 4785 74 view .LVU476
 1735 0068 5207     		lsls	r2, r2, #29
 1736 006a 52D4     		bmi	.L103
 1737              	.LVL124:
 1738              		.loc 2 4785 74 view .LVU477
 1739              	.LBE149:
 1740              	.LBE148:
1942:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1741              		.loc 1 1942 11 is_stmt 1 view .LVU478
 1742 006c 5A68     		ldr	r2, [r3, #4]
 1743 006e 0C21     		movs	r1, #12
 1744 0070 8A43     		bics	r2, r1
 1745 0072 5A60     		str	r2, [r3, #4]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 174


1945:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1746              		.loc 1 1945 11 view .LVU479
 1747 0074 A36D     		ldr	r3, [r4, #88]
 1748 0076 464A     		ldr	r2, .L144
 1749 0078 1340     		ands	r3, r2
 1750 007a 0432     		adds	r2, r2, #4
 1751 007c FF32     		adds	r2, r2, #255
 1752 007e 1343     		orrs	r3, r2
 1753 0080 A365     		str	r3, [r4, #88]
 1754              	.L102:
1968:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1755              		.loc 1 1968 5 view .LVU480
 1756 0082 2000     		movs	r0, r4
 1757 0084 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1758              	.LVL125:
1976:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 1759              		.loc 1 1976 5 view .LVU481
 1760 0088 2368     		ldr	r3, [r4]
 1761 008a 0C22     		movs	r2, #12
 1762 008c 1A60     		str	r2, [r3]
 1763              	.L100:
1980:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1764              		.loc 1 1980 3 view .LVU482
1980:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1765              		.loc 1 1980 6 is_stmt 0 view .LVU483
 1766 008e 2B06     		lsls	r3, r5, #24
 1767 0090 01D5     		bpl	.L104
1980:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1768              		.loc 1 1980 52 discriminator 1 view .LVU484
 1769 0092 3306     		lsls	r3, r6, #24
 1770 0094 46D4     		bmi	.L139
 1771              	.L104:
1997:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1772              		.loc 1 1997 3 is_stmt 1 view .LVU485
1997:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1773              		.loc 1 1997 6 is_stmt 0 view .LVU486
 1774 0096 EB05     		lsls	r3, r5, #23
 1775 0098 01D5     		bpl	.L105
1997:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1776              		.loc 1 1997 52 discriminator 1 view .LVU487
 1777 009a F305     		lsls	r3, r6, #23
 1778 009c 4ED4     		bmi	.L140
 1779              	.L105:
2014:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1780              		.loc 1 2014 3 is_stmt 1 view .LVU488
2014:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1781              		.loc 1 2014 6 is_stmt 0 view .LVU489
 1782 009e AB05     		lsls	r3, r5, #22
 1783 00a0 01D5     		bpl	.L106
2014:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1784              		.loc 1 2014 52 discriminator 1 view .LVU490
 1785 00a2 B305     		lsls	r3, r6, #22
 1786 00a4 57D4     		bmi	.L141
 1787              	.L106:
2030:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1788              		.loc 1 2030 3 is_stmt 1 view .LVU491
2030:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 175


 1789              		.loc 1 2030 6 is_stmt 0 view .LVU492
 1790 00a6 EB06     		lsls	r3, r5, #27
 1791 00a8 17D5     		bpl	.L107
2030:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1792              		.loc 1 2030 50 discriminator 1 view .LVU493
 1793 00aa F306     		lsls	r3, r6, #27
 1794 00ac 15D5     		bpl	.L107
2038:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1795              		.loc 1 2038 5 is_stmt 1 view .LVU494
2038:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1796              		.loc 1 2038 19 is_stmt 0 view .LVU495
 1797 00ae 236B     		ldr	r3, [r4, #48]
2038:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1798              		.loc 1 2038 8 view .LVU496
 1799 00b0 002B     		cmp	r3, #0
 1800 00b2 03D0     		beq	.L108
2045:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1801              		.loc 1 2045 7 is_stmt 1 view .LVU497
2045:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1802              		.loc 1 2045 41 is_stmt 0 view .LVU498
 1803 00b4 2368     		ldr	r3, [r4]
 1804              	.LVL126:
 1805              	.LBB150:
 1806              	.LBI150:
3705:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 1807              		.loc 2 3705 26 is_stmt 1 view .LVU499
 1808              	.LBB151:
3707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1809              		.loc 2 3707 3 view .LVU500
3707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1810              		.loc 2 3707 21 is_stmt 0 view .LVU501
 1811 00b6 DB68     		ldr	r3, [r3, #12]
 1812              	.LVL127:
3707:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 1813              		.loc 2 3707 21 view .LVU502
 1814              	.LBE151:
 1815              	.LBE150:
2045:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 1816              		.loc 1 2045 10 discriminator 1 view .LVU503
 1817 00b8 9B07     		lsls	r3, r3, #30
 1818 00ba 0BD0     		beq	.L109
 1819              	.L108:
 1820              	.LVL128:
2054:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1821              		.loc 1 2054 7 is_stmt 1 view .LVU504
 1822 00bc A26D     		ldr	r2, [r4, #88]
 1823 00be 8023     		movs	r3, #128
 1824 00c0 DB00     		lsls	r3, r3, #3
 1825 00c2 1343     		orrs	r3, r2
 1826 00c4 A365     		str	r3, [r4, #88]
2057:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1827              		.loc 1 2057 7 view .LVU505
 1828 00c6 E36D     		ldr	r3, [r4, #92]
 1829 00c8 0222     		movs	r2, #2
 1830 00ca 1343     		orrs	r3, r2
 1831 00cc E365     		str	r3, [r4, #92]
2067:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 176


 1832              		.loc 1 2067 7 view .LVU506
 1833 00ce 2000     		movs	r0, r4
 1834 00d0 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1835              	.LVL129:
 1836              	.L109:
2072:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 1837              		.loc 1 2072 5 view .LVU507
 1838 00d4 2368     		ldr	r3, [r4]
 1839 00d6 1022     		movs	r2, #16
 1840 00d8 1A60     		str	r2, [r3]
 1841              	.L107:
2076:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1842              		.loc 1 2076 3 view .LVU508
2076:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1843              		.loc 1 2076 6 is_stmt 0 view .LVU509
 1844 00da EB07     		lsls	r3, r5, #31
 1845 00dc 10D5     		bpl	.L110
2076:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1846              		.loc 1 2076 50 discriminator 1 view .LVU510
 1847 00de F307     		lsls	r3, r6, #31
 1848 00e0 0ED5     		bpl	.L110
2079:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1849              		.loc 1 2079 5 is_stmt 1 view .LVU511
2079:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1850              		.loc 1 2079 14 is_stmt 0 view .LVU512
 1851 00e2 A36D     		ldr	r3, [r4, #88]
2079:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 1852              		.loc 1 2079 8 view .LVU513
 1853 00e4 DB06     		lsls	r3, r3, #27
 1854 00e6 03D4     		bmi	.L111
2082:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 1855              		.loc 1 2082 7 is_stmt 1 view .LVU514
 1856 00e8 A36D     		ldr	r3, [r4, #88]
 1857 00ea 0122     		movs	r2, #1
 1858 00ec 1343     		orrs	r3, r2
 1859 00ee A365     		str	r3, [r4, #88]
 1860              	.L111:
2089:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1861              		.loc 1 2089 5 view .LVU515
 1862 00f0 2000     		movs	r0, r4
 1863 00f2 FFF7FEFF 		bl	HAL_ADC_ADCReadyCallback
 1864              	.LVL130:
2093:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 1865              		.loc 1 2093 5 view .LVU516
 1866 00f6 2268     		ldr	r2, [r4]
 1867 00f8 5368     		ldr	r3, [r2, #4]
 1868 00fa 0121     		movs	r1, #1
 1869 00fc 8B43     		bics	r3, r1
 1870 00fe 5360     		str	r3, [r2, #4]
 1871              	.L110:
2097:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1872              		.loc 1 2097 3 view .LVU517
2097:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1873              		.loc 1 2097 6 is_stmt 0 view .LVU518
 1874 0100 2B05     		lsls	r3, r5, #20
 1875 0102 01D5     		bpl	.L112
2097:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 177


 1876              		.loc 1 2097 54 discriminator 1 view .LVU519
 1877 0104 3305     		lsls	r3, r6, #20
 1878 0106 33D4     		bmi	.L142
 1879              	.L112:
2111:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1880              		.loc 1 2111 3 is_stmt 1 view .LVU520
2111:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1881              		.loc 1 2111 6 is_stmt 0 view .LVU521
 1882 0108 AD04     		lsls	r5, r5, #18
 1883 010a 01D5     		bpl	.L95
 1884              	.LVL131:
2111:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 1885              		.loc 1 2111 54 discriminator 1 view .LVU522
 1886 010c B604     		lsls	r6, r6, #18
 1887 010e 37D4     		bmi	.L143
 1888              	.LVL132:
 1889              	.L95:
2123:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1890              		.loc 1 2123 1 view .LVU523
 1891              		@ sp needed
 1892              	.LVL133:
2123:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1893              		.loc 1 2123 1 view .LVU524
 1894 0110 70BD     		pop	{r4, r5, r6, pc}
 1895              	.LVL134:
 1896              	.L103:
1952:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1897              		.loc 1 1952 11 is_stmt 1 view .LVU525
 1898 0112 A36D     		ldr	r3, [r4, #88]
 1899 0114 2022     		movs	r2, #32
 1900 0116 1343     		orrs	r3, r2
 1901 0118 A365     		str	r3, [r4, #88]
1955:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 1902              		.loc 1 1955 11 view .LVU526
 1903 011a E36D     		ldr	r3, [r4, #92]
 1904 011c 1F3A     		subs	r2, r2, #31
 1905 011e 1343     		orrs	r3, r2
 1906 0120 E365     		str	r3, [r4, #92]
 1907 0122 AEE7     		b	.L102
 1908              	.L139:
1983:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1909              		.loc 1 1983 5 view .LVU527
 1910 0124 A26D     		ldr	r2, [r4, #88]
 1911 0126 8023     		movs	r3, #128
 1912 0128 5B02     		lsls	r3, r3, #9
 1913 012a 1343     		orrs	r3, r2
 1914 012c A365     		str	r3, [r4, #88]
1989:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1915              		.loc 1 1989 5 view .LVU528
 1916 012e 2000     		movs	r0, r4
 1917 0130 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1918              	.LVL135:
1993:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 1919              		.loc 1 1993 5 view .LVU529
 1920 0134 2368     		ldr	r3, [r4]
 1921 0136 8022     		movs	r2, #128
 1922 0138 1A60     		str	r2, [r3]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 178


 1923 013a ACE7     		b	.L104
 1924              	.L140:
2000:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1925              		.loc 1 2000 5 view .LVU530
 1926 013c A26D     		ldr	r2, [r4, #88]
 1927 013e 8023     		movs	r3, #128
 1928 0140 9B02     		lsls	r3, r3, #10
 1929 0142 1343     		orrs	r3, r2
 1930 0144 A365     		str	r3, [r4, #88]
2006:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1931              		.loc 1 2006 5 view .LVU531
 1932 0146 2000     		movs	r0, r4
 1933 0148 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1934              	.LVL136:
2010:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 1935              		.loc 1 2010 5 view .LVU532
 1936 014c 2368     		ldr	r3, [r4]
 1937 014e 8022     		movs	r2, #128
 1938 0150 5200     		lsls	r2, r2, #1
 1939 0152 1A60     		str	r2, [r3]
 1940 0154 A3E7     		b	.L105
 1941              	.L141:
2017:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1942              		.loc 1 2017 5 view .LVU533
 1943 0156 A26D     		ldr	r2, [r4, #88]
 1944 0158 8023     		movs	r3, #128
 1945 015a DB02     		lsls	r3, r3, #11
 1946 015c 1343     		orrs	r3, r2
 1947 015e A365     		str	r3, [r4, #88]
2023:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1948              		.loc 1 2023 5 view .LVU534
 1949 0160 2000     		movs	r0, r4
 1950 0162 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1951              	.LVL137:
2027:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 1952              		.loc 1 2027 5 view .LVU535
 1953 0166 2368     		ldr	r3, [r4]
 1954 0168 8022     		movs	r2, #128
 1955 016a 9200     		lsls	r2, r2, #2
 1956 016c 1A60     		str	r2, [r3]
 1957 016e 9AE7     		b	.L106
 1958              	.LVL138:
 1959              	.L142:
2103:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1960              		.loc 1 2103 5 view .LVU536
 1961 0170 2000     		movs	r0, r4
 1962 0172 FFF7FEFF 		bl	HAL_ADC_CalibrationCpltCallback
 1963              	.LVL139:
2107:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 1964              		.loc 1 2107 5 view .LVU537
 1965 0176 2368     		ldr	r3, [r4]
 1966 0178 8022     		movs	r2, #128
 1967 017a 1201     		lsls	r2, r2, #4
 1968 017c 1A60     		str	r2, [r3]
 1969 017e C3E7     		b	.L112
 1970              	.LVL140:
 1971              	.L143:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 179


2117:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1972              		.loc 1 2117 5 view .LVU538
 1973 0180 2000     		movs	r0, r4
 1974 0182 FFF7FEFF 		bl	HAL_ADCEx_ChannelConfigReadyCallback
 1975              	.LVL141:
2121:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 1976              		.loc 1 2121 5 view .LVU539
 1977 0186 2368     		ldr	r3, [r4]
 1978 0188 8022     		movs	r2, #128
 1979 018a 9201     		lsls	r2, r2, #6
 1980 018c 1A60     		str	r2, [r3]
2123:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 1981              		.loc 1 2123 1 is_stmt 0 view .LVU540
 1982 018e BFE7     		b	.L95
 1983              	.L145:
 1984              		.align	2
 1985              	.L144:
 1986 0190 FEFEFFFF 		.word	-258
 1987              		.cfi_endproc
 1988              	.LFE355:
 1990              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1991              		.align	1
 1992              		.global	HAL_ADC_ConfigChannel
 1993              		.syntax unified
 1994              		.code	16
 1995              		.thumb_func
 1997              	HAL_ADC_ConfigChannel:
 1998              	.LVL142:
 1999              	.LFB362:
2259:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2000              		.loc 1 2259 1 is_stmt 1 view -0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 8
 2003              		@ frame_needed = 0, uses_anonymous_args = 0
2259:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2004              		.loc 1 2259 1 is_stmt 0 view .LVU542
 2005 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2006              		.cfi_def_cfa_offset 20
 2007              		.cfi_offset 4, -20
 2008              		.cfi_offset 5, -16
 2009              		.cfi_offset 6, -12
 2010              		.cfi_offset 7, -8
 2011              		.cfi_offset 14, -4
 2012 0002 83B0     		sub	sp, sp, #12
 2013              		.cfi_def_cfa_offset 32
 2014 0004 0400     		movs	r4, r0
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2015              		.loc 1 2260 3 is_stmt 1 view .LVU543
 2016              	.LVL143:
2261:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 2017              		.loc 1 2261 3 view .LVU544
2262:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2018              		.loc 1 2262 3 view .LVU545
2262:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2019              		.loc 1 2262 17 is_stmt 0 view .LVU546
 2020 0006 0023     		movs	r3, #0
 2021 0008 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 180


2265:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
 2022              		.loc 1 2265 3 is_stmt 1 view .LVU547
2266:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(sConfig->SamplingTime));
 2023              		.loc 1 2266 3 view .LVU548
2267:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2024              		.loc 1 2267 3 view .LVU549
2269:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2025              		.loc 1 2269 3 view .LVU550
2269:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2026              		.loc 1 2269 18 is_stmt 0 view .LVU551
 2027 000a 0569     		ldr	r5, [r0, #16]
2272:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 2028              		.loc 1 2272 5 is_stmt 1 view .LVU552
2276:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2029              		.loc 1 2276 5 view .LVU553
2278:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 2030              		.loc 1 2278 5 view .LVU554
2282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2031              		.loc 1 2282 3 view .LVU555
2282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2032              		.loc 1 2282 3 view .LVU556
 2033 000c 5433     		adds	r3, r3, #84
 2034 000e C35C     		ldrb	r3, [r0, r3]
 2035 0010 012B     		cmp	r3, #1
 2036 0012 00D1     		bne	.LCB1878
 2037 0014 21E1     		b	.L162	@long jump
 2038              	.LCB1878:
2282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2039              		.loc 1 2282 3 discriminator 2 view .LVU557
 2040 0016 5423     		movs	r3, #84
 2041 0018 0122     		movs	r2, #1
 2042 001a C254     		strb	r2, [r0, r3]
2282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2043              		.loc 1 2282 3 view .LVU558
2290:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 2044              		.loc 1 2290 3 view .LVU559
2290:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 2045              		.loc 1 2290 42 is_stmt 0 view .LVU560
 2046 001c 0068     		ldr	r0, [r0]
 2047              	.LVL144:
 2048              	.LBB152:
 2049              	.LBI152:
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2050              		.loc 2 4783 26 is_stmt 1 view .LVU561
 2051              	.LBB153:
 2052              		.loc 2 4785 3 view .LVU562
 2053              		.loc 2 4785 12 is_stmt 0 view .LVU563
 2054 001e 8368     		ldr	r3, [r0, #8]
 2055 0020 0332     		adds	r2, r2, #3
 2056 0022 1600     		movs	r6, r2
 2057 0024 1E40     		ands	r6, r3
 2058              		.loc 2 4785 74 view .LVU564
 2059 0026 1A42     		tst	r2, r3
 2060 0028 09D0     		beq	.L148
 2061              	.LVL145:
 2062              		.loc 2 4785 74 view .LVU565
 2063              	.LBE153:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 181


 2064              	.LBE152:
2424:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2065              		.loc 1 2424 5 is_stmt 1 view .LVU566
 2066 002a A36D     		ldr	r3, [r4, #88]
 2067 002c 1C32     		adds	r2, r2, #28
 2068 002e 1343     		orrs	r3, r2
 2069 0030 A365     		str	r3, [r4, #88]
2426:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 2070              		.loc 1 2426 5 view .LVU567
 2071              	.LVL146:
2426:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 2072              		.loc 1 2426 20 is_stmt 0 view .LVU568
 2073 0032 0120     		movs	r0, #1
 2074              	.LVL147:
 2075              	.L149:
2430:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2076              		.loc 1 2430 3 is_stmt 1 view .LVU569
2430:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2077              		.loc 1 2430 3 view .LVU570
 2078 0034 5423     		movs	r3, #84
 2079 0036 0022     		movs	r2, #0
 2080 0038 E254     		strb	r2, [r4, r3]
2430:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2081              		.loc 1 2430 3 view .LVU571
2433:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 2082              		.loc 1 2433 3 view .LVU572
 2083              	.LVL148:
 2084              	.L147:
2434:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2085              		.loc 1 2434 1 is_stmt 0 view .LVU573
 2086 003a 03B0     		add	sp, sp, #12
 2087              		@ sp needed
 2088              	.LVL149:
2434:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2089              		.loc 1 2434 1 view .LVU574
 2090 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 2091              	.LVL150:
 2092              	.L148:
2299:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2093              		.loc 1 2299 5 is_stmt 1 view .LVU575
2299:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2094              		.loc 1 2299 16 is_stmt 0 view .LVU576
 2095 003e 4B68     		ldr	r3, [r1, #4]
2299:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2096              		.loc 1 2299 8 view .LVU577
 2097 0040 022B     		cmp	r3, #2
 2098 0042 00D1     		bne	.LCB1947
 2099 0044 D5E0     		b	.L150	@long jump
 2100              	.LCB1947:
2307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2101              		.loc 1 2307 7 is_stmt 1 view .LVU578
2307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2102              		.loc 1 2307 10 is_stmt 0 view .LVU579
 2103 0046 8022     		movs	r2, #128
 2104 0048 1206     		lsls	r2, r2, #24
 2105 004a 9542     		cmp	r5, r2
 2106 004c 25D0     		beq	.L151
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 182


2307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2107              		.loc 1 2307 65 discriminator 1 view .LVU580
 2108 004e 844A     		ldr	r2, .L197
 2109 0050 9542     		cmp	r5, r2
 2110 0052 22D0     		beq	.L151
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2111              		.loc 1 2320 9 is_stmt 1 view .LVU581
 2112 0054 226E     		ldr	r2, [r4, #96]
 2113 0056 1F27     		movs	r7, #31
 2114 0058 1F40     		ands	r7, r3
 2115 005a 0F25     		movs	r5, #15
 2116 005c BD40     		lsls	r5, r5, r7
 2117 005e AA43     		bics	r2, r5
 2118 0060 0B68     		ldr	r3, [r1]
 2119 0062 5D02     		lsls	r5, r3, #9
 2120 0064 2FD1     		bne	.L154
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2121              		.loc 1 2320 9 is_stmt 0 discriminator 1 view .LVU582
 2122 0066 9B0E     		lsrs	r3, r3, #26
 2123 0068 1F26     		movs	r6, #31
 2124 006a 1E40     		ands	r6, r3
 2125              	.L155:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2126              		.loc 1 2320 9 discriminator 96 view .LVU583
 2127 006c BE40     		lsls	r6, r6, r7
 2128 006e 3243     		orrs	r2, r6
 2129 0070 2266     		str	r2, [r4, #96]
2328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2130              		.loc 1 2328 9 is_stmt 1 view .LVU584
2328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2131              		.loc 1 2328 22 is_stmt 0 view .LVU585
 2132 0072 4D68     		ldr	r5, [r1, #4]
2328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2133              		.loc 1 2328 29 view .LVU586
 2134 0074 AB08     		lsrs	r3, r5, #2
2328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2135              		.loc 1 2328 37 view .LVU587
 2136 0076 0133     		adds	r3, r3, #1
2328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2137              		.loc 1 2328 57 view .LVU588
 2138 0078 E269     		ldr	r2, [r4, #28]
2328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2139              		.loc 1 2328 12 view .LVU589
 2140 007a 9342     		cmp	r3, r2
 2141 007c 13D8     		bhi	.L153
2330:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 2142              		.loc 1 2330 11 is_stmt 1 view .LVU590
2330:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 2143              		.loc 1 2330 78 is_stmt 0 view .LVU591
 2144 007e 0E68     		ldr	r6, [r1]
 2145              	.LVL151:
 2146              	.LBB154:
 2147              	.LBI154:
3088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2148              		.loc 2 3088 22 is_stmt 1 view .LVU592
 2149              	.LBB155:
3094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 183


 2150              		.loc 2 3094 3 view .LVU593
 2151 0080 826A     		ldr	r2, [r0, #40]
 2152 0082 1F23     		movs	r3, #31
 2153 0084 1D40     		ands	r5, r3
 2154              	.LVL152:
3094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2155              		.loc 2 3094 3 is_stmt 0 view .LVU594
 2156 0086 103B     		subs	r3, r3, #16
 2157 0088 1F00     		movs	r7, r3
 2158 008a AF40     		lsls	r7, r7, r5
 2159 008c BA43     		bics	r2, r7
 2160 008e B60E     		lsrs	r6, r6, #26
 2161              	.LVL153:
3094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2162              		.loc 2 3094 3 view .LVU595
 2163 0090 3340     		ands	r3, r6
 2164 0092 AB40     		lsls	r3, r3, r5
 2165 0094 1343     		orrs	r3, r2
 2166 0096 8362     		str	r3, [r0, #40]
 2167              	.LVL154:
3098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 2168              		.loc 2 3098 1 view .LVU596
 2169 0098 05E0     		b	.L153
 2170              	.L151:
3098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 2171              		.loc 2 3098 1 view .LVU597
 2172              	.LBE155:
 2173              	.LBE154:
2312:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 2174              		.loc 1 2312 9 is_stmt 1 view .LVU598
2312:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 2175              		.loc 1 2312 61 is_stmt 0 view .LVU599
 2176 009a 0B68     		ldr	r3, [r1]
 2177              	.LVL155:
 2178              	.LBB156:
 2179              	.LBI156:
3379:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2180              		.loc 2 3379 22 is_stmt 1 view .LVU600
 2181              	.LBB157:
3383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2182              		.loc 2 3383 3 view .LVU601
 2183 009c 826A     		ldr	r2, [r0, #40]
 2184 009e 5B02     		lsls	r3, r3, #9
 2185              	.LVL156:
3383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2186              		.loc 2 3383 3 is_stmt 0 view .LVU602
 2187 00a0 5B0A     		lsrs	r3, r3, #9
 2188 00a2 1343     		orrs	r3, r2
 2189 00a4 8362     		str	r3, [r0, #40]
 2190              	.LVL157:
 2191              	.L153:
3383:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2192              		.loc 2 3383 3 view .LVU603
 2193              	.LBE157:
 2194              	.LBE156:
2335:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2195              		.loc 1 2335 7 is_stmt 1 view .LVU604
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 184


 2196 00a6 2068     		ldr	r0, [r4]
2335:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2197              		.loc 1 2335 60 is_stmt 0 view .LVU605
 2198 00a8 0B68     		ldr	r3, [r1]
2335:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2199              		.loc 1 2335 78 view .LVU606
 2200 00aa 8D68     		ldr	r5, [r1, #8]
 2201              	.LVL158:
 2202              	.LBB158:
 2203              	.LBI158:
3840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2204              		.loc 2 3840 22 is_stmt 1 view .LVU607
 2205              	.LBB159:
3844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 2206              		.loc 2 3844 3 view .LVU608
 2207 00ac 4269     		ldr	r2, [r0, #20]
 2208 00ae 1B02     		lsls	r3, r3, #8
 2209              	.LVL159:
3844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 2210              		.loc 2 3844 3 is_stmt 0 view .LVU609
 2211 00b0 9A43     		bics	r2, r3
 2212 00b2 2B40     		ands	r3, r5
 2213 00b4 6B4D     		ldr	r5, .L197+4
 2214              	.LVL160:
3844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 2215              		.loc 2 3844 3 view .LVU610
 2216 00b6 2B40     		ands	r3, r5
 2217 00b8 1343     		orrs	r3, r2
 2218 00ba 4361     		str	r3, [r0, #20]
 2219              	.LVL161:
3844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 2220              		.loc 2 3844 3 view .LVU611
 2221              	.LBE159:
 2222              	.LBE158:
2343:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2223              		.loc 1 2343 7 is_stmt 1 view .LVU612
2343:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2224              		.loc 1 2343 11 is_stmt 0 view .LVU613
 2225 00bc 0B68     		ldr	r3, [r1]
2343:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2226              		.loc 1 2343 10 view .LVU614
 2227 00be 002B     		cmp	r3, #0
 2228 00c0 5FDB     		blt	.L191
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2229              		.loc 1 2260 21 view .LVU615
 2230 00c2 0020     		movs	r0, #0
 2231 00c4 B6E7     		b	.L149
 2232              	.L154:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2233              		.loc 1 2320 9 discriminator 2 view .LVU616
 2234 00c6 DD07     		lsls	r5, r3, #31
 2235 00c8 D0D4     		bmi	.L155
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2236              		.loc 1 2320 9 discriminator 4 view .LVU617
 2237 00ca 9D07     		lsls	r5, r3, #30
 2238 00cc 2FD4     		bmi	.L163
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 185


 2239              		.loc 1 2320 9 discriminator 6 view .LVU618
 2240 00ce 5D07     		lsls	r5, r3, #29
 2241 00d0 2FD4     		bmi	.L164
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2242              		.loc 1 2320 9 discriminator 8 view .LVU619
 2243 00d2 1D07     		lsls	r5, r3, #28
 2244 00d4 2FD4     		bmi	.L165
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2245              		.loc 1 2320 9 discriminator 10 view .LVU620
 2246 00d6 DD06     		lsls	r5, r3, #27
 2247 00d8 2FD4     		bmi	.L166
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2248              		.loc 1 2320 9 discriminator 12 view .LVU621
 2249 00da 9D06     		lsls	r5, r3, #26
 2250 00dc 2FD4     		bmi	.L167
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2251              		.loc 1 2320 9 discriminator 14 view .LVU622
 2252 00de 5D06     		lsls	r5, r3, #25
 2253 00e0 2FD4     		bmi	.L168
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2254              		.loc 1 2320 9 discriminator 16 view .LVU623
 2255 00e2 1D06     		lsls	r5, r3, #24
 2256 00e4 2FD4     		bmi	.L169
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2257              		.loc 1 2320 9 discriminator 18 view .LVU624
 2258 00e6 DD05     		lsls	r5, r3, #23
 2259 00e8 2FD4     		bmi	.L170
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2260              		.loc 1 2320 9 discriminator 20 view .LVU625
 2261 00ea 9D05     		lsls	r5, r3, #22
 2262 00ec 2FD4     		bmi	.L171
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2263              		.loc 1 2320 9 discriminator 22 view .LVU626
 2264 00ee 5D05     		lsls	r5, r3, #21
 2265 00f0 2FD4     		bmi	.L172
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2266              		.loc 1 2320 9 discriminator 24 view .LVU627
 2267 00f2 1D05     		lsls	r5, r3, #20
 2268 00f4 2FD4     		bmi	.L173
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2269              		.loc 1 2320 9 discriminator 26 view .LVU628
 2270 00f6 DD04     		lsls	r5, r3, #19
 2271 00f8 2FD4     		bmi	.L174
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2272              		.loc 1 2320 9 discriminator 28 view .LVU629
 2273 00fa 9D04     		lsls	r5, r3, #18
 2274 00fc 2FD4     		bmi	.L175
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2275              		.loc 1 2320 9 discriminator 30 view .LVU630
 2276 00fe 5D04     		lsls	r5, r3, #17
 2277 0100 2FD4     		bmi	.L176
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2278              		.loc 1 2320 9 discriminator 32 view .LVU631
 2279 0102 1D04     		lsls	r5, r3, #16
 2280 0104 2FD4     		bmi	.L177
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2281              		.loc 1 2320 9 discriminator 34 view .LVU632
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 186


 2282 0106 DD03     		lsls	r5, r3, #15
 2283 0108 2FD4     		bmi	.L178
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2284              		.loc 1 2320 9 discriminator 36 view .LVU633
 2285 010a 9D03     		lsls	r5, r3, #14
 2286 010c 2FD4     		bmi	.L179
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2287              		.loc 1 2320 9 discriminator 38 view .LVU634
 2288 010e 5D03     		lsls	r5, r3, #13
 2289 0110 2FD4     		bmi	.L180
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2290              		.loc 1 2320 9 discriminator 40 view .LVU635
 2291 0112 1D03     		lsls	r5, r3, #12
 2292 0114 2FD4     		bmi	.L181
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2293              		.loc 1 2320 9 discriminator 42 view .LVU636
 2294 0116 DD02     		lsls	r5, r3, #11
 2295 0118 2FD4     		bmi	.L182
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2296              		.loc 1 2320 9 discriminator 44 view .LVU637
 2297 011a 9D02     		lsls	r5, r3, #10
 2298 011c 2FD4     		bmi	.L183
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2299              		.loc 1 2320 9 discriminator 46 view .LVU638
 2300 011e 8025     		movs	r5, #128
 2301 0120 ED03     		lsls	r5, r5, #15
 2302 0122 1E00     		movs	r6, r3
 2303 0124 2E40     		ands	r6, r5
 2304 0126 2B42     		tst	r3, r5
 2305 0128 A0D0     		beq	.L155
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2306              		.loc 1 2320 9 discriminator 48 view .LVU639
 2307 012a 1626     		movs	r6, #22
 2308 012c 9EE7     		b	.L155
 2309              	.L163:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2310              		.loc 1 2320 9 discriminator 7 view .LVU640
 2311 012e 0126     		movs	r6, #1
 2312 0130 9CE7     		b	.L155
 2313              	.L164:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2314              		.loc 1 2320 9 discriminator 9 view .LVU641
 2315 0132 0226     		movs	r6, #2
 2316 0134 9AE7     		b	.L155
 2317              	.L165:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2318              		.loc 1 2320 9 discriminator 11 view .LVU642
 2319 0136 0326     		movs	r6, #3
 2320 0138 98E7     		b	.L155
 2321              	.L166:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2322              		.loc 1 2320 9 discriminator 13 view .LVU643
 2323 013a 0426     		movs	r6, #4
 2324 013c 96E7     		b	.L155
 2325              	.L167:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2326              		.loc 1 2320 9 discriminator 15 view .LVU644
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 187


 2327 013e 0526     		movs	r6, #5
 2328 0140 94E7     		b	.L155
 2329              	.L168:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2330              		.loc 1 2320 9 discriminator 17 view .LVU645
 2331 0142 0626     		movs	r6, #6
 2332 0144 92E7     		b	.L155
 2333              	.L169:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2334              		.loc 1 2320 9 discriminator 19 view .LVU646
 2335 0146 0726     		movs	r6, #7
 2336 0148 90E7     		b	.L155
 2337              	.L170:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2338              		.loc 1 2320 9 discriminator 21 view .LVU647
 2339 014a 0826     		movs	r6, #8
 2340 014c 8EE7     		b	.L155
 2341              	.L171:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2342              		.loc 1 2320 9 discriminator 23 view .LVU648
 2343 014e 0926     		movs	r6, #9
 2344 0150 8CE7     		b	.L155
 2345              	.L172:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2346              		.loc 1 2320 9 discriminator 25 view .LVU649
 2347 0152 0A26     		movs	r6, #10
 2348 0154 8AE7     		b	.L155
 2349              	.L173:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2350              		.loc 1 2320 9 discriminator 27 view .LVU650
 2351 0156 0B26     		movs	r6, #11
 2352 0158 88E7     		b	.L155
 2353              	.L174:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2354              		.loc 1 2320 9 discriminator 29 view .LVU651
 2355 015a 0C26     		movs	r6, #12
 2356 015c 86E7     		b	.L155
 2357              	.L175:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2358              		.loc 1 2320 9 discriminator 31 view .LVU652
 2359 015e 0D26     		movs	r6, #13
 2360 0160 84E7     		b	.L155
 2361              	.L176:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2362              		.loc 1 2320 9 discriminator 33 view .LVU653
 2363 0162 0E26     		movs	r6, #14
 2364 0164 82E7     		b	.L155
 2365              	.L177:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2366              		.loc 1 2320 9 discriminator 35 view .LVU654
 2367 0166 0F26     		movs	r6, #15
 2368 0168 80E7     		b	.L155
 2369              	.L178:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2370              		.loc 1 2320 9 discriminator 37 view .LVU655
 2371 016a 1026     		movs	r6, #16
 2372 016c 7EE7     		b	.L155
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 188


 2373              	.L179:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2374              		.loc 1 2320 9 discriminator 39 view .LVU656
 2375 016e 1126     		movs	r6, #17
 2376 0170 7CE7     		b	.L155
 2377              	.L180:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2378              		.loc 1 2320 9 discriminator 41 view .LVU657
 2379 0172 1226     		movs	r6, #18
 2380 0174 7AE7     		b	.L155
 2381              	.L181:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2382              		.loc 1 2320 9 discriminator 43 view .LVU658
 2383 0176 1326     		movs	r6, #19
 2384 0178 78E7     		b	.L155
 2385              	.L182:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2386              		.loc 1 2320 9 discriminator 45 view .LVU659
 2387 017a 1426     		movs	r6, #20
 2388 017c 76E7     		b	.L155
 2389              	.L183:
2320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2390              		.loc 1 2320 9 discriminator 47 view .LVU660
 2391 017e 1526     		movs	r6, #21
 2392 0180 74E7     		b	.L155
 2393              	.L191:
2345:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2394              		.loc 1 2345 9 is_stmt 1 view .LVU661
 2395              	.LVL162:
 2396              	.LBB160:
 2397              	.LBI160:
2167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2398              		.loc 2 2167 26 view .LVU662
 2399              	.LBB161:
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2400              		.loc 2 2169 3 view .LVU663
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2401              		.loc 2 2169 21 is_stmt 0 view .LVU664
 2402 0182 394A     		ldr	r2, .L197+8
 2403 0184 1168     		ldr	r1, [r2]
 2404              	.LVL163:
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2405              		.loc 2 2169 10 view .LVU665
 2406 0186 C022     		movs	r2, #192
 2407 0188 1204     		lsls	r2, r2, #16
 2408 018a 0A40     		ands	r2, r1
 2409              	.LVL164:
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2410              		.loc 2 2169 10 view .LVU666
 2411              	.LBE161:
 2412              	.LBE160:
2349:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2413              		.loc 1 2349 9 is_stmt 1 view .LVU667
2349:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2414              		.loc 1 2349 12 is_stmt 0 view .LVU668
 2415 018c 3748     		ldr	r0, .L197+12
 2416 018e 8342     		cmp	r3, r0
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 189


 2417 0190 04D0     		beq	.L192
 2418              	.L156:
2366:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2419              		.loc 1 2366 14 is_stmt 1 view .LVU669
2366:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2420              		.loc 1 2366 17 is_stmt 0 view .LVU670
 2421 0192 3748     		ldr	r0, .L197+16
 2422 0194 8342     		cmp	r3, r0
 2423 0196 1FD0     		beq	.L193
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2424              		.loc 1 2260 21 view .LVU671
 2425 0198 0020     		movs	r0, #0
 2426 019a 4BE7     		b	.L149
 2427              	.L192:
2349:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2428              		.loc 1 2349 58 discriminator 1 view .LVU672
 2429 019c 0802     		lsls	r0, r1, #8
 2430 019e F8D4     		bmi	.L156
2352:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 2431              		.loc 1 2352 11 is_stmt 1 view .LVU673
 2432 01a0 8023     		movs	r3, #128
 2433 01a2 1B04     		lsls	r3, r3, #16
 2434 01a4 1343     		orrs	r3, r2
 2435              	.LVL165:
 2436              	.LBB162:
 2437              	.LBI162:
2078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2438              		.loc 2 2078 22 view .LVU674
 2439              	.LBB163:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2440              		.loc 2 2080 3 view .LVU675
 2441 01a6 3049     		ldr	r1, .L197+8
 2442 01a8 0A68     		ldr	r2, [r1]
 2443              	.LVL166:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2444              		.loc 2 2080 3 is_stmt 0 view .LVU676
 2445 01aa 3248     		ldr	r0, .L197+20
 2446 01ac 0240     		ands	r2, r0
 2447 01ae 1343     		orrs	r3, r2
 2448              	.LVL167:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2449              		.loc 2 2080 3 view .LVU677
 2450 01b0 0B60     		str	r3, [r1]
 2451              	.LVL168:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2452              		.loc 2 2080 3 view .LVU678
 2453              	.LBE163:
 2454              	.LBE162:
2360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2455              		.loc 1 2360 11 is_stmt 1 view .LVU679
2360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2456              		.loc 1 2360 91 is_stmt 0 view .LVU680
 2457 01b2 314B     		ldr	r3, .L197+24
 2458 01b4 1868     		ldr	r0, [r3]
 2459 01b6 3149     		ldr	r1, .L197+28
 2460 01b8 FFF7FEFF 		bl	__aeabi_uidiv
 2461              	.LVL169:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 190


2360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2462              		.loc 1 2360 72 view .LVU681
 2463 01bc 4300     		lsls	r3, r0, #1
 2464 01be 1B18     		adds	r3, r3, r0
 2465 01c0 9B00     		lsls	r3, r3, #2
2360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2466              		.loc 1 2360 112 view .LVU682
 2467 01c2 0133     		adds	r3, r3, #1
2360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2468              		.loc 1 2360 27 view .LVU683
 2469 01c4 0193     		str	r3, [sp, #4]
2361:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           {
 2470              		.loc 1 2361 11 is_stmt 1 view .LVU684
2361:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           {
 2471              		.loc 1 2361 17 is_stmt 0 view .LVU685
 2472 01c6 02E0     		b	.L157
 2473              	.L158:
2363:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 2474              		.loc 1 2363 13 is_stmt 1 view .LVU686
2363:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 2475              		.loc 1 2363 28 is_stmt 0 view .LVU687
 2476 01c8 019B     		ldr	r3, [sp, #4]
 2477 01ca 013B     		subs	r3, r3, #1
 2478 01cc 0193     		str	r3, [sp, #4]
 2479              	.L157:
2361:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           {
 2480              		.loc 1 2361 34 is_stmt 1 view .LVU688
 2481 01ce 019B     		ldr	r3, [sp, #4]
 2482 01d0 002B     		cmp	r3, #0
 2483 01d2 F9D1     		bne	.L158
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2484              		.loc 1 2260 21 is_stmt 0 view .LVU689
 2485 01d4 0020     		movs	r0, #0
 2486 01d6 2DE7     		b	.L149
 2487              	.LVL170:
 2488              	.L193:
2366:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2489              		.loc 1 2366 60 discriminator 1 view .LVU690
 2490 01d8 4902     		lsls	r1, r1, #9
 2491 01da 3CD4     		bmi	.L186
2369:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 2492              		.loc 1 2369 11 is_stmt 1 view .LVU691
 2493 01dc 8023     		movs	r3, #128
 2494 01de DB03     		lsls	r3, r3, #15
 2495 01e0 1343     		orrs	r3, r2
 2496              	.LVL171:
 2497              	.LBB164:
 2498              	.LBI164:
2078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2499              		.loc 2 2078 22 view .LVU692
 2500              	.LBB165:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2501              		.loc 2 2080 3 view .LVU693
 2502 01e2 2149     		ldr	r1, .L197+8
 2503 01e4 0A68     		ldr	r2, [r1]
 2504              	.LVL172:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 191


 2505              		.loc 2 2080 3 is_stmt 0 view .LVU694
 2506 01e6 2348     		ldr	r0, .L197+20
 2507 01e8 0240     		ands	r2, r0
 2508 01ea 1343     		orrs	r3, r2
 2509              	.LVL173:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2510              		.loc 2 2080 3 view .LVU695
 2511 01ec 0B60     		str	r3, [r1]
 2512              	.LVL174:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2513              		.loc 2 2080 3 view .LVU696
 2514              	.LBE165:
 2515              	.LBE164:
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2516              		.loc 1 2260 21 view .LVU697
 2517 01ee 0020     		movs	r0, #0
 2518              	.LBB167:
 2519              	.LBB166:
2081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 2520              		.loc 2 2081 1 view .LVU698
 2521 01f0 20E7     		b	.L149
 2522              	.LVL175:
 2523              	.L150:
2081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 2524              		.loc 2 2081 1 view .LVU699
 2525              	.LBE166:
 2526              	.LBE167:
2385:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2527              		.loc 1 2385 7 is_stmt 1 view .LVU700
2385:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2528              		.loc 1 2385 10 is_stmt 0 view .LVU701
 2529 01f2 8023     		movs	r3, #128
 2530 01f4 1B06     		lsls	r3, r3, #24
 2531 01f6 9D42     		cmp	r5, r3
 2532 01f8 02D0     		beq	.L159
2385:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2533              		.loc 1 2385 65 discriminator 1 view .LVU702
 2534 01fa 194B     		ldr	r3, .L197
 2535 01fc 9D42     		cmp	r5, r3
 2536 01fe 05D1     		bne	.L160
 2537              	.L159:
2390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 2538              		.loc 1 2390 9 is_stmt 1 view .LVU703
2390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 2539              		.loc 1 2390 61 is_stmt 0 view .LVU704
 2540 0200 0B68     		ldr	r3, [r1]
 2541              	.LVL176:
 2542              	.LBB168:
 2543              	.LBI168:
3480:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2544              		.loc 2 3480 22 is_stmt 1 view .LVU705
 2545              	.LBB169:
3484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2546              		.loc 2 3484 3 view .LVU706
 2547 0202 826A     		ldr	r2, [r0, #40]
 2548 0204 5B02     		lsls	r3, r3, #9
 2549              	.LVL177:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 192


3484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2550              		.loc 2 3484 3 is_stmt 0 view .LVU707
 2551 0206 5B0A     		lsrs	r3, r3, #9
 2552 0208 9A43     		bics	r2, r3
 2553 020a 8262     		str	r2, [r0, #40]
 2554              	.LVL178:
 2555              	.L160:
3484:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2556              		.loc 2 3484 3 view .LVU708
 2557              	.LBE169:
 2558              	.LBE168:
2396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2559              		.loc 1 2396 7 is_stmt 1 view .LVU709
2396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2560              		.loc 1 2396 11 is_stmt 0 view .LVU710
 2561 020c 0B68     		ldr	r3, [r1]
2396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2562              		.loc 1 2396 10 view .LVU711
 2563 020e 002B     		cmp	r3, #0
 2564 0210 01DB     		blt	.L194
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2565              		.loc 1 2260 21 view .LVU712
 2566 0212 0020     		movs	r0, #0
 2567 0214 0EE7     		b	.L149
 2568              	.L194:
2398:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2569              		.loc 1 2398 9 is_stmt 1 view .LVU713
 2570              	.LVL179:
 2571              	.LBB170:
 2572              	.LBI170:
2167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2573              		.loc 2 2167 26 view .LVU714
 2574              	.LBB171:
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2575              		.loc 2 2169 3 view .LVU715
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2576              		.loc 2 2169 21 is_stmt 0 view .LVU716
 2577 0216 144A     		ldr	r2, .L197+8
 2578 0218 1268     		ldr	r2, [r2]
 2579              	.LVL180:
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2580              		.loc 2 2169 21 view .LVU717
 2581              	.LBE171:
 2582              	.LBE170:
2400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2583              		.loc 1 2400 9 is_stmt 1 view .LVU718
2400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2584              		.loc 1 2400 12 is_stmt 0 view .LVU719
 2585 021a 1449     		ldr	r1, .L197+12
 2586              	.LVL181:
2400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2587              		.loc 1 2400 12 view .LVU720
 2588 021c 8B42     		cmp	r3, r1
 2589 021e 04D0     		beq	.L195
2405:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 2590              		.loc 1 2405 14 is_stmt 1 view .LVU721
2405:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 193


 2591              		.loc 1 2405 17 is_stmt 0 view .LVU722
 2592 0220 1349     		ldr	r1, .L197+16
 2593 0222 8B42     		cmp	r3, r1
 2594 0224 0CD0     		beq	.L196
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2595              		.loc 1 2260 21 view .LVU723
 2596 0226 0020     		movs	r0, #0
 2597 0228 04E7     		b	.L149
 2598              	.L195:
2402:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
 2599              		.loc 1 2402 11 is_stmt 1 view .LVU724
 2600 022a 8023     		movs	r3, #128
 2601 022c DB03     		lsls	r3, r3, #15
 2602 022e 1A40     		ands	r2, r3
 2603              	.LVL182:
 2604              	.LBB172:
 2605              	.LBI172:
2078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2606              		.loc 2 2078 22 view .LVU725
 2607              	.LBB173:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2608              		.loc 2 2080 3 view .LVU726
 2609 0230 0D49     		ldr	r1, .L197+8
 2610 0232 0B68     		ldr	r3, [r1]
 2611 0234 0F48     		ldr	r0, .L197+20
 2612 0236 0340     		ands	r3, r0
 2613 0238 1A43     		orrs	r2, r3
 2614              	.LVL183:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2615              		.loc 2 2080 3 is_stmt 0 view .LVU727
 2616 023a 0A60     		str	r2, [r1]
 2617              	.LVL184:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2618              		.loc 2 2080 3 view .LVU728
 2619              	.LBE173:
 2620              	.LBE172:
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2621              		.loc 1 2260 21 view .LVU729
 2622 023c 0020     		movs	r0, #0
 2623              	.LBB175:
 2624              	.LBB174:
2081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 2625              		.loc 2 2081 1 view .LVU730
 2626 023e F9E6     		b	.L149
 2627              	.LVL185:
 2628              	.L196:
2081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 2629              		.loc 2 2081 1 view .LVU731
 2630              	.LBE174:
 2631              	.LBE175:
2407:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
 2632              		.loc 1 2407 11 is_stmt 1 view .LVU732
 2633 0240 8023     		movs	r3, #128
 2634 0242 1B04     		lsls	r3, r3, #16
 2635 0244 1A40     		ands	r2, r3
 2636              	.LVL186:
 2637              	.LBB176:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 194


 2638              	.LBI176:
2078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2639              		.loc 2 2078 22 view .LVU733
 2640              	.LBB177:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2641              		.loc 2 2080 3 view .LVU734
 2642 0246 0849     		ldr	r1, .L197+8
 2643 0248 0B68     		ldr	r3, [r1]
 2644 024a 0A48     		ldr	r0, .L197+20
 2645 024c 0340     		ands	r3, r0
 2646 024e 1A43     		orrs	r2, r3
 2647              	.LVL187:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2648              		.loc 2 2080 3 is_stmt 0 view .LVU735
 2649 0250 0A60     		str	r2, [r1]
 2650              	.LVL188:
2080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2651              		.loc 2 2080 3 view .LVU736
 2652              	.LBE177:
 2653              	.LBE176:
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2654              		.loc 1 2260 21 view .LVU737
 2655 0252 0020     		movs	r0, #0
 2656              	.LBB179:
 2657              	.LBB178:
2081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 2658              		.loc 2 2081 1 view .LVU738
 2659 0254 EEE6     		b	.L149
 2660              	.LVL189:
 2661              	.L186:
2081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 2662              		.loc 2 2081 1 view .LVU739
 2663              	.LBE178:
 2664              	.LBE179:
2260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2665              		.loc 1 2260 21 view .LVU740
 2666 0256 0020     		movs	r0, #0
 2667 0258 ECE6     		b	.L149
 2668              	.LVL190:
 2669              	.L162:
2282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2670              		.loc 1 2282 3 discriminator 1 view .LVU741
 2671 025a 0220     		movs	r0, #2
 2672              	.LVL191:
2282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2673              		.loc 1 2282 3 discriminator 1 view .LVU742
 2674 025c EDE6     		b	.L147
 2675              	.L198:
 2676 025e C046     		.align	2
 2677              	.L197:
 2678 0260 04000080 		.word	-2147483644
 2679 0264 00FFFF7F 		.word	2147483392
 2680 0268 08270140 		.word	1073817352
 2681 026c 000200A4 		.word	-1543503360
 2682 0270 000400A8 		.word	-1476393984
 2683 0274 FFFF3FFF 		.word	-12582913
 2684 0278 00000000 		.word	SystemCoreClock
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 195


 2685 027c 400D0300 		.word	200000
 2686              		.cfi_endproc
 2687              	.LFE362:
 2689              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2690              		.align	1
 2691              		.global	HAL_ADC_GetState
 2692              		.syntax unified
 2693              		.code	16
 2694              		.thumb_func
 2696              	HAL_ADC_GetState:
 2697              	.LVL192:
 2698              	.LFB364:
2702:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
 2699              		.loc 1 2702 1 is_stmt 1 view -0
 2700              		.cfi_startproc
 2701              		@ args = 0, pretend = 0, frame = 0
 2702              		@ frame_needed = 0, uses_anonymous_args = 0
 2703              		@ link register save eliminated.
2704:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2704              		.loc 1 2704 3 view .LVU744
2707:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 2705              		.loc 1 2707 3 view .LVU745
2707:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 2706              		.loc 1 2707 14 is_stmt 0 view .LVU746
 2707 0000 806D     		ldr	r0, [r0, #88]
 2708              	.LVL193:
2708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2709              		.loc 1 2708 1 view .LVU747
 2710              		@ sp needed
 2711 0002 7047     		bx	lr
 2712              		.cfi_endproc
 2713              	.LFE364:
 2715              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2716              		.align	1
 2717              		.global	HAL_ADC_GetError
 2718              		.syntax unified
 2719              		.code	16
 2720              		.thumb_func
 2722              	HAL_ADC_GetError:
 2723              	.LVL194:
 2724              	.LFB365:
2716:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   /* Check the parameters */
 2725              		.loc 1 2716 1 is_stmt 1 view -0
 2726              		.cfi_startproc
 2727              		@ args = 0, pretend = 0, frame = 0
 2728              		@ frame_needed = 0, uses_anonymous_args = 0
 2729              		@ link register save eliminated.
2718:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2730              		.loc 1 2718 3 view .LVU749
2720:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 2731              		.loc 1 2720 3 view .LVU750
2720:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 2732              		.loc 1 2720 14 is_stmt 0 view .LVU751
 2733 0000 C06D     		ldr	r0, [r0, #92]
 2734              	.LVL195:
2721:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2735              		.loc 1 2721 1 view .LVU752
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 196


 2736              		@ sp needed
 2737 0002 7047     		bx	lr
 2738              		.cfi_endproc
 2739              	.LFE365:
 2741              		.section	.text.ADC_ConversionStop,"ax",%progbits
 2742              		.align	1
 2743              		.global	ADC_ConversionStop
 2744              		.syntax unified
 2745              		.code	16
 2746              		.thumb_func
 2748              	ADC_ConversionStop:
 2749              	.LVL196:
 2750              	.LFB366:
2743:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
 2751              		.loc 1 2743 1 is_stmt 1 view -0
 2752              		.cfi_startproc
 2753              		@ args = 0, pretend = 0, frame = 0
 2754              		@ frame_needed = 0, uses_anonymous_args = 0
2743:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
 2755              		.loc 1 2743 1 is_stmt 0 view .LVU754
 2756 0000 70B5     		push	{r4, r5, r6, lr}
 2757              		.cfi_def_cfa_offset 16
 2758              		.cfi_offset 4, -16
 2759              		.cfi_offset 5, -12
 2760              		.cfi_offset 6, -8
 2761              		.cfi_offset 14, -4
 2762 0002 0400     		movs	r4, r0
2744:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2763              		.loc 1 2744 3 is_stmt 1 view .LVU755
2747:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2764              		.loc 1 2747 3 view .LVU756
2751:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 2765              		.loc 1 2751 3 view .LVU757
2751:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 2766              		.loc 1 2751 42 is_stmt 0 view .LVU758
 2767 0004 0268     		ldr	r2, [r0]
 2768              	.LVL197:
 2769              	.LBB180:
 2770              	.LBI180:
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2771              		.loc 2 4783 26 is_stmt 1 view .LVU759
 2772              	.LBB181:
 2773              		.loc 2 4785 3 view .LVU760
 2774              		.loc 2 4785 12 is_stmt 0 view .LVU761
 2775 0006 9368     		ldr	r3, [r2, #8]
 2776              		.loc 2 4785 74 view .LVU762
 2777 0008 5B07     		lsls	r3, r3, #29
 2778 000a 20D5     		bpl	.L206
 2779              	.LVL198:
 2780              		.loc 2 4785 74 view .LVU763
 2781              	.LBE181:
 2782              	.LBE180:
2755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2783              		.loc 1 2755 5 is_stmt 1 view .LVU764
 2784              	.LBB182:
 2785              	.LBI182:
4667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 197


 2786              		.loc 2 4667 26 view .LVU765
 2787              	.LBB183:
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2788              		.loc 2 4669 3 view .LVU766
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2789              		.loc 2 4669 12 is_stmt 0 view .LVU767
 2790 000c 9368     		ldr	r3, [r2, #8]
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2791              		.loc 2 4669 70 view .LVU768
 2792 000e 9B07     		lsls	r3, r3, #30
 2793 0010 05D4     		bmi	.L203
 2794              	.LVL199:
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2795              		.loc 2 4669 70 view .LVU769
 2796              	.LBE183:
 2797              	.LBE182:
2758:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 2798              		.loc 1 2758 7 is_stmt 1 view .LVU770
 2799              	.LBB184:
 2800              	.LBI184:
4767:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2801              		.loc 2 4767 22 view .LVU771
 2802              	.LBB185:
4772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2803              		.loc 2 4772 3 view .LVU772
 2804 0012 9368     		ldr	r3, [r2, #8]
 2805 0014 0F49     		ldr	r1, .L209
 2806 0016 0B40     		ands	r3, r1
 2807 0018 1021     		movs	r1, #16
 2808 001a 0B43     		orrs	r3, r1
 2809 001c 9360     		str	r3, [r2, #8]
 2810              	.LVL200:
 2811              	.L203:
4772:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2812              		.loc 2 4772 3 is_stmt 0 view .LVU773
 2813              	.LBE185:
 2814              	.LBE184:
2763:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2815              		.loc 1 2763 5 is_stmt 1 view .LVU774
2763:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2816              		.loc 1 2763 17 is_stmt 0 view .LVU775
 2817 001e FFF7FEFF 		bl	HAL_GetTick
 2818              	.LVL201:
2763:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2819              		.loc 1 2763 17 view .LVU776
 2820 0022 0500     		movs	r5, r0
 2821              	.LVL202:
2765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2822              		.loc 1 2765 5 is_stmt 1 view .LVU777
 2823              	.L204:
2765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2824              		.loc 1 2765 50 view .LVU778
2765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2825              		.loc 1 2765 17 is_stmt 0 view .LVU779
 2826 0024 2368     		ldr	r3, [r4]
2765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2827              		.loc 1 2765 27 view .LVU780
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 198


 2828 0026 9B68     		ldr	r3, [r3, #8]
2765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2829              		.loc 1 2765 50 view .LVU781
 2830 0028 5B07     		lsls	r3, r3, #29
 2831 002a 0ED5     		bpl	.L208
2767:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2832              		.loc 1 2767 7 is_stmt 1 view .LVU782
2767:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2833              		.loc 1 2767 12 is_stmt 0 view .LVU783
 2834 002c FFF7FEFF 		bl	HAL_GetTick
 2835              	.LVL203:
2767:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2836              		.loc 1 2767 26 discriminator 1 view .LVU784
 2837 0030 401B     		subs	r0, r0, r5
2767:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2838              		.loc 1 2767 10 discriminator 1 view .LVU785
 2839 0032 0228     		cmp	r0, #2
 2840 0034 F6D9     		bls	.L204
2770:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2841              		.loc 1 2770 9 is_stmt 1 view .LVU786
 2842 0036 A36D     		ldr	r3, [r4, #88]
 2843 0038 1022     		movs	r2, #16
 2844 003a 1343     		orrs	r3, r2
 2845 003c A365     		str	r3, [r4, #88]
2773:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2846              		.loc 1 2773 9 view .LVU787
 2847 003e E36D     		ldr	r3, [r4, #92]
 2848 0040 0F3A     		subs	r2, r2, #15
 2849 0042 1343     		orrs	r3, r2
 2850 0044 E365     		str	r3, [r4, #92]
2775:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 2851              		.loc 1 2775 9 view .LVU788
2775:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 2852              		.loc 1 2775 16 is_stmt 0 view .LVU789
 2853 0046 0120     		movs	r0, #1
 2854 0048 02E0     		b	.L202
 2855              	.L208:
2782:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 2856              		.loc 1 2782 10 view .LVU790
 2857 004a 0020     		movs	r0, #0
 2858 004c 00E0     		b	.L202
 2859              	.LVL204:
 2860              	.L206:
2782:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 2861              		.loc 1 2782 10 view .LVU791
 2862 004e 0020     		movs	r0, #0
 2863              	.LVL205:
 2864              	.L202:
2783:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2865              		.loc 1 2783 1 view .LVU792
 2866              		@ sp needed
 2867              	.LVL206:
2783:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2868              		.loc 1 2783 1 view .LVU793
 2869 0050 70BD     		pop	{r4, r5, r6, pc}
 2870              	.L210:
 2871 0052 C046     		.align	2
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 199


 2872              	.L209:
 2873 0054 E8FFFF7F 		.word	2147483624
 2874              		.cfi_endproc
 2875              	.LFE366:
 2877              		.section	.text.ADC_Enable,"ax",%progbits
 2878              		.align	1
 2879              		.global	ADC_Enable
 2880              		.syntax unified
 2881              		.code	16
 2882              		.thumb_func
 2884              	ADC_Enable:
 2885              	.LVL207:
 2886              	.LFB367:
2793:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
 2887              		.loc 1 2793 1 is_stmt 1 view -0
 2888              		.cfi_startproc
 2889              		@ args = 0, pretend = 0, frame = 8
 2890              		@ frame_needed = 0, uses_anonymous_args = 0
2793:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
 2891              		.loc 1 2793 1 is_stmt 0 view .LVU795
 2892 0000 30B5     		push	{r4, r5, lr}
 2893              		.cfi_def_cfa_offset 12
 2894              		.cfi_offset 4, -12
 2895              		.cfi_offset 5, -8
 2896              		.cfi_offset 14, -4
 2897 0002 83B0     		sub	sp, sp, #12
 2898              		.cfi_def_cfa_offset 24
 2899 0004 0400     		movs	r4, r0
2794:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 2900              		.loc 1 2794 3 is_stmt 1 view .LVU796
2795:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2901              		.loc 1 2795 3 view .LVU797
2795:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2902              		.loc 1 2795 17 is_stmt 0 view .LVU798
 2903 0006 0023     		movs	r3, #0
 2904 0008 0193     		str	r3, [sp, #4]
2801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 2905              		.loc 1 2801 3 is_stmt 1 view .LVU799
2801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 2906              		.loc 1 2801 28 is_stmt 0 view .LVU800
 2907 000a 0368     		ldr	r3, [r0]
 2908              	.LVL208:
 2909              	.LBB186:
 2910              	.LBI186:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2911              		.loc 2 4656 26 is_stmt 1 view .LVU801
 2912              	.LBB187:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2913              		.loc 2 4658 3 view .LVU802
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2914              		.loc 2 4658 12 is_stmt 0 view .LVU803
 2915 000c 9A68     		ldr	r2, [r3, #8]
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2916              		.loc 2 4658 68 view .LVU804
 2917 000e D207     		lsls	r2, r2, #31
 2918 0010 4DD4     		bmi	.L220
 2919              	.LVL209:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 200


4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2920              		.loc 2 4658 68 view .LVU805
 2921              	.LBE187:
 2922              	.LBE186:
2804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2923              		.loc 1 2804 5 is_stmt 1 view .LVU806
2804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2924              		.loc 1 2804 24 is_stmt 0 view .LVU807
 2925 0012 9968     		ldr	r1, [r3, #8]
2804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2926              		.loc 1 2804 29 view .LVU808
 2927 0014 274A     		ldr	r2, .L228
2804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 2928              		.loc 1 2804 8 view .LVU809
 2929 0016 1142     		tst	r1, r2
 2930 0018 17D1     		bne	.L224
2816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2931              		.loc 1 2816 5 is_stmt 1 view .LVU810
 2932              	.LVL210:
 2933              	.LBB188:
 2934              	.LBI188:
4617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2935              		.loc 2 4617 22 view .LVU811
 2936              	.LBB189:
4622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2937              		.loc 2 4622 3 view .LVU812
 2938 001a 9A68     		ldr	r2, [r3, #8]
 2939 001c 2649     		ldr	r1, .L228+4
 2940 001e 0A40     		ands	r2, r1
 2941 0020 0121     		movs	r1, #1
 2942 0022 0A43     		orrs	r2, r1
 2943 0024 9A60     		str	r2, [r3, #8]
 2944              	.LVL211:
4622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2945              		.loc 2 4622 3 is_stmt 0 view .LVU813
 2946              	.LBE189:
 2947              	.LBE188:
2818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         != 0UL)
 2948              		.loc 1 2818 5 is_stmt 1 view .LVU814
 2949              	.LBB190:
 2950              	.LBI190:
2167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 2951              		.loc 2 2167 26 view .LVU815
 2952              	.LBB191:
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2953              		.loc 2 2169 3 view .LVU816
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2954              		.loc 2 2169 21 is_stmt 0 view .LVU817
 2955 0026 254B     		ldr	r3, .L228+8
 2956 0028 1B68     		ldr	r3, [r3]
 2957              	.LVL212:
2169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 2958              		.loc 2 2169 21 view .LVU818
 2959              	.LBE191:
 2960              	.LBE190:
2818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         != 0UL)
 2961              		.loc 1 2818 8 discriminator 1 view .LVU819
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 201


 2962 002a 1B02     		lsls	r3, r3, #8
 2963 002c 17D5     		bpl	.L214
2826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 2964              		.loc 1 2826 7 is_stmt 1 view .LVU820
2827:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2965              		.loc 1 2827 46 is_stmt 0 view .LVU821
 2966 002e 244B     		ldr	r3, .L228+12
 2967 0030 1868     		ldr	r0, [r3]
 2968              	.LVL213:
2827:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2969              		.loc 1 2827 46 view .LVU822
 2970 0032 2449     		ldr	r1, .L228+16
 2971 0034 FFF7FEFF 		bl	__aeabi_uidiv
 2972              	.LVL214:
2827:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2973              		.loc 1 2827 26 view .LVU823
 2974 0038 0130     		adds	r0, r0, #1
2826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 2975              		.loc 1 2826 23 view .LVU824
 2976 003a 0190     		str	r0, [sp, #4]
2828:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2977              		.loc 1 2828 7 is_stmt 1 view .LVU825
 2978              	.L215:
2828:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 2979              		.loc 1 2828 30 view .LVU826
 2980 003c 019B     		ldr	r3, [sp, #4]
 2981 003e 002B     		cmp	r3, #0
 2982 0040 0DD0     		beq	.L214
2830:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 2983              		.loc 1 2830 9 view .LVU827
2830:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 2984              		.loc 1 2830 24 is_stmt 0 view .LVU828
 2985 0042 019B     		ldr	r3, [sp, #4]
 2986 0044 013B     		subs	r3, r3, #1
 2987 0046 0193     		str	r3, [sp, #4]
 2988 0048 F8E7     		b	.L215
 2989              	.LVL215:
 2990              	.L224:
2807:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2991              		.loc 1 2807 7 is_stmt 1 view .LVU829
 2992 004a 836D     		ldr	r3, [r0, #88]
 2993 004c 1022     		movs	r2, #16
 2994 004e 1343     		orrs	r3, r2
 2995 0050 8365     		str	r3, [r0, #88]
2810:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 2996              		.loc 1 2810 7 view .LVU830
 2997 0052 C36D     		ldr	r3, [r0, #92]
 2998 0054 0F3A     		subs	r2, r2, #15
 2999 0056 1343     		orrs	r3, r2
 3000 0058 C365     		str	r3, [r0, #92]
2812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3001              		.loc 1 2812 7 view .LVU831
2812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3002              		.loc 1 2812 14 is_stmt 0 view .LVU832
 3003 005a 0120     		movs	r0, #1
 3004              	.LVL216:
2812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 202


 3005              		.loc 1 2812 14 view .LVU833
 3006 005c 28E0     		b	.L212
 3007              	.L214:
2836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3008              		.loc 1 2836 5 is_stmt 1 view .LVU834
2836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3009              		.loc 1 2836 19 is_stmt 0 view .LVU835
 3010 005e 637E     		ldrb	r3, [r4, #25]
2836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3011              		.loc 1 2836 8 view .LVU836
 3012 0060 012B     		cmp	r3, #1
 3013 0062 01D1     		bne	.L225
2871:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 3014              		.loc 1 2871 10 view .LVU837
 3015 0064 0020     		movs	r0, #0
 3016 0066 23E0     		b	.L212
 3017              	.L225:
2839:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3018              		.loc 1 2839 7 is_stmt 1 view .LVU838
2839:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3019              		.loc 1 2839 19 is_stmt 0 view .LVU839
 3020 0068 FFF7FEFF 		bl	HAL_GetTick
 3021              	.LVL217:
 3022 006c 0500     		movs	r5, r0
 3023              	.LVL218:
2841:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3024              		.loc 1 2841 7 is_stmt 1 view .LVU840
2841:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3025              		.loc 1 2841 13 is_stmt 0 view .LVU841
 3026 006e 04E0     		b	.L217
 3027              	.LVL219:
 3028              	.L218:
2856:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 3029              		.loc 1 2856 9 is_stmt 1 view .LVU842
2856:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 3030              		.loc 1 2856 14 is_stmt 0 view .LVU843
 3031 0070 FFF7FEFF 		bl	HAL_GetTick
 3032              	.LVL220:
2856:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 3033              		.loc 1 2856 28 discriminator 1 view .LVU844
 3034 0074 401B     		subs	r0, r0, r5
2856:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 3035              		.loc 1 2856 12 discriminator 1 view .LVU845
 3036 0076 0228     		cmp	r0, #2
 3037 0078 0DD8     		bhi	.L226
 3038              	.L217:
2841:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3039              		.loc 1 2841 53 is_stmt 1 view .LVU846
2841:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3040              		.loc 1 2841 14 is_stmt 0 view .LVU847
 3041 007a 2368     		ldr	r3, [r4]
 3042 007c 1A68     		ldr	r2, [r3]
2841:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3043              		.loc 1 2841 53 view .LVU848
 3044 007e D207     		lsls	r2, r2, #31
 3045 0080 13D4     		bmi	.L227
2851:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 203


 3046              		.loc 1 2851 9 is_stmt 1 view .LVU849
 3047              	.LVL221:
 3048              	.LBB192:
 3049              	.LBI192:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3050              		.loc 2 4656 26 view .LVU850
 3051              	.LBB193:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3052              		.loc 2 4658 3 view .LVU851
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3053              		.loc 2 4658 12 is_stmt 0 view .LVU852
 3054 0082 9A68     		ldr	r2, [r3, #8]
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3055              		.loc 2 4658 68 view .LVU853
 3056 0084 D207     		lsls	r2, r2, #31
 3057 0086 F3D4     		bmi	.L218
 3058              	.LVL222:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3059              		.loc 2 4658 68 view .LVU854
 3060              	.LBE193:
 3061              	.LBE192:
2853:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 3062              		.loc 1 2853 11 is_stmt 1 view .LVU855
 3063              	.LBB194:
 3064              	.LBI194:
4617:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3065              		.loc 2 4617 22 view .LVU856
 3066              	.LBB195:
4622:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3067              		.loc 2 4622 3 view .LVU857
 3068 0088 9A68     		ldr	r2, [r3, #8]
 3069 008a 0B49     		ldr	r1, .L228+4
 3070 008c 0A40     		ands	r2, r1
 3071 008e 0121     		movs	r1, #1
 3072 0090 0A43     		orrs	r2, r1
 3073 0092 9A60     		str	r2, [r3, #8]
 3074              	.LVL223:
4625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 3075              		.loc 2 4625 1 is_stmt 0 view .LVU858
 3076 0094 ECE7     		b	.L218
 3077              	.L226:
4625:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 3078              		.loc 2 4625 1 view .LVU859
 3079              	.LBE195:
 3080              	.LBE194:
2859:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3081              		.loc 1 2859 11 is_stmt 1 view .LVU860
 3082 0096 A36D     		ldr	r3, [r4, #88]
 3083 0098 1022     		movs	r2, #16
 3084 009a 1343     		orrs	r3, r2
 3085 009c A365     		str	r3, [r4, #88]
2862:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3086              		.loc 1 2862 11 view .LVU861
 3087 009e E36D     		ldr	r3, [r4, #92]
 3088 00a0 0F3A     		subs	r2, r2, #15
 3089 00a2 1343     		orrs	r3, r2
 3090 00a4 E365     		str	r3, [r4, #92]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 204


2864:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 3091              		.loc 1 2864 11 view .LVU862
2864:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 3092              		.loc 1 2864 18 is_stmt 0 view .LVU863
 3093 00a6 0120     		movs	r0, #1
 3094 00a8 02E0     		b	.L212
 3095              	.L227:
2871:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 3096              		.loc 1 2871 10 view .LVU864
 3097 00aa 0020     		movs	r0, #0
 3098 00ac 00E0     		b	.L212
 3099              	.LVL224:
 3100              	.L220:
2871:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 3101              		.loc 1 2871 10 view .LVU865
 3102 00ae 0020     		movs	r0, #0
 3103              	.LVL225:
 3104              	.L212:
2872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3105              		.loc 1 2872 1 view .LVU866
 3106 00b0 03B0     		add	sp, sp, #12
 3107              		@ sp needed
 3108              	.LVL226:
2872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3109              		.loc 1 2872 1 view .LVU867
 3110 00b2 30BD     		pop	{r4, r5, pc}
 3111              	.L229:
 3112              		.align	2
 3113              	.L228:
 3114 00b4 17000080 		.word	-2147483625
 3115 00b8 E8FFFF7F 		.word	2147483624
 3116 00bc 08270140 		.word	1073817352
 3117 00c0 00000000 		.word	SystemCoreClock
 3118 00c4 400D0300 		.word	200000
 3119              		.cfi_endproc
 3120              	.LFE367:
 3122              		.section	.text.HAL_ADC_Start,"ax",%progbits
 3123              		.align	1
 3124              		.global	HAL_ADC_Start
 3125              		.syntax unified
 3126              		.code	16
 3127              		.thumb_func
 3129              	HAL_ADC_Start:
 3130              	.LVL227:
 3131              	.LFB346:
1159:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3132              		.loc 1 1159 1 is_stmt 1 view -0
 3133              		.cfi_startproc
 3134              		@ args = 0, pretend = 0, frame = 0
 3135              		@ frame_needed = 0, uses_anonymous_args = 0
1159:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3136              		.loc 1 1159 1 is_stmt 0 view .LVU869
 3137 0000 10B5     		push	{r4, lr}
 3138              		.cfi_def_cfa_offset 8
 3139              		.cfi_offset 4, -8
 3140              		.cfi_offset 14, -4
 3141 0002 0400     		movs	r4, r0
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 205


1160:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3142              		.loc 1 1160 3 is_stmt 1 view .LVU870
1163:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3143              		.loc 1 1163 3 view .LVU871
1166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3144              		.loc 1 1166 3 view .LVU872
1166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3145              		.loc 1 1166 42 is_stmt 0 view .LVU873
 3146 0004 0368     		ldr	r3, [r0]
 3147              	.LVL228:
 3148              	.LBB196:
 3149              	.LBI196:
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3150              		.loc 2 4783 26 is_stmt 1 view .LVU874
 3151              	.LBB197:
 3152              		.loc 2 4785 3 view .LVU875
 3153              		.loc 2 4785 12 is_stmt 0 view .LVU876
 3154 0006 9B68     		ldr	r3, [r3, #8]
 3155              	.LVL229:
 3156              		.loc 2 4785 74 view .LVU877
 3157 0008 5B07     		lsls	r3, r3, #29
 3158 000a 24D4     		bmi	.L233
 3159              	.LVL230:
 3160              		.loc 2 4785 74 view .LVU878
 3161              	.LBE197:
 3162              	.LBE196:
1169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3163              		.loc 1 1169 5 is_stmt 1 view .LVU879
1169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3164              		.loc 1 1169 5 view .LVU880
 3165 000c 5423     		movs	r3, #84
 3166 000e C35C     		ldrb	r3, [r0, r3]
 3167 0010 012B     		cmp	r3, #1
 3168 0012 22D0     		beq	.L234
1169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3169              		.loc 1 1169 5 discriminator 2 view .LVU881
 3170 0014 5423     		movs	r3, #84
 3171 0016 0122     		movs	r2, #1
 3172 0018 C254     		strb	r2, [r0, r3]
1169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3173              		.loc 1 1169 5 view .LVU882
1172:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3174              		.loc 1 1172 5 view .LVU883
1172:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3175              		.loc 1 1172 22 is_stmt 0 view .LVU884
 3176 001a FFF7FEFF 		bl	ADC_Enable
 3177              	.LVL231:
1175:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3178              		.loc 1 1175 5 is_stmt 1 view .LVU885
1175:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3179              		.loc 1 1175 8 is_stmt 0 view .LVU886
 3180 001e 0028     		cmp	r0, #0
 3181 0020 15D1     		bne	.L232
1180:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3182              		.loc 1 1180 7 is_stmt 1 view .LVU887
 3183 0022 A26D     		ldr	r2, [r4, #88]
 3184 0024 0E4B     		ldr	r3, .L235
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 206


 3185 0026 1A40     		ands	r2, r3
 3186 0028 8023     		movs	r3, #128
 3187 002a 5B00     		lsls	r3, r3, #1
 3188 002c 1343     		orrs	r3, r2
 3189 002e A365     		str	r3, [r4, #88]
1186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3190              		.loc 1 1186 7 view .LVU888
 3191 0030 0023     		movs	r3, #0
 3192 0032 E365     		str	r3, [r4, #92]
1190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3193              		.loc 1 1190 7 view .LVU889
 3194 0034 2268     		ldr	r2, [r4]
 3195 0036 1C21     		movs	r1, #28
 3196 0038 1160     		str	r1, [r2]
1195:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3197              		.loc 1 1195 7 view .LVU890
1195:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3198              		.loc 1 1195 7 view .LVU891
 3199 003a 5422     		movs	r2, #84
 3200 003c A354     		strb	r3, [r4, r2]
1195:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3201              		.loc 1 1195 7 view .LVU892
1202:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3202              		.loc 1 1202 7 view .LVU893
 3203 003e 2268     		ldr	r2, [r4]
 3204              	.LVL232:
 3205              	.LBB198:
 3206              	.LBI198:
4747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3207              		.loc 2 4747 22 view .LVU894
 3208              	.LBB199:
4752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3209              		.loc 2 4752 3 view .LVU895
 3210 0040 9368     		ldr	r3, [r2, #8]
 3211 0042 0849     		ldr	r1, .L235+4
 3212 0044 0B40     		ands	r3, r1
 3213 0046 0421     		movs	r1, #4
 3214 0048 0B43     		orrs	r3, r1
 3215 004a 9360     		str	r3, [r2, #8]
 3216              	.LVL233:
4755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 3217              		.loc 2 4755 1 is_stmt 0 view .LVU896
 3218 004c 04E0     		b	.L231
 3219              	.L232:
 3220              	.LBE199:
 3221              	.LBE198:
1207:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3222              		.loc 1 1207 7 is_stmt 1 view .LVU897
1207:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3223              		.loc 1 1207 7 view .LVU898
 3224 004e 5423     		movs	r3, #84
 3225 0050 0022     		movs	r2, #0
 3226 0052 E254     		strb	r2, [r4, r3]
 3227 0054 00E0     		b	.L231
 3228              	.LVL234:
 3229              	.L233:
1212:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 207


 3230              		.loc 1 1212 20 is_stmt 0 view .LVU899
 3231 0056 0220     		movs	r0, #2
 3232              	.LVL235:
 3233              	.L231:
1217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3234              		.loc 1 1217 1 view .LVU900
 3235              		@ sp needed
 3236              	.LVL236:
1217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3237              		.loc 1 1217 1 view .LVU901
 3238 0058 10BD     		pop	{r4, pc}
 3239              	.LVL237:
 3240              	.L234:
1169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3241              		.loc 1 1169 5 discriminator 1 view .LVU902
 3242 005a 0220     		movs	r0, #2
 3243              	.LVL238:
1169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3244              		.loc 1 1169 5 discriminator 1 view .LVU903
 3245 005c FCE7     		b	.L231
 3246              	.L236:
 3247 005e C046     		.align	2
 3248              	.L235:
 3249 0060 FEF0FFFF 		.word	-3842
 3250 0064 E8FFFF7F 		.word	2147483624
 3251              		.cfi_endproc
 3252              	.LFE346:
 3254              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 3255              		.align	1
 3256              		.global	HAL_ADC_Start_IT
 3257              		.syntax unified
 3258              		.code	16
 3259              		.thumb_func
 3261              	HAL_ADC_Start_IT:
 3262              	.LVL239:
 3263              	.LFB350:
1540:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3264              		.loc 1 1540 1 is_stmt 1 view -0
 3265              		.cfi_startproc
 3266              		@ args = 0, pretend = 0, frame = 0
 3267              		@ frame_needed = 0, uses_anonymous_args = 0
1540:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3268              		.loc 1 1540 1 is_stmt 0 view .LVU905
 3269 0000 10B5     		push	{r4, lr}
 3270              		.cfi_def_cfa_offset 8
 3271              		.cfi_offset 4, -8
 3272              		.cfi_offset 14, -4
 3273 0002 0400     		movs	r4, r0
1541:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3274              		.loc 1 1541 3 is_stmt 1 view .LVU906
1544:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3275              		.loc 1 1544 3 view .LVU907
1547:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3276              		.loc 1 1547 3 view .LVU908
1547:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3277              		.loc 1 1547 42 is_stmt 0 view .LVU909
 3278 0004 0368     		ldr	r3, [r0]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 208


 3279              	.LVL240:
 3280              	.LBB200:
 3281              	.LBI200:
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3282              		.loc 2 4783 26 is_stmt 1 view .LVU910
 3283              	.LBB201:
 3284              		.loc 2 4785 3 view .LVU911
 3285              		.loc 2 4785 12 is_stmt 0 view .LVU912
 3286 0006 9B68     		ldr	r3, [r3, #8]
 3287              	.LVL241:
 3288              		.loc 2 4785 74 view .LVU913
 3289 0008 5B07     		lsls	r3, r3, #29
 3290 000a 3ED4     		bmi	.L243
 3291              	.LVL242:
 3292              		.loc 2 4785 74 view .LVU914
 3293              	.LBE201:
 3294              	.LBE200:
1550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3295              		.loc 1 1550 5 is_stmt 1 view .LVU915
1550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3296              		.loc 1 1550 5 view .LVU916
 3297 000c 5423     		movs	r3, #84
 3298 000e C35C     		ldrb	r3, [r0, r3]
 3299 0010 012B     		cmp	r3, #1
 3300 0012 3CD0     		beq	.L244
1550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3301              		.loc 1 1550 5 discriminator 2 view .LVU917
 3302 0014 5423     		movs	r3, #84
 3303 0016 0122     		movs	r2, #1
 3304 0018 C254     		strb	r2, [r0, r3]
1550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3305              		.loc 1 1550 5 view .LVU918
1553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3306              		.loc 1 1553 5 view .LVU919
1553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3307              		.loc 1 1553 22 is_stmt 0 view .LVU920
 3308 001a FFF7FEFF 		bl	ADC_Enable
 3309              	.LVL243:
1556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3310              		.loc 1 1556 5 is_stmt 1 view .LVU921
1556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3311              		.loc 1 1556 8 is_stmt 0 view .LVU922
 3312 001e 0028     		cmp	r0, #0
 3313 0020 2FD1     		bne	.L239
1561:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3314              		.loc 1 1561 7 is_stmt 1 view .LVU923
 3315 0022 A26D     		ldr	r2, [r4, #88]
 3316 0024 1B4B     		ldr	r3, .L246
 3317 0026 1A40     		ands	r2, r3
 3318 0028 8023     		movs	r3, #128
 3319 002a 5B00     		lsls	r3, r3, #1
 3320 002c 1343     		orrs	r3, r2
 3321 002e A365     		str	r3, [r4, #88]
1568:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3322              		.loc 1 1568 7 view .LVU924
 3323 0030 0023     		movs	r3, #0
 3324 0032 E365     		str	r3, [r4, #92]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 209


1572:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3325              		.loc 1 1572 7 view .LVU925
 3326 0034 2268     		ldr	r2, [r4]
 3327 0036 1C21     		movs	r1, #28
 3328 0038 1160     		str	r1, [r2]
1577:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3329              		.loc 1 1577 7 view .LVU926
1577:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3330              		.loc 1 1577 7 view .LVU927
 3331 003a 5422     		movs	r2, #84
 3332 003c A354     		strb	r3, [r4, r2]
1577:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3333              		.loc 1 1577 7 view .LVU928
1580:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3334              		.loc 1 1580 7 view .LVU929
 3335 003e 2268     		ldr	r2, [r4]
 3336 0040 5368     		ldr	r3, [r2, #4]
 3337 0042 8B43     		bics	r3, r1
 3338 0044 5360     		str	r3, [r2, #4]
1583:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3339              		.loc 1 1583 7 view .LVU930
1583:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3340              		.loc 1 1583 25 is_stmt 0 view .LVU931
 3341 0046 6369     		ldr	r3, [r4, #20]
1583:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3342              		.loc 1 1583 7 view .LVU932
 3343 0048 082B     		cmp	r3, #8
 3344 004a 14D0     		beq	.L245
1590:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
 3345              		.loc 1 1590 11 is_stmt 1 view .LVU933
 3346 004c 2268     		ldr	r2, [r4]
 3347 004e 5368     		ldr	r3, [r2, #4]
 3348 0050 0421     		movs	r1, #4
 3349 0052 0B43     		orrs	r3, r1
 3350 0054 5360     		str	r3, [r2, #4]
1591:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 3351              		.loc 1 1591 11 view .LVU934
 3352              	.L241:
1598:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3353              		.loc 1 1598 7 view .LVU935
1598:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3354              		.loc 1 1598 21 is_stmt 0 view .LVU936
 3355 0056 236B     		ldr	r3, [r4, #48]
1598:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3356              		.loc 1 1598 10 view .LVU937
 3357 0058 002B     		cmp	r3, #0
 3358 005a 04D1     		bne	.L242
1600:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 3359              		.loc 1 1600 9 is_stmt 1 view .LVU938
 3360 005c 2268     		ldr	r2, [r4]
 3361 005e 5368     		ldr	r3, [r2, #4]
 3362 0060 1021     		movs	r1, #16
 3363 0062 0B43     		orrs	r3, r1
 3364 0064 5360     		str	r3, [r2, #4]
 3365              	.L242:
1608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3366              		.loc 1 1608 7 view .LVU939
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 210


 3367 0066 2268     		ldr	r2, [r4]
 3368              	.LVL244:
 3369              	.LBB202:
 3370              	.LBI202:
4747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3371              		.loc 2 4747 22 view .LVU940
 3372              	.LBB203:
4752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3373              		.loc 2 4752 3 view .LVU941
 3374 0068 9368     		ldr	r3, [r2, #8]
 3375 006a 0B49     		ldr	r1, .L246+4
 3376 006c 0B40     		ands	r3, r1
 3377 006e 0421     		movs	r1, #4
 3378 0070 0B43     		orrs	r3, r1
 3379 0072 9360     		str	r3, [r2, #8]
 3380              	.LVL245:
4755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 3381              		.loc 2 4755 1 is_stmt 0 view .LVU942
 3382 0074 0AE0     		b	.L238
 3383              	.L245:
4755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 3384              		.loc 2 4755 1 view .LVU943
 3385              	.LBE203:
 3386              	.LBE202:
1586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
 3387              		.loc 1 1586 11 is_stmt 1 view .LVU944
 3388 0076 2268     		ldr	r2, [r4]
 3389 0078 5368     		ldr	r3, [r2, #4]
 3390 007a 1439     		subs	r1, r1, #20
 3391 007c 0B43     		orrs	r3, r1
 3392 007e 5360     		str	r3, [r2, #4]
1587:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 3393              		.loc 1 1587 11 view .LVU945
 3394 0080 E9E7     		b	.L241
 3395              	.L239:
1613:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3396              		.loc 1 1613 7 view .LVU946
1613:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3397              		.loc 1 1613 7 view .LVU947
 3398 0082 5423     		movs	r3, #84
 3399 0084 0022     		movs	r2, #0
 3400 0086 E254     		strb	r2, [r4, r3]
 3401 0088 00E0     		b	.L238
 3402              	.LVL246:
 3403              	.L243:
1619:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 3404              		.loc 1 1619 20 is_stmt 0 view .LVU948
 3405 008a 0220     		movs	r0, #2
 3406              	.LVL247:
 3407              	.L238:
1624:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3408              		.loc 1 1624 1 view .LVU949
 3409              		@ sp needed
 3410              	.LVL248:
1624:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3411              		.loc 1 1624 1 view .LVU950
 3412 008c 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 211


 3413              	.LVL249:
 3414              	.L244:
1550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3415              		.loc 1 1550 5 discriminator 1 view .LVU951
 3416 008e 0220     		movs	r0, #2
 3417              	.LVL250:
1550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3418              		.loc 1 1550 5 discriminator 1 view .LVU952
 3419 0090 FCE7     		b	.L238
 3420              	.L247:
 3421 0092 C046     		.align	2
 3422              	.L246:
 3423 0094 FEF0FFFF 		.word	-3842
 3424 0098 E8FFFF7F 		.word	2147483624
 3425              		.cfi_endproc
 3426              	.LFE350:
 3428              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 3429              		.align	1
 3430              		.global	HAL_ADC_Start_DMA
 3431              		.syntax unified
 3432              		.code	16
 3433              		.thumb_func
 3435              	HAL_ADC_Start_DMA:
 3436              	.LVL251:
 3437              	.LFB352:
1684:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3438              		.loc 1 1684 1 is_stmt 1 view -0
 3439              		.cfi_startproc
 3440              		@ args = 0, pretend = 0, frame = 0
 3441              		@ frame_needed = 0, uses_anonymous_args = 0
1684:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3442              		.loc 1 1684 1 is_stmt 0 view .LVU954
 3443 0000 70B5     		push	{r4, r5, r6, lr}
 3444              		.cfi_def_cfa_offset 16
 3445              		.cfi_offset 4, -16
 3446              		.cfi_offset 5, -12
 3447              		.cfi_offset 6, -8
 3448              		.cfi_offset 14, -4
 3449 0002 0400     		movs	r4, r0
 3450 0004 0D00     		movs	r5, r1
 3451 0006 1600     		movs	r6, r2
1685:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3452              		.loc 1 1685 3 is_stmt 1 view .LVU955
1688:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3453              		.loc 1 1688 3 view .LVU956
1691:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3454              		.loc 1 1691 3 view .LVU957
1691:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3455              		.loc 1 1691 42 is_stmt 0 view .LVU958
 3456 0008 0268     		ldr	r2, [r0]
 3457              	.LVL252:
 3458              	.LBB204:
 3459              	.LBI204:
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3460              		.loc 2 4783 26 is_stmt 1 view .LVU959
 3461              	.LBB205:
 3462              		.loc 2 4785 3 view .LVU960
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 212


 3463              		.loc 2 4785 12 is_stmt 0 view .LVU961
 3464 000a 9368     		ldr	r3, [r2, #8]
 3465              		.loc 2 4785 74 view .LVU962
 3466 000c 5B07     		lsls	r3, r3, #29
 3467 000e 47D4     		bmi	.L252
 3468              	.LVL253:
 3469              		.loc 2 4785 74 view .LVU963
 3470              	.LBE205:
 3471              	.LBE204:
1694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3472              		.loc 1 1694 5 is_stmt 1 view .LVU964
1694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3473              		.loc 1 1694 5 view .LVU965
 3474 0010 5423     		movs	r3, #84
 3475 0012 C35C     		ldrb	r3, [r0, r3]
 3476 0014 012B     		cmp	r3, #1
 3477 0016 45D0     		beq	.L253
1694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3478              		.loc 1 1694 5 discriminator 2 view .LVU966
 3479 0018 0123     		movs	r3, #1
 3480 001a 5421     		movs	r1, #84
 3481              	.LVL254:
1694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3482              		.loc 1 1694 5 is_stmt 0 discriminator 2 view .LVU967
 3483 001c 4354     		strb	r3, [r0, r1]
1694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3484              		.loc 1 1694 5 is_stmt 1 view .LVU968
1699:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3485              		.loc 1 1699 5 view .LVU969
1699:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3486              		.loc 1 1699 24 is_stmt 0 view .LVU970
 3487 001e D168     		ldr	r1, [r2, #12]
1699:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3488              		.loc 1 1699 8 view .LVU971
 3489 0020 0B42     		tst	r3, r1
 3490 0022 0DD1     		bne	.L250
1701:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3491              		.loc 1 1701 7 is_stmt 1 view .LVU972
 3492              	.LVL255:
 3493              	.LBB206:
 3494              	.LBI206:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3495              		.loc 2 4656 26 view .LVU973
 3496              	.LBB207:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3497              		.loc 2 4658 3 view .LVU974
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3498              		.loc 2 4658 12 is_stmt 0 view .LVU975
 3499 0024 9368     		ldr	r3, [r2, #8]
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3500              		.loc 2 4658 68 view .LVU976
 3501 0026 DB07     		lsls	r3, r3, #31
 3502 0028 05D5     		bpl	.L251
 3503              	.LVL256:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3504              		.loc 2 4658 68 view .LVU977
 3505              	.LBE207:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 213


 3506              	.LBE206:
1704:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 3507              		.loc 1 1704 9 is_stmt 1 view .LVU978
 3508              	.LBB208:
 3509              	.LBI208:
4637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3510              		.loc 2 4637 22 view .LVU979
 3511              	.LBB209:
4642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3512              		.loc 2 4642 3 view .LVU980
 3513 002a 9368     		ldr	r3, [r2, #8]
 3514 002c 1E49     		ldr	r1, .L255
 3515 002e 0B40     		ands	r3, r1
 3516 0030 0221     		movs	r1, #2
 3517 0032 0B43     		orrs	r3, r1
 3518 0034 9360     		str	r3, [r2, #8]
 3519              	.LVL257:
 3520              	.L251:
4642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3521              		.loc 2 4642 3 is_stmt 0 view .LVU981
 3522              	.LBE209:
 3523              	.LBE208:
1708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3524              		.loc 1 1708 7 is_stmt 1 view .LVU982
1708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3525              		.loc 1 1708 11 is_stmt 0 view .LVU983
 3526 0036 2268     		ldr	r2, [r4]
1708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3527              		.loc 1 1708 21 view .LVU984
 3528 0038 D368     		ldr	r3, [r2, #12]
1708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3529              		.loc 1 1708 29 view .LVU985
 3530 003a 0121     		movs	r1, #1
 3531 003c 0B43     		orrs	r3, r1
 3532 003e D360     		str	r3, [r2, #12]
 3533              	.L250:
1712:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3534              		.loc 1 1712 5 is_stmt 1 view .LVU986
1712:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3535              		.loc 1 1712 22 is_stmt 0 view .LVU987
 3536 0040 2000     		movs	r0, r4
 3537              	.LVL258:
1712:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3538              		.loc 1 1712 22 view .LVU988
 3539 0042 FFF7FEFF 		bl	ADC_Enable
 3540              	.LVL259:
1715:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3541              		.loc 1 1715 5 is_stmt 1 view .LVU989
1715:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3542              		.loc 1 1715 8 is_stmt 0 view .LVU990
 3543 0046 0028     		cmp	r0, #0
 3544 0048 2BD1     		bne	.L249
1720:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3545              		.loc 1 1720 7 is_stmt 1 view .LVU991
 3546 004a A26D     		ldr	r2, [r4, #88]
 3547 004c 174B     		ldr	r3, .L255+4
 3548 004e 1A40     		ands	r2, r3
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 214


 3549 0050 8023     		movs	r3, #128
 3550 0052 5B00     		lsls	r3, r3, #1
 3551 0054 1343     		orrs	r3, r2
 3552 0056 A365     		str	r3, [r4, #88]
1726:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3553              		.loc 1 1726 7 view .LVU992
 3554 0058 0023     		movs	r3, #0
 3555 005a E365     		str	r3, [r4, #92]
1729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3556              		.loc 1 1729 7 view .LVU993
1729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3557              		.loc 1 1729 11 is_stmt 0 view .LVU994
 3558 005c 226D     		ldr	r2, [r4, #80]
1729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3559              		.loc 1 1729 42 view .LVU995
 3560 005e 1449     		ldr	r1, .L255+8
 3561 0060 D162     		str	r1, [r2, #44]
1732:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3562              		.loc 1 1732 7 is_stmt 1 view .LVU996
1732:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3563              		.loc 1 1732 11 is_stmt 0 view .LVU997
 3564 0062 226D     		ldr	r2, [r4, #80]
1732:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3565              		.loc 1 1732 46 view .LVU998
 3566 0064 1349     		ldr	r1, .L255+12
 3567 0066 1163     		str	r1, [r2, #48]
1735:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3568              		.loc 1 1735 7 is_stmt 1 view .LVU999
1735:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3569              		.loc 1 1735 11 is_stmt 0 view .LVU1000
 3570 0068 226D     		ldr	r2, [r4, #80]
1735:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3571              		.loc 1 1735 43 view .LVU1001
 3572 006a 1349     		ldr	r1, .L255+16
 3573 006c 5163     		str	r1, [r2, #52]
1744:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3574              		.loc 1 1744 7 is_stmt 1 view .LVU1002
 3575 006e 2268     		ldr	r2, [r4]
 3576 0070 1C21     		movs	r1, #28
 3577 0072 1160     		str	r1, [r2]
1749:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3578              		.loc 1 1749 7 view .LVU1003
1749:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3579              		.loc 1 1749 7 view .LVU1004
 3580 0074 5422     		movs	r2, #84
 3581 0076 A354     		strb	r3, [r4, r2]
1749:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3582              		.loc 1 1749 7 view .LVU1005
1752:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3583              		.loc 1 1752 7 view .LVU1006
 3584 0078 2268     		ldr	r2, [r4]
 3585 007a 5368     		ldr	r3, [r2, #4]
 3586 007c 0C39     		subs	r1, r1, #12
 3587 007e 0B43     		orrs	r3, r1
 3588 0080 5360     		str	r3, [r2, #4]
1755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3589              		.loc 1 1755 7 view .LVU1007
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 215


1755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3590              		.loc 1 1755 74 is_stmt 0 view .LVU1008
 3591 0082 2168     		ldr	r1, [r4]
1755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3592              		.loc 1 1755 69 view .LVU1009
 3593 0084 4031     		adds	r1, r1, #64
1755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3594              		.loc 1 1755 24 view .LVU1010
 3595 0086 206D     		ldr	r0, [r4, #80]
 3596              	.LVL260:
1755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3597              		.loc 1 1755 24 view .LVU1011
 3598 0088 3300     		movs	r3, r6
 3599 008a 2A00     		movs	r2, r5
 3600 008c FFF7FEFF 		bl	HAL_DMA_Start_IT
 3601              	.LVL261:
1762:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3602              		.loc 1 1762 7 is_stmt 1 view .LVU1012
 3603 0090 2268     		ldr	r2, [r4]
 3604              	.LVL262:
 3605              	.LBB210:
 3606              	.LBI210:
4747:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3607              		.loc 2 4747 22 view .LVU1013
 3608              	.LBB211:
4752:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3609              		.loc 2 4752 3 view .LVU1014
 3610 0092 9368     		ldr	r3, [r2, #8]
 3611 0094 0449     		ldr	r1, .L255
 3612 0096 0B40     		ands	r3, r1
 3613 0098 0421     		movs	r1, #4
 3614 009a 0B43     		orrs	r3, r1
 3615 009c 9360     		str	r3, [r2, #8]
 3616              	.LVL263:
4755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 3617              		.loc 2 4755 1 is_stmt 0 view .LVU1015
 3618 009e 00E0     		b	.L249
 3619              	.LVL264:
 3620              	.L252:
4755:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 3621              		.loc 2 4755 1 view .LVU1016
 3622              	.LBE211:
 3623              	.LBE210:
1767:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 3624              		.loc 1 1767 20 view .LVU1017
 3625 00a0 0220     		movs	r0, #2
 3626              	.LVL265:
 3627              	.L249:
1772:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3628              		.loc 1 1772 1 view .LVU1018
 3629              		@ sp needed
 3630              	.LVL266:
 3631              	.LVL267:
 3632              	.LVL268:
1772:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3633              		.loc 1 1772 1 view .LVU1019
 3634 00a2 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 216


 3635              	.LVL269:
 3636              	.L253:
1694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3637              		.loc 1 1694 5 discriminator 1 view .LVU1020
 3638 00a4 0220     		movs	r0, #2
 3639              	.LVL270:
1694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3640              		.loc 1 1694 5 discriminator 1 view .LVU1021
 3641 00a6 FCE7     		b	.L249
 3642              	.L256:
 3643              		.align	2
 3644              	.L255:
 3645 00a8 E8FFFF7F 		.word	2147483624
 3646 00ac FEF0FFFF 		.word	-3842
 3647 00b0 00000000 		.word	ADC_DMAConvCplt
 3648 00b4 00000000 		.word	ADC_DMAHalfConvCplt
 3649 00b8 00000000 		.word	ADC_DMAError
 3650              		.cfi_endproc
 3651              	.LFE352:
 3653              		.section	.text.ADC_Disable,"ax",%progbits
 3654              		.align	1
 3655              		.global	ADC_Disable
 3656              		.syntax unified
 3657              		.code	16
 3658              		.thumb_func
 3660              	ADC_Disable:
 3661              	.LVL271:
 3662              	.LFB368:
2882:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
 3663              		.loc 1 2882 1 is_stmt 1 view -0
 3664              		.cfi_startproc
 3665              		@ args = 0, pretend = 0, frame = 0
 3666              		@ frame_needed = 0, uses_anonymous_args = 0
2882:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tickstart;
 3667              		.loc 1 2882 1 is_stmt 0 view .LVU1023
 3668 0000 70B5     		push	{r4, r5, r6, lr}
 3669              		.cfi_def_cfa_offset 16
 3670              		.cfi_offset 4, -16
 3671              		.cfi_offset 5, -12
 3672              		.cfi_offset 6, -8
 3673              		.cfi_offset 14, -4
 3674 0002 0400     		movs	r4, r0
2883:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 3675              		.loc 1 2883 3 is_stmt 1 view .LVU1024
2884:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3676              		.loc 1 2884 3 view .LVU1025
2884:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3677              		.loc 1 2884 76 is_stmt 0 view .LVU1026
 3678 0004 0368     		ldr	r3, [r0]
 3679              	.LVL272:
 3680              	.LBB212:
 3681              	.LBI212:
4667:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3682              		.loc 2 4667 26 is_stmt 1 view .LVU1027
 3683              	.LBB213:
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3684              		.loc 2 4669 3 view .LVU1028
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 217


4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3685              		.loc 2 4669 12 is_stmt 0 view .LVU1029
 3686 0006 9A68     		ldr	r2, [r3, #8]
 3687 0008 0221     		movs	r1, #2
 3688 000a 0800     		movs	r0, r1
 3689              	.LVL273:
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3690              		.loc 2 4669 12 view .LVU1030
 3691 000c 1040     		ands	r0, r2
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3692              		.loc 2 4669 70 view .LVU1031
 3693 000e 1142     		tst	r1, r2
 3694 0010 00D0     		beq	.L258
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3695              		.loc 2 4669 70 discriminator 1 view .LVU1032
 3696 0012 0120     		movs	r0, #1
 3697              	.L258:
 3698              	.LVL274:
4669:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3699              		.loc 2 4669 70 discriminator 1 view .LVU1033
 3700              	.LBE213:
 3701              	.LBE212:
2889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 3702              		.loc 1 2889 3 is_stmt 1 view .LVU1034
 3703              	.LBB214:
 3704              	.LBI214:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3705              		.loc 2 4656 26 view .LVU1035
 3706              	.LBB215:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3707              		.loc 2 4658 3 view .LVU1036
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3708              		.loc 2 4658 12 is_stmt 0 view .LVU1037
 3709 0014 9A68     		ldr	r2, [r3, #8]
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3710              		.loc 2 4658 68 view .LVU1038
 3711 0016 D207     		lsls	r2, r2, #31
 3712 0018 31D5     		bpl	.L263
 3713              	.LVL275:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 3714              		.loc 2 4658 68 view .LVU1039
 3715              	.LBE215:
 3716              	.LBE214:
2890:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****      )
 3717              		.loc 1 2890 7 view .LVU1040
 3718 001a 0028     		cmp	r0, #0
 3719 001c 31D1     		bne	.L264
2894:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3720              		.loc 1 2894 5 is_stmt 1 view .LVU1041
2894:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3721              		.loc 1 2894 24 is_stmt 0 view .LVU1042
 3722 001e 9968     		ldr	r1, [r3, #8]
2894:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3723              		.loc 1 2894 29 view .LVU1043
 3724 0020 0522     		movs	r2, #5
 3725 0022 0A40     		ands	r2, r1
2894:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 218


 3726              		.loc 1 2894 8 view .LVU1044
 3727 0024 012A     		cmp	r2, #1
 3728 0026 09D0     		beq	.L265
2903:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3729              		.loc 1 2903 7 is_stmt 1 view .LVU1045
 3730 0028 A36D     		ldr	r3, [r4, #88]
 3731 002a 1022     		movs	r2, #16
 3732 002c 1343     		orrs	r3, r2
 3733 002e A365     		str	r3, [r4, #88]
2906:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3734              		.loc 1 2906 7 view .LVU1046
 3735 0030 E36D     		ldr	r3, [r4, #92]
 3736 0032 0F3A     		subs	r2, r2, #15
 3737 0034 1343     		orrs	r3, r2
 3738 0036 E365     		str	r3, [r4, #92]
2908:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3739              		.loc 1 2908 7 view .LVU1047
2908:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3740              		.loc 1 2908 14 is_stmt 0 view .LVU1048
 3741 0038 0120     		movs	r0, #1
 3742              	.LVL276:
2908:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3743              		.loc 1 2908 14 view .LVU1049
 3744 003a 21E0     		b	.L259
 3745              	.LVL277:
 3746              	.L265:
2897:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 3747              		.loc 1 2897 7 is_stmt 1 view .LVU1050
 3748              	.LBB216:
 3749              	.LBI216:
4637:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 3750              		.loc 2 4637 22 view .LVU1051
 3751              	.LBB217:
4642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3752              		.loc 2 4642 3 view .LVU1052
 3753 003c 9A68     		ldr	r2, [r3, #8]
 3754 003e 1249     		ldr	r1, .L267
 3755 0040 0A40     		ands	r2, r1
 3756 0042 0221     		movs	r1, #2
 3757 0044 0A43     		orrs	r2, r1
 3758 0046 9A60     		str	r2, [r3, #8]
 3759              	.LVL278:
4642:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3760              		.loc 2 4642 3 is_stmt 0 view .LVU1053
 3761              	.LBE217:
 3762              	.LBE216:
2898:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3763              		.loc 1 2898 7 is_stmt 1 view .LVU1054
 3764 0048 2368     		ldr	r3, [r4]
 3765 004a 0322     		movs	r2, #3
 3766 004c 1A60     		str	r2, [r3]
2913:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3767              		.loc 1 2913 5 view .LVU1055
2913:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3768              		.loc 1 2913 17 is_stmt 0 view .LVU1056
 3769 004e FFF7FEFF 		bl	HAL_GetTick
 3770              	.LVL279:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 219


2913:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3771              		.loc 1 2913 17 view .LVU1057
 3772 0052 0500     		movs	r5, r0
 3773              	.LVL280:
2915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3774              		.loc 1 2915 5 is_stmt 1 view .LVU1058
 3775              	.L261:
2915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3776              		.loc 1 2915 47 view .LVU1059
2915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3777              		.loc 1 2915 17 is_stmt 0 view .LVU1060
 3778 0054 2368     		ldr	r3, [r4]
2915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3779              		.loc 1 2915 27 view .LVU1061
 3780 0056 9B68     		ldr	r3, [r3, #8]
2915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3781              		.loc 1 2915 47 view .LVU1062
 3782 0058 DB07     		lsls	r3, r3, #31
 3783 005a 0ED5     		bpl	.L266
2917:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3784              		.loc 1 2917 7 is_stmt 1 view .LVU1063
2917:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3785              		.loc 1 2917 12 is_stmt 0 view .LVU1064
 3786 005c FFF7FEFF 		bl	HAL_GetTick
 3787              	.LVL281:
2917:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3788              		.loc 1 2917 26 discriminator 1 view .LVU1065
 3789 0060 401B     		subs	r0, r0, r5
2917:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 3790              		.loc 1 2917 10 discriminator 1 view .LVU1066
 3791 0062 0228     		cmp	r0, #2
 3792 0064 F6D9     		bls	.L261
2920:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3793              		.loc 1 2920 9 is_stmt 1 view .LVU1067
 3794 0066 A36D     		ldr	r3, [r4, #88]
 3795 0068 1022     		movs	r2, #16
 3796 006a 1343     		orrs	r3, r2
 3797 006c A365     		str	r3, [r4, #88]
2923:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3798              		.loc 1 2923 9 view .LVU1068
 3799 006e E36D     		ldr	r3, [r4, #92]
 3800 0070 0F3A     		subs	r2, r2, #15
 3801 0072 1343     		orrs	r3, r2
 3802 0074 E365     		str	r3, [r4, #92]
2925:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 3803              		.loc 1 2925 9 view .LVU1069
2925:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 3804              		.loc 1 2925 16 is_stmt 0 view .LVU1070
 3805 0076 0120     		movs	r0, #1
 3806 0078 02E0     		b	.L259
 3807              	.L266:
2931:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 3808              		.loc 1 2931 10 view .LVU1071
 3809 007a 0020     		movs	r0, #0
 3810 007c 00E0     		b	.L259
 3811              	.LVL282:
 3812              	.L263:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 220


2931:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 3813              		.loc 1 2931 10 view .LVU1072
 3814 007e 0020     		movs	r0, #0
 3815              	.LVL283:
 3816              	.L259:
2932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3817              		.loc 1 2932 1 view .LVU1073
 3818              		@ sp needed
 3819              	.LVL284:
2932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3820              		.loc 1 2932 1 view .LVU1074
 3821 0080 70BD     		pop	{r4, r5, r6, pc}
 3822              	.LVL285:
 3823              	.L264:
2931:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 3824              		.loc 1 2931 10 view .LVU1075
 3825 0082 0020     		movs	r0, #0
 3826              	.LVL286:
2931:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 3827              		.loc 1 2931 10 view .LVU1076
 3828 0084 FCE7     		b	.L259
 3829              	.L268:
 3830 0086 C046     		.align	2
 3831              	.L267:
 3832 0088 E8FFFF7F 		.word	2147483624
 3833              		.cfi_endproc
 3834              	.LFE368:
 3836              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 3837              		.align	1
 3838              		.global	HAL_ADC_DeInit
 3839              		.syntax unified
 3840              		.code	16
 3841              		.thumb_func
 3843              	HAL_ADC_DeInit:
 3844              	.LVL287:
 3845              	.LFB343:
 743:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3846              		.loc 1 743 1 is_stmt 1 view -0
 3847              		.cfi_startproc
 3848              		@ args = 0, pretend = 0, frame = 0
 3849              		@ frame_needed = 0, uses_anonymous_args = 0
 743:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3850              		.loc 1 743 1 is_stmt 0 view .LVU1078
 3851 0000 70B5     		push	{r4, r5, r6, lr}
 3852              		.cfi_def_cfa_offset 16
 3853              		.cfi_offset 4, -16
 3854              		.cfi_offset 5, -12
 3855              		.cfi_offset 6, -8
 3856              		.cfi_offset 14, -4
 3857 0002 041E     		subs	r4, r0, #0
 744:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3858              		.loc 1 744 3 is_stmt 1 view .LVU1079
 747:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3859              		.loc 1 747 3 view .LVU1080
 747:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3860              		.loc 1 747 6 is_stmt 0 view .LVU1081
 3861 0004 4BD0     		beq	.L273
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 221


 753:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3862              		.loc 1 753 3 is_stmt 1 view .LVU1082
 756:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3863              		.loc 1 756 3 view .LVU1083
 3864 0006 836D     		ldr	r3, [r0, #88]
 3865 0008 0222     		movs	r2, #2
 3866 000a 1343     		orrs	r3, r2
 3867 000c 8365     		str	r3, [r0, #88]
 759:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3868              		.loc 1 759 3 view .LVU1084
 759:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3869              		.loc 1 759 20 is_stmt 0 view .LVU1085
 3870 000e FFF7FEFF 		bl	ADC_ConversionStop
 3871              	.LVL288:
 759:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3872              		.loc 1 759 20 view .LVU1086
 3873 0012 051E     		subs	r5, r0, #0
 3874              	.LVL289:
 762:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3875              		.loc 1 762 3 is_stmt 1 view .LVU1087
 762:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 3876              		.loc 1 762 6 is_stmt 0 view .LVU1088
 3877 0014 36D0     		beq	.L274
 3878              	.LVL290:
 3879              	.L271:
 787:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 3880              		.loc 1 787 3 is_stmt 1 view .LVU1089
 3881 0016 2268     		ldr	r2, [r4]
 3882 0018 5368     		ldr	r3, [r2, #4]
 3883 001a 2249     		ldr	r1, .L275
 3884 001c 0B40     		ands	r3, r1
 3885 001e 5360     		str	r3, [r2, #4]
 793:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 3886              		.loc 1 793 3 view .LVU1090
 3887 0020 2368     		ldr	r3, [r4]
 3888 0022 214A     		ldr	r2, .L275+4
 3889 0024 1A60     		str	r2, [r3]
 803:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD | ADC_CFGR1_AUTOFF |
 3890              		.loc 1 803 3 view .LVU1091
 803:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD | ADC_CFGR1_AUTOFF |
 3891              		.loc 1 803 7 is_stmt 0 view .LVU1092
 3892 0026 2268     		ldr	r2, [r4]
 803:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD | ADC_CFGR1_AUTOFF |
 3893              		.loc 1 803 17 view .LVU1093
 3894 0028 D368     		ldr	r3, [r2, #12]
 803:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD | ADC_CFGR1_AUTOFF |
 3895              		.loc 1 803 25 view .LVU1094
 3896 002a 2049     		ldr	r1, .L275+8
 3897 002c 0B40     		ands	r3, r1
 3898 002e D360     		str	r3, [r2, #12]
 812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3899              		.loc 1 812 3 is_stmt 1 view .LVU1095
 812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3900              		.loc 1 812 7 is_stmt 0 view .LVU1096
 3901 0030 2268     		ldr	r2, [r4]
 812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3902              		.loc 1 812 17 view .LVU1097
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 222


 3903 0032 1369     		ldr	r3, [r2, #16]
 812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3904              		.loc 1 812 25 view .LVU1098
 3905 0034 9B00     		lsls	r3, r3, #2
 3906 0036 9B08     		lsrs	r3, r3, #2
 3907 0038 1361     		str	r3, [r2, #16]
 815:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3908              		.loc 1 815 3 is_stmt 1 view .LVU1099
 815:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3909              		.loc 1 815 7 is_stmt 0 view .LVU1100
 3910 003a 2268     		ldr	r2, [r4]
 815:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3911              		.loc 1 815 17 view .LVU1101
 3912 003c 5369     		ldr	r3, [r2, #20]
 815:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3913              		.loc 1 815 24 view .LVU1102
 3914 003e 0721     		movs	r1, #7
 3915 0040 8B43     		bics	r3, r1
 3916 0042 5361     		str	r3, [r2, #20]
 818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3917              		.loc 1 818 3 is_stmt 1 view .LVU1103
 818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3918              		.loc 1 818 7 is_stmt 0 view .LVU1104
 3919 0044 2168     		ldr	r1, [r4]
 818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3920              		.loc 1 818 17 view .LVU1105
 3921 0046 0B6A     		ldr	r3, [r1, #32]
 818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3922              		.loc 1 818 26 view .LVU1106
 3923 0048 194A     		ldr	r2, .L275+12
 3924 004a 1340     		ands	r3, r2
 3925 004c 0B62     		str	r3, [r1, #32]
 819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3926              		.loc 1 819 3 is_stmt 1 view .LVU1107
 819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3927              		.loc 1 819 7 is_stmt 0 view .LVU1108
 3928 004e 2168     		ldr	r1, [r4]
 819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3929              		.loc 1 819 17 view .LVU1109
 3930 0050 4B6A     		ldr	r3, [r1, #36]
 819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3931              		.loc 1 819 26 view .LVU1110
 3932 0052 1340     		ands	r3, r2
 3933 0054 4B62     		str	r3, [r1, #36]
 820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3934              		.loc 1 820 3 is_stmt 1 view .LVU1111
 820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3935              		.loc 1 820 7 is_stmt 0 view .LVU1112
 3936 0056 2168     		ldr	r1, [r4]
 820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3937              		.loc 1 820 17 view .LVU1113
 3938 0058 CB6A     		ldr	r3, [r1, #44]
 820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3939              		.loc 1 820 26 view .LVU1114
 3940 005a 1340     		ands	r3, r2
 3941 005c CB62     		str	r3, [r1, #44]
 823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 223


 3942              		.loc 1 823 3 is_stmt 1 view .LVU1115
 823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3943              		.loc 1 823 7 is_stmt 0 view .LVU1116
 3944 005e 2368     		ldr	r3, [r4]
 823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3945              		.loc 1 823 17 view .LVU1117
 3946 0060 9A6A     		ldr	r2, [r3, #40]
 823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3947              		.loc 1 823 26 view .LVU1118
 3948 0062 0026     		movs	r6, #0
 3949 0064 9E62     		str	r6, [r3, #40]
 829:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3950              		.loc 1 829 3 is_stmt 1 view .LVU1119
 829:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3951              		.loc 1 829 14 is_stmt 0 view .LVU1120
 3952 0066 134A     		ldr	r2, .L275+16
 3953 0068 1368     		ldr	r3, [r2]
 829:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3954              		.loc 1 829 20 view .LVU1121
 3955 006a 1349     		ldr	r1, .L275+20
 3956 006c 0B40     		ands	r3, r1
 3957 006e 1360     		str	r3, [r2]
 850:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 3958              		.loc 1 850 3 is_stmt 1 view .LVU1122
 3959 0070 2000     		movs	r0, r4
 3960 0072 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 3961              	.LVL291:
 854:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3962              		.loc 1 854 3 view .LVU1123
 854:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3963              		.loc 1 854 39 is_stmt 0 view .LVU1124
 3964 0076 2666     		str	r6, [r4, #96]
 857:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3965              		.loc 1 857 3 is_stmt 1 view .LVU1125
 3966 0078 E665     		str	r6, [r4, #92]
 860:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3967              		.loc 1 860 3 view .LVU1126
 860:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3968              		.loc 1 860 15 is_stmt 0 view .LVU1127
 3969 007a A665     		str	r6, [r4, #88]
 863:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3970              		.loc 1 863 3 is_stmt 1 view .LVU1128
 863:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3971              		.loc 1 863 3 view .LVU1129
 3972 007c 5423     		movs	r3, #84
 3973 007e E654     		strb	r6, [r4, r3]
 863:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3974              		.loc 1 863 3 view .LVU1130
 866:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 3975              		.loc 1 866 3 view .LVU1131
 3976              	.LVL292:
 3977              	.L270:
 867:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3978              		.loc 1 867 1 is_stmt 0 view .LVU1132
 3979 0080 2800     		movs	r0, r5
 3980              		@ sp needed
 3981              	.LVL293:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 224


 867:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3982              		.loc 1 867 1 view .LVU1133
 3983 0082 70BD     		pop	{r4, r5, r6, pc}
 3984              	.LVL294:
 3985              	.L274:
 765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3986              		.loc 1 765 5 is_stmt 1 view .LVU1134
 765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3987              		.loc 1 765 22 is_stmt 0 view .LVU1135
 3988 0084 2000     		movs	r0, r4
 3989              	.LVL295:
 765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 3990              		.loc 1 765 22 view .LVU1136
 3991 0086 FFF7FEFF 		bl	ADC_Disable
 3992              	.LVL296:
 3993 008a 051E     		subs	r5, r0, #0
 3994              	.LVL297:
 768:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3995              		.loc 1 768 5 is_stmt 1 view .LVU1137
 768:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 3996              		.loc 1 768 8 is_stmt 0 view .LVU1138
 3997 008c 01D1     		bne	.L272
 771:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3998              		.loc 1 771 7 is_stmt 1 view .LVU1139
 771:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 3999              		.loc 1 771 19 is_stmt 0 view .LVU1140
 4000 008e 0123     		movs	r3, #1
 4001 0090 A365     		str	r3, [r4, #88]
 4002              	.L272:
 775:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 4003              		.loc 1 775 5 is_stmt 1 view .LVU1141
 4004 0092 2268     		ldr	r2, [r4]
 4005              	.LVL298:
 4006              	.LBB218:
 4007              	.LBI218:
4585:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 4008              		.loc 2 4585 22 view .LVU1142
 4009              	.LBB219:
4587:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 4010              		.loc 2 4587 3 view .LVU1143
 4011 0094 9368     		ldr	r3, [r2, #8]
 4012 0096 0949     		ldr	r1, .L275+24
 4013 0098 0B40     		ands	r3, r1
 4014 009a 9360     		str	r3, [r2, #8]
 4015              	.LVL299:
4588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4016              		.loc 2 4588 1 is_stmt 0 view .LVU1144
 4017 009c BBE7     		b	.L271
 4018              	.LVL300:
 4019              	.L273:
4588:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4020              		.loc 2 4588 1 view .LVU1145
 4021              	.LBE219:
 4022              	.LBE218:
 749:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 4023              		.loc 1 749 12 view .LVU1146
 4024 009e 0125     		movs	r5, #1
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 225


 4025 00a0 EEE7     		b	.L270
 4026              	.L276:
 4027 00a2 C046     		.align	2
 4028              	.L275:
 4029 00a4 60F4FFFF 		.word	-2976
 4030 00a8 9F0B0000 		.word	2975
 4031 00ac 00021E83 		.word	-2095185408
 4032 00b0 00F000F0 		.word	-268374016
 4033 00b4 08270140 		.word	1073817352
 4034 00b8 FFFF03FF 		.word	-16515073
 4035 00bc E8FFFF6F 		.word	1879048168
 4036              		.cfi_endproc
 4037              	.LFE343:
 4039              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 4040              		.align	1
 4041              		.global	HAL_ADC_Stop
 4042              		.syntax unified
 4043              		.code	16
 4044              		.thumb_func
 4046              	HAL_ADC_Stop:
 4047              	.LVL301:
 4048              	.LFB347:
1229:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4049              		.loc 1 1229 1 is_stmt 1 view -0
 4050              		.cfi_startproc
 4051              		@ args = 0, pretend = 0, frame = 0
 4052              		@ frame_needed = 0, uses_anonymous_args = 0
1229:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4053              		.loc 1 1229 1 is_stmt 0 view .LVU1148
 4054 0000 10B5     		push	{r4, lr}
 4055              		.cfi_def_cfa_offset 8
 4056              		.cfi_offset 4, -8
 4057              		.cfi_offset 14, -4
 4058 0002 0400     		movs	r4, r0
1230:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4059              		.loc 1 1230 3 is_stmt 1 view .LVU1149
1233:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4060              		.loc 1 1233 3 view .LVU1150
1236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4061              		.loc 1 1236 3 view .LVU1151
1236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4062              		.loc 1 1236 3 view .LVU1152
 4063 0004 5423     		movs	r3, #84
 4064 0006 C35C     		ldrb	r3, [r0, r3]
 4065 0008 012B     		cmp	r3, #1
 4066 000a 17D0     		beq	.L280
1236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4067              		.loc 1 1236 3 discriminator 2 view .LVU1153
 4068 000c 5423     		movs	r3, #84
 4069 000e 0122     		movs	r2, #1
 4070 0010 C254     		strb	r2, [r0, r3]
1236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4071              		.loc 1 1236 3 view .LVU1154
1239:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4072              		.loc 1 1239 3 view .LVU1155
1239:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4073              		.loc 1 1239 20 is_stmt 0 view .LVU1156
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 226


 4074 0012 FFF7FEFF 		bl	ADC_ConversionStop
 4075              	.LVL302:
1242:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4076              		.loc 1 1242 3 is_stmt 1 view .LVU1157
1242:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4077              		.loc 1 1242 6 is_stmt 0 view .LVU1158
 4078 0016 0028     		cmp	r0, #0
 4079 0018 03D0     		beq	.L281
 4080              	.LVL303:
 4081              	.L279:
1258:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4082              		.loc 1 1258 3 is_stmt 1 view .LVU1159
1258:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4083              		.loc 1 1258 3 view .LVU1160
 4084 001a 5423     		movs	r3, #84
 4085 001c 0022     		movs	r2, #0
 4086 001e E254     		strb	r2, [r4, r3]
1258:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4087              		.loc 1 1258 3 view .LVU1161
1261:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 4088              		.loc 1 1261 3 view .LVU1162
 4089              	.LVL304:
 4090              	.L278:
1262:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4091              		.loc 1 1262 1 is_stmt 0 view .LVU1163
 4092              		@ sp needed
 4093              	.LVL305:
1262:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4094              		.loc 1 1262 1 view .LVU1164
 4095 0020 10BD     		pop	{r4, pc}
 4096              	.LVL306:
 4097              	.L281:
1245:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4098              		.loc 1 1245 5 is_stmt 1 view .LVU1165
1245:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4099              		.loc 1 1245 22 is_stmt 0 view .LVU1166
 4100 0022 2000     		movs	r0, r4
 4101              	.LVL307:
1245:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4102              		.loc 1 1245 22 view .LVU1167
 4103 0024 FFF7FEFF 		bl	ADC_Disable
 4104              	.LVL308:
1248:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4105              		.loc 1 1248 5 is_stmt 1 view .LVU1168
1248:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4106              		.loc 1 1248 8 is_stmt 0 view .LVU1169
 4107 0028 0028     		cmp	r0, #0
 4108 002a F6D1     		bne	.L279
1251:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4109              		.loc 1 1251 7 is_stmt 1 view .LVU1170
 4110 002c A36D     		ldr	r3, [r4, #88]
 4111 002e 044A     		ldr	r2, .L282
 4112 0030 1340     		ands	r3, r2
 4113 0032 0432     		adds	r2, r2, #4
 4114 0034 FF32     		adds	r2, r2, #255
 4115 0036 1343     		orrs	r3, r2
 4116 0038 A365     		str	r3, [r4, #88]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 227


 4117 003a EEE7     		b	.L279
 4118              	.LVL309:
 4119              	.L280:
1236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4120              		.loc 1 1236 3 is_stmt 0 discriminator 1 view .LVU1171
 4121 003c 0220     		movs	r0, #2
 4122              	.LVL310:
1236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4123              		.loc 1 1236 3 discriminator 1 view .LVU1172
 4124 003e EFE7     		b	.L278
 4125              	.L283:
 4126              		.align	2
 4127              	.L282:
 4128 0040 FEFEFFFF 		.word	-258
 4129              		.cfi_endproc
 4130              	.LFE347:
 4132              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 4133              		.align	1
 4134              		.global	HAL_ADC_Stop_IT
 4135              		.syntax unified
 4136              		.code	16
 4137              		.thumb_func
 4139              	HAL_ADC_Stop_IT:
 4140              	.LVL311:
 4141              	.LFB351:
1634:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4142              		.loc 1 1634 1 is_stmt 1 view -0
 4143              		.cfi_startproc
 4144              		@ args = 0, pretend = 0, frame = 0
 4145              		@ frame_needed = 0, uses_anonymous_args = 0
1634:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4146              		.loc 1 1634 1 is_stmt 0 view .LVU1174
 4147 0000 10B5     		push	{r4, lr}
 4148              		.cfi_def_cfa_offset 8
 4149              		.cfi_offset 4, -8
 4150              		.cfi_offset 14, -4
 4151 0002 0400     		movs	r4, r0
1635:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4152              		.loc 1 1635 3 is_stmt 1 view .LVU1175
1638:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4153              		.loc 1 1638 3 view .LVU1176
1641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4154              		.loc 1 1641 3 view .LVU1177
1641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4155              		.loc 1 1641 3 view .LVU1178
 4156 0004 5423     		movs	r3, #84
 4157 0006 C35C     		ldrb	r3, [r0, r3]
 4158 0008 012B     		cmp	r3, #1
 4159 000a 1CD0     		beq	.L287
1641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4160              		.loc 1 1641 3 discriminator 2 view .LVU1179
 4161 000c 5423     		movs	r3, #84
 4162 000e 0122     		movs	r2, #1
 4163 0010 C254     		strb	r2, [r0, r3]
1641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4164              		.loc 1 1641 3 view .LVU1180
1644:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 228


 4165              		.loc 1 1644 3 view .LVU1181
1644:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4166              		.loc 1 1644 20 is_stmt 0 view .LVU1182
 4167 0012 FFF7FEFF 		bl	ADC_ConversionStop
 4168              	.LVL312:
1647:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4169              		.loc 1 1647 3 is_stmt 1 view .LVU1183
1647:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4170              		.loc 1 1647 6 is_stmt 0 view .LVU1184
 4171 0016 0028     		cmp	r0, #0
 4172 0018 03D0     		beq	.L288
 4173              	.LVL313:
 4174              	.L286:
1667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4175              		.loc 1 1667 3 is_stmt 1 view .LVU1185
1667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4176              		.loc 1 1667 3 view .LVU1186
 4177 001a 5423     		movs	r3, #84
 4178 001c 0022     		movs	r2, #0
 4179 001e E254     		strb	r2, [r4, r3]
1667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4180              		.loc 1 1667 3 view .LVU1187
1670:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 4181              		.loc 1 1670 3 view .LVU1188
 4182              	.LVL314:
 4183              	.L285:
1671:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4184              		.loc 1 1671 1 is_stmt 0 view .LVU1189
 4185              		@ sp needed
 4186              	.LVL315:
1671:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4187              		.loc 1 1671 1 view .LVU1190
 4188 0020 10BD     		pop	{r4, pc}
 4189              	.LVL316:
 4190              	.L288:
1651:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4191              		.loc 1 1651 5 is_stmt 1 view .LVU1191
 4192 0022 2268     		ldr	r2, [r4]
 4193 0024 5368     		ldr	r3, [r2, #4]
 4194 0026 1C21     		movs	r1, #28
 4195 0028 8B43     		bics	r3, r1
 4196 002a 5360     		str	r3, [r2, #4]
1654:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4197              		.loc 1 1654 5 view .LVU1192
1654:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4198              		.loc 1 1654 22 is_stmt 0 view .LVU1193
 4199 002c 2000     		movs	r0, r4
 4200              	.LVL317:
1654:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4201              		.loc 1 1654 22 view .LVU1194
 4202 002e FFF7FEFF 		bl	ADC_Disable
 4203              	.LVL318:
1657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4204              		.loc 1 1657 5 is_stmt 1 view .LVU1195
1657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4205              		.loc 1 1657 8 is_stmt 0 view .LVU1196
 4206 0032 0028     		cmp	r0, #0
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 229


 4207 0034 F1D1     		bne	.L286
1660:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4208              		.loc 1 1660 7 is_stmt 1 view .LVU1197
 4209 0036 A36D     		ldr	r3, [r4, #88]
 4210 0038 044A     		ldr	r2, .L289
 4211 003a 1340     		ands	r3, r2
 4212 003c 0432     		adds	r2, r2, #4
 4213 003e FF32     		adds	r2, r2, #255
 4214 0040 1343     		orrs	r3, r2
 4215 0042 A365     		str	r3, [r4, #88]
 4216 0044 E9E7     		b	.L286
 4217              	.LVL319:
 4218              	.L287:
1641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4219              		.loc 1 1641 3 is_stmt 0 discriminator 1 view .LVU1198
 4220 0046 0220     		movs	r0, #2
 4221              	.LVL320:
1641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4222              		.loc 1 1641 3 discriminator 1 view .LVU1199
 4223 0048 EAE7     		b	.L285
 4224              	.L290:
 4225 004a C046     		.align	2
 4226              	.L289:
 4227 004c FEFEFFFF 		.word	-258
 4228              		.cfi_endproc
 4229              	.LFE351:
 4231              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 4232              		.align	1
 4233              		.global	HAL_ADC_Stop_DMA
 4234              		.syntax unified
 4235              		.code	16
 4236              		.thumb_func
 4238              	HAL_ADC_Stop_DMA:
 4239              	.LVL321:
 4240              	.LFB353:
1782:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4241              		.loc 1 1782 1 is_stmt 1 view -0
 4242              		.cfi_startproc
 4243              		@ args = 0, pretend = 0, frame = 0
 4244              		@ frame_needed = 0, uses_anonymous_args = 0
1782:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4245              		.loc 1 1782 1 is_stmt 0 view .LVU1201
 4246 0000 70B5     		push	{r4, r5, r6, lr}
 4247              		.cfi_def_cfa_offset 16
 4248              		.cfi_offset 4, -16
 4249              		.cfi_offset 5, -12
 4250              		.cfi_offset 6, -8
 4251              		.cfi_offset 14, -4
 4252 0002 0400     		movs	r4, r0
1783:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4253              		.loc 1 1783 3 is_stmt 1 view .LVU1202
1786:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4254              		.loc 1 1786 3 view .LVU1203
1789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4255              		.loc 1 1789 3 view .LVU1204
1789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4256              		.loc 1 1789 3 view .LVU1205
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 230


 4257 0004 5423     		movs	r3, #84
 4258 0006 C35C     		ldrb	r3, [r0, r3]
 4259 0008 012B     		cmp	r3, #1
 4260 000a 36D0     		beq	.L298
1789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4261              		.loc 1 1789 3 discriminator 2 view .LVU1206
 4262 000c 5423     		movs	r3, #84
 4263 000e 0122     		movs	r2, #1
 4264 0010 C254     		strb	r2, [r0, r3]
1789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4265              		.loc 1 1789 3 view .LVU1207
1792:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4266              		.loc 1 1792 3 view .LVU1208
1792:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4267              		.loc 1 1792 20 is_stmt 0 view .LVU1209
 4268 0012 FFF7FEFF 		bl	ADC_ConversionStop
 4269              	.LVL322:
1792:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4270              		.loc 1 1792 20 view .LVU1210
 4271 0016 051E     		subs	r5, r0, #0
 4272              	.LVL323:
1795:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4273              		.loc 1 1795 3 is_stmt 1 view .LVU1211
1795:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4274              		.loc 1 1795 6 is_stmt 0 view .LVU1212
 4275 0018 1DD1     		bne	.L293
1799:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4276              		.loc 1 1799 5 is_stmt 1 view .LVU1213
1799:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4277              		.loc 1 1799 13 is_stmt 0 view .LVU1214
 4278 001a 206D     		ldr	r0, [r4, #80]
 4279              	.LVL324:
1799:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4280              		.loc 1 1799 25 view .LVU1215
 4281 001c 2523     		movs	r3, #37
 4282 001e C35C     		ldrb	r3, [r0, r3]
1799:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4283              		.loc 1 1799 8 view .LVU1216
 4284 0020 022B     		cmp	r3, #2
 4285 0022 1DD0     		beq	.L299
 4286              	.LVL325:
 4287              	.L294:
1812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4288              		.loc 1 1812 5 is_stmt 1 view .LVU1217
 4289 0024 2268     		ldr	r2, [r4]
 4290 0026 5368     		ldr	r3, [r2, #4]
 4291 0028 1021     		movs	r1, #16
 4292 002a 8B43     		bics	r3, r1
 4293 002c 5360     		str	r3, [r2, #4]
1817:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4294              		.loc 1 1817 5 view .LVU1218
1817:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4295              		.loc 1 1817 8 is_stmt 0 view .LVU1219
 4296 002e 002D     		cmp	r5, #0
 4297 0030 1FD1     		bne	.L295
1819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 4298              		.loc 1 1819 7 is_stmt 1 view .LVU1220
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 231


1819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 4299              		.loc 1 1819 24 is_stmt 0 view .LVU1221
 4300 0032 2000     		movs	r0, r4
 4301 0034 FFF7FEFF 		bl	ADC_Disable
 4302              	.LVL326:
 4303 0038 0500     		movs	r5, r0
 4304              	.LVL327:
 4305              	.L296:
1827:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4306              		.loc 1 1827 5 is_stmt 1 view .LVU1222
1827:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4307              		.loc 1 1827 8 is_stmt 0 view .LVU1223
 4308 003a 002D     		cmp	r5, #0
 4309 003c 06D1     		bne	.L297
1830:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4310              		.loc 1 1830 7 is_stmt 1 view .LVU1224
 4311 003e A36D     		ldr	r3, [r4, #88]
 4312 0040 0F4A     		ldr	r2, .L300
 4313 0042 1340     		ands	r3, r2
 4314 0044 0432     		adds	r2, r2, #4
 4315 0046 FF32     		adds	r2, r2, #255
 4316 0048 1343     		orrs	r3, r2
 4317 004a A365     		str	r3, [r4, #88]
 4318              	.L297:
1836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 4319              		.loc 1 1836 5 view .LVU1225
 4320 004c 2268     		ldr	r2, [r4]
 4321 004e D368     		ldr	r3, [r2, #12]
 4322 0050 0121     		movs	r1, #1
 4323 0052 8B43     		bics	r3, r1
 4324 0054 D360     		str	r3, [r2, #12]
 4325              	.LVL328:
 4326              	.L293:
1840:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4327              		.loc 1 1840 3 view .LVU1226
1840:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4328              		.loc 1 1840 3 view .LVU1227
 4329 0056 5423     		movs	r3, #84
 4330 0058 0022     		movs	r2, #0
 4331 005a E254     		strb	r2, [r4, r3]
1840:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4332              		.loc 1 1840 3 view .LVU1228
1843:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 4333              		.loc 1 1843 3 view .LVU1229
 4334              	.LVL329:
 4335              	.L292:
1844:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4336              		.loc 1 1844 1 is_stmt 0 view .LVU1230
 4337 005c 2800     		movs	r0, r5
 4338              		@ sp needed
 4339              	.LVL330:
1844:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4340              		.loc 1 1844 1 view .LVU1231
 4341 005e 70BD     		pop	{r4, r5, r6, pc}
 4342              	.LVL331:
 4343              	.L299:
1801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 232


 4344              		.loc 1 1801 7 is_stmt 1 view .LVU1232
1801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4345              		.loc 1 1801 24 is_stmt 0 view .LVU1233
 4346 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 4347              	.LVL332:
 4348 0064 051E     		subs	r5, r0, #0
 4349              	.LVL333:
1804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4350              		.loc 1 1804 7 is_stmt 1 view .LVU1234
1804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4351              		.loc 1 1804 10 is_stmt 0 view .LVU1235
 4352 0066 DDD0     		beq	.L294
1807:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 4353              		.loc 1 1807 9 is_stmt 1 view .LVU1236
 4354 0068 A36D     		ldr	r3, [r4, #88]
 4355 006a 4022     		movs	r2, #64
 4356 006c 1343     		orrs	r3, r2
 4357 006e A365     		str	r3, [r4, #88]
 4358 0070 D8E7     		b	.L294
 4359              	.LVL334:
 4360              	.L295:
1823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 4361              		.loc 1 1823 7 view .LVU1237
1823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     }
 4362              		.loc 1 1823 13 is_stmt 0 view .LVU1238
 4363 0072 2000     		movs	r0, r4
 4364 0074 FFF7FEFF 		bl	ADC_Disable
 4365              	.LVL335:
 4366 0078 DFE7     		b	.L296
 4367              	.LVL336:
 4368              	.L298:
1789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4369              		.loc 1 1789 3 discriminator 1 view .LVU1239
 4370 007a 0225     		movs	r5, #2
 4371 007c EEE7     		b	.L292
 4372              	.L301:
 4373 007e C046     		.align	2
 4374              	.L300:
 4375 0080 FEFEFFFF 		.word	-258
 4376              		.cfi_endproc
 4377              	.LFE353:
 4379              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 4380              		.align	1
 4381              		.global	HAL_ADC_AnalogWDGConfig
 4382              		.syntax unified
 4383              		.code	16
 4384              		.thumb_func
 4386              	HAL_ADC_AnalogWDGConfig:
 4387              	.LVL337:
 4388              	.LFB363:
2459:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4389              		.loc 1 2459 1 is_stmt 1 view -0
 4390              		.cfi_startproc
 4391              		@ args = 0, pretend = 0, frame = 0
 4392              		@ frame_needed = 0, uses_anonymous_args = 0
2459:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4393              		.loc 1 2459 1 is_stmt 0 view .LVU1241
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 233


 4394 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4395              		.cfi_def_cfa_offset 24
 4396              		.cfi_offset 3, -24
 4397              		.cfi_offset 4, -20
 4398              		.cfi_offset 5, -16
 4399              		.cfi_offset 6, -12
 4400              		.cfi_offset 7, -8
 4401              		.cfi_offset 14, -4
 4402 0002 0400     		movs	r4, r0
 4403 0004 0D00     		movs	r5, r1
2460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4404              		.loc 1 2460 3 is_stmt 1 view .LVU1242
 4405              	.LVL338:
2461:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 4406              		.loc 1 2461 3 view .LVU1243
2462:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t backup_setting_adc_enable_state = 0UL;
 4407              		.loc 1 2462 3 view .LVU1244
2463:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4408              		.loc 1 2463 3 view .LVU1245
2466:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 4409              		.loc 1 2466 3 view .LVU1246
2467:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 4410              		.loc 1 2467 3 view .LVU1247
2468:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 4411              		.loc 1 2468 3 view .LVU1248
2469:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4412              		.loc 1 2469 3 view .LVU1249
2471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4413              		.loc 1 2471 3 view .LVU1250
2473:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 4414              		.loc 1 2473 5 view .LVU1251
2477:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4415              		.loc 1 2477 3 view .LVU1252
2482:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
 4416              		.loc 1 2482 5 view .LVU1253
2483:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 4417              		.loc 1 2483 5 view .LVU1254
2488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 4418              		.loc 1 2488 5 view .LVU1255
2489:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 4419              		.loc 1 2489 5 view .LVU1256
2493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4420              		.loc 1 2493 3 view .LVU1257
2493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4421              		.loc 1 2493 3 view .LVU1258
 4422 0006 5423     		movs	r3, #84
 4423 0008 C35C     		ldrb	r3, [r0, r3]
 4424 000a 012B     		cmp	r3, #1
 4425 000c 00D1     		bne	.LCB4193
 4426 000e CFE1     		b	.L325	@long jump
 4427              	.LCB4193:
2493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4428              		.loc 1 2493 3 discriminator 2 view .LVU1259
 4429 0010 5423     		movs	r3, #84
 4430 0012 0122     		movs	r2, #1
 4431 0014 C254     		strb	r2, [r0, r3]
2493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 234


 4432              		.loc 1 2493 3 view .LVU1260
2499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4433              		.loc 1 2499 3 view .LVU1261
2499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 4434              		.loc 1 2499 42 is_stmt 0 view .LVU1262
 4435 0016 0068     		ldr	r0, [r0]
 4436              	.LVL339:
 4437              	.LBB220:
 4438              	.LBI220:
4783:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 4439              		.loc 2 4783 26 is_stmt 1 view .LVU1263
 4440              	.LBB221:
 4441              		.loc 2 4785 3 view .LVU1264
 4442              		.loc 2 4785 12 is_stmt 0 view .LVU1265
 4443 0018 8368     		ldr	r3, [r0, #8]
 4444              		.loc 2 4785 74 view .LVU1266
 4445 001a 5B07     		lsls	r3, r3, #29
 4446 001c 00D5     		bpl	.LCB4211
 4447 001e A9E1     		b	.L326	@long jump
 4448              	.LCB4211:
 4449              	.LVL340:
 4450              		.loc 2 4785 74 view .LVU1267
 4451              	.LBE221:
 4452              	.LBE220:
2502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4453              		.loc 1 2502 5 is_stmt 1 view .LVU1268
2502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4454              		.loc 1 2502 24 is_stmt 0 view .LVU1269
 4455 0020 0968     		ldr	r1, [r1]
 4456              	.LVL341:
2502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     {
 4457              		.loc 1 2502 8 view .LVU1270
 4458 0022 A94B     		ldr	r3, .L383
 4459 0024 9942     		cmp	r1, r3
 4460 0026 1CD0     		beq	.L375
2568:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4461              		.loc 1 2568 7 is_stmt 1 view .LVU1271
2568:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4462              		.loc 1 2568 30 is_stmt 0 view .LVU1272
 4463 0028 6B68     		ldr	r3, [r5, #4]
2568:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4464              		.loc 1 2568 7 view .LVU1273
 4465 002a 8022     		movs	r2, #128
 4466 002c 1204     		lsls	r2, r2, #16
 4467 002e 9342     		cmp	r3, r2
 4468 0030 00D1     		bne	.LCB4226
 4469 0032 61E1     		b	.L312	@long jump
 4470              	.LCB4226:
 4471 0034 C022     		movs	r2, #192
 4472 0036 1204     		lsls	r2, r2, #16
 4473 0038 9342     		cmp	r3, r2
 4474 003a 00D0     		beq	.LCB4230
 4475 003c 75E1     		b	.L313	@long jump
 4476              	.LCB4230:
2573:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           {
 4477              		.loc 1 2573 11 is_stmt 1 view .LVU1274
2573:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 235


 4478              		.loc 1 2573 14 is_stmt 0 view .LVU1275
 4479 003e A34B     		ldr	r3, .L383+4
 4480 0040 9942     		cmp	r1, r3
 4481 0042 66D0     		beq	.L376
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4482              		.loc 1 2579 13 is_stmt 1 view .LVU1276
 4483 0044 A423     		movs	r3, #164
 4484 0046 C658     		ldr	r6, [r0, r3]
 4485 0048 AB68     		ldr	r3, [r5, #8]
 4486 004a 5A02     		lsls	r2, r3, #9
 4487 004c 00D0     		beq	.LCB4242
 4488 004e DBE0     		b	.L318	@long jump
 4489              	.LCB4242:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4490              		.loc 1 2579 13 is_stmt 0 discriminator 1 view .LVU1277
 4491 0050 9B0E     		lsrs	r3, r3, #26
 4492 0052 1F21     		movs	r1, #31
 4493 0054 1940     		ands	r1, r3
 4494 0056 0132     		adds	r2, r2, #1
 4495 0058 8A40     		lsls	r2, r2, r1
 4496              	.L319:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4497              		.loc 1 2579 13 discriminator 96 view .LVU1278
 4498 005a 1643     		orrs	r6, r2
 4499 005c A422     		movs	r2, #164
 4500 005e 8650     		str	r6, [r0, r2]
 4501 0060 4DE1     		b	.L317
 4502              	.L375:
2506:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4503              		.loc 1 2506 7 is_stmt 1 view .LVU1279
 4504              	.LVL342:
 4505              	.LBB222:
 4506              	.LBI222:
4656:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 4507              		.loc 2 4656 26 view .LVU1280
 4508              	.LBB223:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 4509              		.loc 2 4658 3 view .LVU1281
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 4510              		.loc 2 4658 12 is_stmt 0 view .LVU1282
 4511 0062 8368     		ldr	r3, [r0, #8]
 4512 0064 1100     		movs	r1, r2
 4513 0066 1940     		ands	r1, r3
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 4514              		.loc 2 4658 68 view .LVU1283
 4515 0068 1A42     		tst	r2, r3
 4516 006a 0DD0     		beq	.L327
 4517              	.LVL343:
4658:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 4518              		.loc 2 4658 68 view .LVU1284
 4519              	.LBE223:
 4520              	.LBE222:
2508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
 4521              		.loc 1 2508 9 is_stmt 1 view .LVU1285
2509:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4522              		.loc 1 2509 9 view .LVU1286
2509:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 236


 4523              		.loc 1 2509 26 is_stmt 0 view .LVU1287
 4524 006c 2000     		movs	r0, r4
 4525 006e FFF7FEFF 		bl	ADC_Disable
 4526              	.LVL344:
 4527 0072 061E     		subs	r6, r0, #0
 4528              	.LVL345:
2512:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 4529              		.loc 1 2512 9 is_stmt 1 view .LVU1288
2512:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 4530              		.loc 1 2512 12 is_stmt 0 view .LVU1289
 4531 0074 31D1     		bne	.L328
2515:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 4532              		.loc 1 2515 11 is_stmt 1 view .LVU1290
 4533 0076 A36D     		ldr	r3, [r4, #88]
 4534 0078 954A     		ldr	r2, .L383+8
 4535 007a 1340     		ands	r3, r2
 4536 007c 0432     		adds	r2, r2, #4
 4537 007e FF32     		adds	r2, r2, #255
 4538 0080 1343     		orrs	r3, r2
 4539 0082 A365     		str	r3, [r4, #88]
2508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
 4540              		.loc 1 2508 41 is_stmt 0 view .LVU1291
 4541 0084 0121     		movs	r1, #1
 4542 0086 00E0     		b	.L306
 4543              	.LVL346:
 4544              	.L327:
2460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4545              		.loc 1 2460 21 view .LVU1292
 4546 0088 0026     		movs	r6, #0
 4547              	.LVL347:
 4548              	.L306:
2524:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4549              		.loc 1 2524 7 is_stmt 1 view .LVU1293
2524:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4550              		.loc 1 2524 30 is_stmt 0 view .LVU1294
 4551 008a 6B68     		ldr	r3, [r5, #4]
2524:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4552              		.loc 1 2524 7 view .LVU1295
 4553 008c 8022     		movs	r2, #128
 4554 008e 1204     		lsls	r2, r2, #16
 4555 0090 9342     		cmp	r3, r2
 4556 0092 24D0     		beq	.L307
 4557 0094 C022     		movs	r2, #192
 4558 0096 1204     		lsls	r2, r2, #16
 4559 0098 9342     		cmp	r3, r2
 4560 009a 29D1     		bne	.L308
2527:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(AnalogWDGConfig->Channel,
 4561              		.loc 1 2527 11 is_stmt 1 view .LVU1296
 4562 009c 2768     		ldr	r7, [r4]
2528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
 4563              		.loc 1 2528 43 is_stmt 0 view .LVU1297
 4564 009e A868     		ldr	r0, [r5, #8]
 4565              	.LVL348:
 4566              	.LBB224:
 4567              	.LBI224:
4004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 4568              		.loc 2 4004 22 is_stmt 1 view .LVU1298
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 237


 4569              	.LBB225:
4010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4570              		.loc 2 4010 3 view .LVU1299
4012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
 4571              		.loc 2 4012 3 view .LVU1300
4014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
 4572              		.loc 2 4014 5 view .LVU1301
4022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4573              		.loc 2 4022 3 view .LVU1302
 4574 00a0 FB68     		ldr	r3, [r7, #12]
 4575 00a2 8C4A     		ldr	r2, .L383+12
 4576 00a4 1340     		ands	r3, r2
 4577 00a6 F822     		movs	r2, #248
 4578 00a8 D205     		lsls	r2, r2, #23
 4579 00aa 1040     		ands	r0, r2
 4580              	.LVL349:
4022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4581              		.loc 2 4022 3 is_stmt 0 view .LVU1303
 4582 00ac C022     		movs	r2, #192
 4583 00ae 1204     		lsls	r2, r2, #16
 4584 00b0 0243     		orrs	r2, r0
 4585 00b2 1343     		orrs	r3, r2
 4586 00b4 FB60     		str	r3, [r7, #12]
 4587              	.LVL350:
4022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4588              		.loc 2 4022 3 view .LVU1304
 4589              	.LBE225:
 4590              	.LBE224:
2530:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4591              		.loc 1 2530 11 is_stmt 1 view .LVU1305
 4592              	.L309:
2541:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4593              		.loc 1 2541 7 view .LVU1306
2541:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4594              		.loc 1 2541 10 is_stmt 0 view .LVU1307
 4595 00b6 0129     		cmp	r1, #1
 4596 00b8 20D0     		beq	.L377
 4597              	.LVL351:
 4598              	.L310:
2547:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4599              		.loc 1 2547 7 is_stmt 1 view .LVU1308
 4600 00ba A36D     		ldr	r3, [r4, #88]
 4601 00bc 864A     		ldr	r2, .L383+16
 4602 00be 1340     		ands	r3, r2
 4603 00c0 A365     		str	r3, [r4, #88]
2553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4604              		.loc 1 2553 7 view .LVU1309
 4605 00c2 2368     		ldr	r3, [r4]
 4606              	.LVL352:
 4607              	.LBB226:
 4608              	.LBI226:
4786:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4787:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4788:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4789:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
4790:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
4791:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 238


4792:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
4793:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4794:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
4795:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4796:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
4797:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4798:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4799:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4800:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4801:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
4802:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         all oversampling increased data width (for devices
4803:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         with feature oversampling).
4804:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
4805:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4806:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
4807:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4808:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(const ADC_TypeDef *ADCx)
4809:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4810:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4811:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4812:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4813:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4814:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4815:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC resolution 12 bits.
4816:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4817:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         can increase data width, function for extended range
4818:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4819:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
4820:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4821:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4822:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4823:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(const ADC_TypeDef *ADCx)
4824:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4825:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4826:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4827:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4828:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4829:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4830:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC resolution 10 bits.
4831:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4832:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         can increase data width, function for extended range
4833:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4834:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
4835:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4836:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
4837:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4838:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(const ADC_TypeDef *ADCx)
4839:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4840:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4841:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4842:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4843:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4844:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4845:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC resolution 8 bits.
4846:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4847:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         can increase data width, function for extended range
4848:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 239


4849:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
4850:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4851:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
4852:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4853:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(const ADC_TypeDef *ADCx)
4854:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4855:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4856:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4857:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4858:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4859:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4860:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC resolution 6 bits.
4861:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4862:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         can increase data width, function for extended range
4863:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4864:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
4865:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4866:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
4867:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4868:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(const ADC_TypeDef *ADCx)
4869:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4870:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4871:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4872:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4873:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4874:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
4875:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4876:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4877:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
4878:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
4879:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4880:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4881:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4882:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC ready.
4883:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4884:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4885:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4886:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
4887:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4888:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4889:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4890:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(const ADC_TypeDef *ADCx)
4891:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4892:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
4893:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4894:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4895:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4896:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC channel configuration ready.
4897:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer
4898:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
4899:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
4900:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
4901:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
4902:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         Functions requiring wait for CCRDY flag are:
4903:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
4904:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks()
4905:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChannels()
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 240


4906:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChAdd()
4907:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChRem()
4908:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerScanDirection()
4909:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerConfigurable()
4910:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   Duration of ADC channel configuration ready: CCRDY handshake
4911:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         requires 1APB + 2 ADC + 3 APB cycles after the channel configuration
4912:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         has been changed.
4913:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_IsActiveFlag_CCRDY
4914:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4915:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4916:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4917:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_CCRDY(const ADC_TypeDef *ADCx)
4918:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4919:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_CCRDY) == (LL_ADC_FLAG_CCRDY)) ? 1UL : 0UL);
4920:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4921:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4922:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4923:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
4924:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
4925:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4926:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4927:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4928:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(const ADC_TypeDef *ADCx)
4929:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4930:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
4931:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4932:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4933:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4934:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
4935:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
4936:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4937:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4938:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4939:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(const ADC_TypeDef *ADCx)
4940:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4941:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
4942:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4943:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4944:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4945:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
4946:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
4947:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4948:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4949:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4950:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(const ADC_TypeDef *ADCx)
4951:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4952:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
4953:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4954:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4955:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4956:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
4957:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
4958:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4959:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4960:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4961:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(const ADC_TypeDef *ADCx)
4962:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 241


4963:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
4964:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4965:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4966:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4967:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
4968:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
4969:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4970:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4971:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4972:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(const ADC_TypeDef *ADCx)
4973:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4974:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
4975:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4976:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4977:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4978:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
4979:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
4980:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4981:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4982:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4983:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(const ADC_TypeDef *ADCx)
4984:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4985:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
4986:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4987:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4988:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
4989:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
4990:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
4991:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
4992:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4993:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
4994:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(const ADC_TypeDef *ADCx)
4995:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
4996:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
4997:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
4998:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
4999:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5000:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
5001:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
5002:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5003:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
5004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5005:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(const ADC_TypeDef *ADCx)
5006:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5007:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL)) ? 1UL : 0UL);
5008:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5009:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5011:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
5012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
5013:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
5014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
5015:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
5016:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5017:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5018:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5019:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 242


5020:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5021:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
5022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5023:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5024:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC channel configuration ready.
5026:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_ClearFlag_CCRDY
5027:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5028:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
5029:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5030:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_CCRDY(ADC_TypeDef *ADCx)
5031:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5032:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_CCRDY);
5033:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5034:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5035:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5036:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
5037:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
5038:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5039:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5040:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5041:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
5042:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5043:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
5044:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5045:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5046:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5047:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
5048:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
5049:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5050:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5051:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5052:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
5053:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5054:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
5055:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5056:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5057:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5058:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
5059:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
5060:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5061:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5062:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5063:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
5064:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5065:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
5066:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5067:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5068:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5069:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
5070:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
5071:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5072:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5073:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5074:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
5075:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5076:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 243


5077:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5078:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5079:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5080:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
5081:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
5082:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5083:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5084:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5085:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 4609              		.loc 2 5085 22 view .LVU1310
 4610              	.LBB227:
5086:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5087:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 4611              		.loc 2 5087 3 view .LVU1311
 4612 00c4 8022     		movs	r2, #128
 4613 00c6 1A60     		str	r2, [r3]
 4614              	.LVL353:
 4615              		.loc 2 5087 3 is_stmt 0 view .LVU1312
 4616              	.LBE227:
 4617              	.LBE226:
2556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4618              		.loc 1 2556 7 is_stmt 1 view .LVU1313
2556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4619              		.loc 1 2556 26 is_stmt 0 view .LVU1314
 4620 00c8 2B7B     		ldrb	r3, [r5, #12]
2556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 4621              		.loc 1 2556 10 view .LVU1315
 4622 00ca 012B     		cmp	r3, #1
 4623 00cc 1BD0     		beq	.L378
2562:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 4624              		.loc 1 2562 9 is_stmt 1 view .LVU1316
 4625 00ce 2268     		ldr	r2, [r4]
 4626              	.LVL354:
 4627              	.LBB228:
 4628              	.LBI228:
5088:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5089:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5090:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5091:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
5092:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
5093:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5094:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5095:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
5097:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
5099:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5100:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5101:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5102:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
5103:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
5104:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5105:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5106:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
5108:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 244


5110:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5111:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5112:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5113:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
5114:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
5115:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5116:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5117:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5118:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
5119:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5120:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
5121:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5122:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5123:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5124:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @}
5125:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5126:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5127:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
5128:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @{
5129:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5130:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5131:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5132:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable ADC ready.
5133:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
5134:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5135:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5136:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5137:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
5138:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5139:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
5140:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5141:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5142:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5143:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable interruption ADC channel configuration ready.
5144:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_CCRDY
5145:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5146:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
5147:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5148:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_CCRDY(ADC_TypeDef *ADCx)
5149:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5150:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
5151:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5152:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5153:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5154:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
5155:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
5156:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5157:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5158:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5159:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
5160:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5161:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
5162:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5163:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5164:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5165:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
5166:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 245


5167:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5168:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5169:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5170:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
5171:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5172:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
5173:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5174:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5175:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5176:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
5177:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
5178:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5179:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5180:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5181:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
5182:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5183:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
5184:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5185:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5186:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5187:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
5188:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
5189:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5190:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5191:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5192:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
5193:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5194:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
5195:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5196:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5197:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5198:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
5199:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
5200:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5201:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5202:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
5204:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
5206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5207:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5208:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5209:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
5210:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
5211:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5212:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5213:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
5215:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
5217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5218:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5219:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5220:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
5221:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
5222:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5223:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 246


5224:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
5226:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
5228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5229:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5230:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
5231:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
5232:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5233:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5234:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5235:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
5236:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5237:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
5238:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5239:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5240:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5241:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
5242:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
5243:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5244:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5245:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5246:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
5247:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5248:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
5249:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5250:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5251:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5252:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable interruption ADC channel configuration ready.
5253:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      CCRDYIE        LL_ADC_DisableIT_CCRDY
5254:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5255:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
5256:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5257:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_CCRDY(ADC_TypeDef *ADCx)
5258:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5259:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
5260:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5261:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5262:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5263:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
5264:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
5265:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5266:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5267:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5268:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
5269:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5270:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
5271:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5272:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5273:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5274:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
5275:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
5276:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5277:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5278:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5279:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
5280:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 247


5281:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
5282:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5283:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5284:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5285:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
5286:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
5287:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5288:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5289:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5290:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
5291:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5292:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
5293:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5294:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5295:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5296:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
5297:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
5298:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5299:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5300:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5301:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
5302:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5303:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
5304:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5305:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5306:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5307:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
5308:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
5309:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5310:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5311:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5312:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 4629              		.loc 2 5312 22 view .LVU1317
 4630              	.LBB229:
5313:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5314:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 4631              		.loc 2 5314 3 view .LVU1318
 4632 00d0 5368     		ldr	r3, [r2, #4]
 4633 00d2 8021     		movs	r1, #128
 4634 00d4 8B43     		bics	r3, r1
 4635 00d6 5360     		str	r3, [r2, #4]
 4636              	.LVL355:
5315:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 4637              		.loc 2 5315 1 is_stmt 0 view .LVU1319
 4638 00d8 4DE1     		b	.L304
 4639              	.LVL356:
 4640              	.L328:
 4641              		.loc 2 5315 1 view .LVU1320
 4642              	.LBE229:
 4643              	.LBE228:
2508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
 4644              		.loc 1 2508 41 view .LVU1321
 4645 00da 0121     		movs	r1, #1
 4646 00dc D5E7     		b	.L306
 4647              	.LVL357:
 4648              	.L307:
2533:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 248


 4649              		.loc 1 2533 11 is_stmt 1 view .LVU1322
 4650 00de 2068     		ldr	r0, [r4]
 4651              	.LVL358:
 4652              	.LBB230:
 4653              	.LBI230:
4004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 4654              		.loc 2 4004 22 view .LVU1323
 4655              	.LBB231:
4010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4656              		.loc 2 4010 3 view .LVU1324
4012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
 4657              		.loc 2 4012 3 view .LVU1325
4014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
 4658              		.loc 2 4014 5 view .LVU1326
4022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4659              		.loc 2 4022 3 view .LVU1327
 4660 00e0 C268     		ldr	r2, [r0, #12]
 4661 00e2 7C4B     		ldr	r3, .L383+12
 4662 00e4 1A40     		ands	r2, r3
 4663 00e6 8023     		movs	r3, #128
 4664 00e8 1B04     		lsls	r3, r3, #16
 4665 00ea 1343     		orrs	r3, r2
 4666 00ec C360     		str	r3, [r0, #12]
 4667              	.LVL359:
4022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4668              		.loc 2 4022 3 is_stmt 0 view .LVU1328
 4669              	.LBE231:
 4670              	.LBE230:
2534:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 4671              		.loc 1 2534 11 is_stmt 1 view .LVU1329
 4672              	.LBB233:
 4673              	.LBB232:
4025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4674              		.loc 2 4025 1 is_stmt 0 view .LVU1330
 4675 00ee E2E7     		b	.L309
 4676              	.L308:
4025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4677              		.loc 2 4025 1 view .LVU1331
 4678              	.LBE232:
 4679              	.LBE233:
2537:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
 4680              		.loc 1 2537 11 is_stmt 1 view .LVU1332
 4681 00f0 2268     		ldr	r2, [r4]
 4682              	.LVL360:
 4683              	.LBB234:
 4684              	.LBI234:
4004:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 4685              		.loc 2 4004 22 view .LVU1333
 4686              	.LBB235:
4010:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4687              		.loc 2 4010 3 view .LVU1334
4012:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   {
 4688              		.loc 2 4012 3 view .LVU1335
4014:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   }
 4689              		.loc 2 4014 5 view .LVU1336
4022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4690              		.loc 2 4022 3 view .LVU1337
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 249


 4691 00f2 D368     		ldr	r3, [r2, #12]
 4692 00f4 7748     		ldr	r0, .L383+12
 4693 00f6 0340     		ands	r3, r0
 4694 00f8 D360     		str	r3, [r2, #12]
 4695              	.LVL361:
4022:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4696              		.loc 2 4022 3 is_stmt 0 view .LVU1338
 4697              	.LBE235:
 4698              	.LBE234:
2538:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 4699              		.loc 1 2538 11 is_stmt 1 view .LVU1339
 4700              	.LBB237:
 4701              	.LBB236:
4025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4702              		.loc 2 4025 1 is_stmt 0 view .LVU1340
 4703 00fa DCE7     		b	.L309
 4704              	.L377:
4025:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4705              		.loc 2 4025 1 view .LVU1341
 4706              	.LBE236:
 4707              	.LBE237:
2543:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 4708              		.loc 1 2543 9 is_stmt 1 view .LVU1342
2543:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 4709              		.loc 1 2543 26 is_stmt 0 view .LVU1343
 4710 00fc 2000     		movs	r0, r4
 4711 00fe FFF7FEFF 		bl	ADC_Enable
 4712              	.LVL362:
2543:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 4713              		.loc 1 2543 26 view .LVU1344
 4714 0102 0600     		movs	r6, r0
 4715              	.LVL363:
2543:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 4716              		.loc 1 2543 26 view .LVU1345
 4717 0104 D9E7     		b	.L310
 4718              	.LVL364:
 4719              	.L378:
2558:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 4720              		.loc 1 2558 9 is_stmt 1 view .LVU1346
 4721 0106 2268     		ldr	r2, [r4]
 4722              	.LVL365:
 4723              	.LBB238:
 4724              	.LBI238:
5203:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 4725              		.loc 2 5203 22 view .LVU1347
 4726              	.LBB239:
5205:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 4727              		.loc 2 5205 3 view .LVU1348
 4728 0108 5368     		ldr	r3, [r2, #4]
 4729 010a 8021     		movs	r1, #128
 4730 010c 0B43     		orrs	r3, r1
 4731 010e 5360     		str	r3, [r2, #4]
 4732              	.LVL366:
5206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4733              		.loc 2 5206 1 is_stmt 0 view .LVU1349
 4734 0110 31E1     		b	.L304
 4735              	.LVL367:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 250


 4736              	.L376:
5206:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 4737              		.loc 2 5206 1 view .LVU1350
 4738              	.LBE239:
 4739              	.LBE238:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4740              		.loc 1 2575 13 is_stmt 1 view .LVU1351
 4741 0112 A023     		movs	r3, #160
 4742 0114 C658     		ldr	r6, [r0, r3]
 4743 0116 AB68     		ldr	r3, [r5, #8]
 4744 0118 5A02     		lsls	r2, r3, #9
 4745 011a 08D1     		bne	.L315
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4746              		.loc 1 2575 13 is_stmt 0 discriminator 1 view .LVU1352
 4747 011c 9B0E     		lsrs	r3, r3, #26
 4748 011e 1F21     		movs	r1, #31
 4749 0120 1940     		ands	r1, r3
 4750 0122 0132     		adds	r2, r2, #1
 4751 0124 8A40     		lsls	r2, r2, r1
 4752              	.L316:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4753              		.loc 1 2575 13 discriminator 96 view .LVU1353
 4754 0126 1643     		orrs	r6, r2
 4755 0128 A022     		movs	r2, #160
 4756 012a 8650     		str	r6, [r0, r2]
 4757 012c E7E0     		b	.L317
 4758              	.L315:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4759              		.loc 1 2575 13 discriminator 2 view .LVU1354
 4760 012e DA07     		lsls	r2, r3, #31
 4761 0130 2ED4     		bmi	.L329
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4762              		.loc 1 2575 13 discriminator 4 view .LVU1355
 4763 0132 9A07     		lsls	r2, r3, #30
 4764 0134 2ED4     		bmi	.L330
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4765              		.loc 1 2575 13 discriminator 6 view .LVU1356
 4766 0136 5A07     		lsls	r2, r3, #29
 4767 0138 2ED4     		bmi	.L331
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4768              		.loc 1 2575 13 discriminator 8 view .LVU1357
 4769 013a 1A07     		lsls	r2, r3, #28
 4770 013c 2ED4     		bmi	.L332
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4771              		.loc 1 2575 13 discriminator 10 view .LVU1358
 4772 013e DA06     		lsls	r2, r3, #27
 4773 0140 2ED4     		bmi	.L333
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4774              		.loc 1 2575 13 discriminator 12 view .LVU1359
 4775 0142 9A06     		lsls	r2, r3, #26
 4776 0144 2ED4     		bmi	.L334
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4777              		.loc 1 2575 13 discriminator 14 view .LVU1360
 4778 0146 5A06     		lsls	r2, r3, #25
 4779 0148 2ED4     		bmi	.L335
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4780              		.loc 1 2575 13 discriminator 16 view .LVU1361
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 251


 4781 014a 1A06     		lsls	r2, r3, #24
 4782 014c 2ED4     		bmi	.L336
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4783              		.loc 1 2575 13 discriminator 18 view .LVU1362
 4784 014e DA05     		lsls	r2, r3, #23
 4785 0150 2ED4     		bmi	.L337
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4786              		.loc 1 2575 13 discriminator 20 view .LVU1363
 4787 0152 9A05     		lsls	r2, r3, #22
 4788 0154 2FD4     		bmi	.L338
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4789              		.loc 1 2575 13 discriminator 22 view .LVU1364
 4790 0156 5A05     		lsls	r2, r3, #21
 4791 0158 30D4     		bmi	.L339
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4792              		.loc 1 2575 13 discriminator 24 view .LVU1365
 4793 015a 1A05     		lsls	r2, r3, #20
 4794 015c 31D4     		bmi	.L340
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4795              		.loc 1 2575 13 discriminator 26 view .LVU1366
 4796 015e DA04     		lsls	r2, r3, #19
 4797 0160 32D4     		bmi	.L341
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4798              		.loc 1 2575 13 discriminator 28 view .LVU1367
 4799 0162 9A04     		lsls	r2, r3, #18
 4800 0164 33D4     		bmi	.L342
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4801              		.loc 1 2575 13 discriminator 30 view .LVU1368
 4802 0166 5A04     		lsls	r2, r3, #17
 4803 0168 34D4     		bmi	.L343
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4804              		.loc 1 2575 13 discriminator 32 view .LVU1369
 4805 016a 1A04     		lsls	r2, r3, #16
 4806 016c 35D4     		bmi	.L344
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4807              		.loc 1 2575 13 discriminator 34 view .LVU1370
 4808 016e DA03     		lsls	r2, r3, #15
 4809 0170 36D4     		bmi	.L345
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4810              		.loc 1 2575 13 discriminator 36 view .LVU1371
 4811 0172 9A03     		lsls	r2, r3, #14
 4812 0174 37D4     		bmi	.L346
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4813              		.loc 1 2575 13 discriminator 38 view .LVU1372
 4814 0176 5A03     		lsls	r2, r3, #13
 4815 0178 38D4     		bmi	.L347
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4816              		.loc 1 2575 13 discriminator 40 view .LVU1373
 4817 017a 1A03     		lsls	r2, r3, #12
 4818 017c 39D4     		bmi	.L348
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4819              		.loc 1 2575 13 discriminator 42 view .LVU1374
 4820 017e DA02     		lsls	r2, r3, #11
 4821 0180 3AD4     		bmi	.L349
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4822              		.loc 1 2575 13 discriminator 44 view .LVU1375
 4823 0182 9A02     		lsls	r2, r3, #10
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 252


 4824 0184 3BD4     		bmi	.L350
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4825              		.loc 1 2575 13 discriminator 46 view .LVU1376
 4826 0186 5B02     		lsls	r3, r3, #9
 4827 0188 3CD5     		bpl	.L351
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4828              		.loc 1 2575 13 discriminator 48 view .LVU1377
 4829 018a 8022     		movs	r2, #128
 4830 018c D203     		lsls	r2, r2, #15
 4831 018e CAE7     		b	.L316
 4832              	.L329:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4833              		.loc 1 2575 13 discriminator 5 view .LVU1378
 4834 0190 0122     		movs	r2, #1
 4835 0192 C8E7     		b	.L316
 4836              	.L330:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4837              		.loc 1 2575 13 discriminator 7 view .LVU1379
 4838 0194 0222     		movs	r2, #2
 4839 0196 C6E7     		b	.L316
 4840              	.L331:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4841              		.loc 1 2575 13 discriminator 9 view .LVU1380
 4842 0198 0422     		movs	r2, #4
 4843 019a C4E7     		b	.L316
 4844              	.L332:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4845              		.loc 1 2575 13 discriminator 11 view .LVU1381
 4846 019c 0822     		movs	r2, #8
 4847 019e C2E7     		b	.L316
 4848              	.L333:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4849              		.loc 1 2575 13 discriminator 13 view .LVU1382
 4850 01a0 1022     		movs	r2, #16
 4851 01a2 C0E7     		b	.L316
 4852              	.L334:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4853              		.loc 1 2575 13 discriminator 15 view .LVU1383
 4854 01a4 2022     		movs	r2, #32
 4855 01a6 BEE7     		b	.L316
 4856              	.L335:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4857              		.loc 1 2575 13 discriminator 17 view .LVU1384
 4858 01a8 4022     		movs	r2, #64
 4859 01aa BCE7     		b	.L316
 4860              	.L336:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4861              		.loc 1 2575 13 discriminator 19 view .LVU1385
 4862 01ac 8022     		movs	r2, #128
 4863 01ae BAE7     		b	.L316
 4864              	.L337:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4865              		.loc 1 2575 13 discriminator 21 view .LVU1386
 4866 01b0 8022     		movs	r2, #128
 4867 01b2 5200     		lsls	r2, r2, #1
 4868 01b4 B7E7     		b	.L316
 4869              	.L338:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 253


2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4870              		.loc 1 2575 13 discriminator 23 view .LVU1387
 4871 01b6 8022     		movs	r2, #128
 4872 01b8 9200     		lsls	r2, r2, #2
 4873 01ba B4E7     		b	.L316
 4874              	.L339:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4875              		.loc 1 2575 13 discriminator 25 view .LVU1388
 4876 01bc 8022     		movs	r2, #128
 4877 01be D200     		lsls	r2, r2, #3
 4878 01c0 B1E7     		b	.L316
 4879              	.L340:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4880              		.loc 1 2575 13 discriminator 27 view .LVU1389
 4881 01c2 8022     		movs	r2, #128
 4882 01c4 1201     		lsls	r2, r2, #4
 4883 01c6 AEE7     		b	.L316
 4884              	.L341:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4885              		.loc 1 2575 13 discriminator 29 view .LVU1390
 4886 01c8 8022     		movs	r2, #128
 4887 01ca 5201     		lsls	r2, r2, #5
 4888 01cc ABE7     		b	.L316
 4889              	.L342:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4890              		.loc 1 2575 13 discriminator 31 view .LVU1391
 4891 01ce 8022     		movs	r2, #128
 4892 01d0 9201     		lsls	r2, r2, #6
 4893 01d2 A8E7     		b	.L316
 4894              	.L343:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4895              		.loc 1 2575 13 discriminator 33 view .LVU1392
 4896 01d4 8022     		movs	r2, #128
 4897 01d6 D201     		lsls	r2, r2, #7
 4898 01d8 A5E7     		b	.L316
 4899              	.L344:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4900              		.loc 1 2575 13 discriminator 35 view .LVU1393
 4901 01da 8022     		movs	r2, #128
 4902 01dc 1202     		lsls	r2, r2, #8
 4903 01de A2E7     		b	.L316
 4904              	.L345:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4905              		.loc 1 2575 13 discriminator 37 view .LVU1394
 4906 01e0 8022     		movs	r2, #128
 4907 01e2 5202     		lsls	r2, r2, #9
 4908 01e4 9FE7     		b	.L316
 4909              	.L346:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4910              		.loc 1 2575 13 discriminator 39 view .LVU1395
 4911 01e6 8022     		movs	r2, #128
 4912 01e8 9202     		lsls	r2, r2, #10
 4913 01ea 9CE7     		b	.L316
 4914              	.L347:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4915              		.loc 1 2575 13 discriminator 41 view .LVU1396
 4916 01ec 8022     		movs	r2, #128
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 254


 4917 01ee D202     		lsls	r2, r2, #11
 4918 01f0 99E7     		b	.L316
 4919              	.L348:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4920              		.loc 1 2575 13 discriminator 43 view .LVU1397
 4921 01f2 8022     		movs	r2, #128
 4922 01f4 1203     		lsls	r2, r2, #12
 4923 01f6 96E7     		b	.L316
 4924              	.L349:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4925              		.loc 1 2575 13 discriminator 45 view .LVU1398
 4926 01f8 8022     		movs	r2, #128
 4927 01fa 5203     		lsls	r2, r2, #13
 4928 01fc 93E7     		b	.L316
 4929              	.L350:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4930              		.loc 1 2575 13 discriminator 47 view .LVU1399
 4931 01fe 8022     		movs	r2, #128
 4932 0200 9203     		lsls	r2, r2, #14
 4933 0202 90E7     		b	.L316
 4934              	.L351:
2575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4935              		.loc 1 2575 13 discriminator 49 view .LVU1400
 4936 0204 0122     		movs	r2, #1
 4937 0206 8EE7     		b	.L316
 4938              	.L318:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4939              		.loc 1 2579 13 discriminator 2 view .LVU1401
 4940 0208 DA07     		lsls	r2, r3, #31
 4941 020a 2ED4     		bmi	.L352
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4942              		.loc 1 2579 13 discriminator 4 view .LVU1402
 4943 020c 9A07     		lsls	r2, r3, #30
 4944 020e 2ED4     		bmi	.L353
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4945              		.loc 1 2579 13 discriminator 6 view .LVU1403
 4946 0210 5A07     		lsls	r2, r3, #29
 4947 0212 2ED4     		bmi	.L354
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4948              		.loc 1 2579 13 discriminator 8 view .LVU1404
 4949 0214 1A07     		lsls	r2, r3, #28
 4950 0216 2ED4     		bmi	.L355
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4951              		.loc 1 2579 13 discriminator 10 view .LVU1405
 4952 0218 DA06     		lsls	r2, r3, #27
 4953 021a 2ED4     		bmi	.L356
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4954              		.loc 1 2579 13 discriminator 12 view .LVU1406
 4955 021c 9A06     		lsls	r2, r3, #26
 4956 021e 2ED4     		bmi	.L357
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4957              		.loc 1 2579 13 discriminator 14 view .LVU1407
 4958 0220 5A06     		lsls	r2, r3, #25
 4959 0222 2ED4     		bmi	.L358
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4960              		.loc 1 2579 13 discriminator 16 view .LVU1408
 4961 0224 1A06     		lsls	r2, r3, #24
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 255


 4962 0226 2ED4     		bmi	.L359
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4963              		.loc 1 2579 13 discriminator 18 view .LVU1409
 4964 0228 DA05     		lsls	r2, r3, #23
 4965 022a 2ED4     		bmi	.L360
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4966              		.loc 1 2579 13 discriminator 20 view .LVU1410
 4967 022c 9A05     		lsls	r2, r3, #22
 4968 022e 2FD4     		bmi	.L361
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4969              		.loc 1 2579 13 discriminator 22 view .LVU1411
 4970 0230 5A05     		lsls	r2, r3, #21
 4971 0232 30D4     		bmi	.L362
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4972              		.loc 1 2579 13 discriminator 24 view .LVU1412
 4973 0234 1A05     		lsls	r2, r3, #20
 4974 0236 31D4     		bmi	.L363
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4975              		.loc 1 2579 13 discriminator 26 view .LVU1413
 4976 0238 DA04     		lsls	r2, r3, #19
 4977 023a 32D4     		bmi	.L364
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4978              		.loc 1 2579 13 discriminator 28 view .LVU1414
 4979 023c 9A04     		lsls	r2, r3, #18
 4980 023e 33D4     		bmi	.L365
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4981              		.loc 1 2579 13 discriminator 30 view .LVU1415
 4982 0240 5A04     		lsls	r2, r3, #17
 4983 0242 34D4     		bmi	.L366
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4984              		.loc 1 2579 13 discriminator 32 view .LVU1416
 4985 0244 1A04     		lsls	r2, r3, #16
 4986 0246 35D4     		bmi	.L367
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4987              		.loc 1 2579 13 discriminator 34 view .LVU1417
 4988 0248 DA03     		lsls	r2, r3, #15
 4989 024a 36D4     		bmi	.L368
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4990              		.loc 1 2579 13 discriminator 36 view .LVU1418
 4991 024c 9A03     		lsls	r2, r3, #14
 4992 024e 37D4     		bmi	.L369
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4993              		.loc 1 2579 13 discriminator 38 view .LVU1419
 4994 0250 5A03     		lsls	r2, r3, #13
 4995 0252 43D4     		bmi	.L370
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4996              		.loc 1 2579 13 discriminator 40 view .LVU1420
 4997 0254 1A03     		lsls	r2, r3, #12
 4998 0256 44D4     		bmi	.L371
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 4999              		.loc 1 2579 13 discriminator 42 view .LVU1421
 5000 0258 DA02     		lsls	r2, r3, #11
 5001 025a 45D4     		bmi	.L372
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5002              		.loc 1 2579 13 discriminator 44 view .LVU1422
 5003 025c 9A02     		lsls	r2, r3, #10
 5004 025e 46D4     		bmi	.L373
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 256


2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5005              		.loc 1 2579 13 discriminator 46 view .LVU1423
 5006 0260 5B02     		lsls	r3, r3, #9
 5007 0262 47D5     		bpl	.L374
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5008              		.loc 1 2579 13 discriminator 48 view .LVU1424
 5009 0264 8022     		movs	r2, #128
 5010 0266 D203     		lsls	r2, r2, #15
 5011 0268 F7E6     		b	.L319
 5012              	.L352:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5013              		.loc 1 2579 13 discriminator 5 view .LVU1425
 5014 026a 0122     		movs	r2, #1
 5015 026c F5E6     		b	.L319
 5016              	.L353:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5017              		.loc 1 2579 13 discriminator 7 view .LVU1426
 5018 026e 0222     		movs	r2, #2
 5019 0270 F3E6     		b	.L319
 5020              	.L354:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5021              		.loc 1 2579 13 discriminator 9 view .LVU1427
 5022 0272 0422     		movs	r2, #4
 5023 0274 F1E6     		b	.L319
 5024              	.L355:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5025              		.loc 1 2579 13 discriminator 11 view .LVU1428
 5026 0276 0822     		movs	r2, #8
 5027 0278 EFE6     		b	.L319
 5028              	.L356:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5029              		.loc 1 2579 13 discriminator 13 view .LVU1429
 5030 027a 1022     		movs	r2, #16
 5031 027c EDE6     		b	.L319
 5032              	.L357:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5033              		.loc 1 2579 13 discriminator 15 view .LVU1430
 5034 027e 2022     		movs	r2, #32
 5035 0280 EBE6     		b	.L319
 5036              	.L358:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5037              		.loc 1 2579 13 discriminator 17 view .LVU1431
 5038 0282 4022     		movs	r2, #64
 5039 0284 E9E6     		b	.L319
 5040              	.L359:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5041              		.loc 1 2579 13 discriminator 19 view .LVU1432
 5042 0286 8022     		movs	r2, #128
 5043 0288 E7E6     		b	.L319
 5044              	.L360:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5045              		.loc 1 2579 13 discriminator 21 view .LVU1433
 5046 028a 8022     		movs	r2, #128
 5047 028c 5200     		lsls	r2, r2, #1
 5048 028e E4E6     		b	.L319
 5049              	.L361:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 257


 5050              		.loc 1 2579 13 discriminator 23 view .LVU1434
 5051 0290 8022     		movs	r2, #128
 5052 0292 9200     		lsls	r2, r2, #2
 5053 0294 E1E6     		b	.L319
 5054              	.L362:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5055              		.loc 1 2579 13 discriminator 25 view .LVU1435
 5056 0296 8022     		movs	r2, #128
 5057 0298 D200     		lsls	r2, r2, #3
 5058 029a DEE6     		b	.L319
 5059              	.L363:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5060              		.loc 1 2579 13 discriminator 27 view .LVU1436
 5061 029c 8022     		movs	r2, #128
 5062 029e 1201     		lsls	r2, r2, #4
 5063 02a0 DBE6     		b	.L319
 5064              	.L364:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5065              		.loc 1 2579 13 discriminator 29 view .LVU1437
 5066 02a2 8022     		movs	r2, #128
 5067 02a4 5201     		lsls	r2, r2, #5
 5068 02a6 D8E6     		b	.L319
 5069              	.L365:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5070              		.loc 1 2579 13 discriminator 31 view .LVU1438
 5071 02a8 8022     		movs	r2, #128
 5072 02aa 9201     		lsls	r2, r2, #6
 5073 02ac D5E6     		b	.L319
 5074              	.L366:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5075              		.loc 1 2579 13 discriminator 33 view .LVU1439
 5076 02ae 8022     		movs	r2, #128
 5077 02b0 D201     		lsls	r2, r2, #7
 5078 02b2 D2E6     		b	.L319
 5079              	.L367:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5080              		.loc 1 2579 13 discriminator 35 view .LVU1440
 5081 02b4 8022     		movs	r2, #128
 5082 02b6 1202     		lsls	r2, r2, #8
 5083 02b8 CFE6     		b	.L319
 5084              	.L368:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5085              		.loc 1 2579 13 discriminator 37 view .LVU1441
 5086 02ba 8022     		movs	r2, #128
 5087 02bc 5202     		lsls	r2, r2, #9
 5088 02be CCE6     		b	.L319
 5089              	.L369:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5090              		.loc 1 2579 13 discriminator 39 view .LVU1442
 5091 02c0 8022     		movs	r2, #128
 5092 02c2 9202     		lsls	r2, r2, #10
 5093 02c4 C9E6     		b	.L319
 5094              	.L384:
 5095 02c6 C046     		.align	2
 5096              	.L383:
 5097 02c8 0000C07C 		.word	2092957696
 5098 02cc FFFF1700 		.word	1572863
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 258


 5099 02d0 FEFEFFFF 		.word	-258
 5100 02d4 FFFF3F83 		.word	-2092957697
 5101 02d8 FFFFFEFF 		.word	-65537
 5102              	.L370:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5103              		.loc 1 2579 13 discriminator 41 view .LVU1443
 5104 02dc 8022     		movs	r2, #128
 5105 02de D202     		lsls	r2, r2, #11
 5106 02e0 BBE6     		b	.L319
 5107              	.L371:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5108              		.loc 1 2579 13 discriminator 43 view .LVU1444
 5109 02e2 8022     		movs	r2, #128
 5110 02e4 1203     		lsls	r2, r2, #12
 5111 02e6 B8E6     		b	.L319
 5112              	.L372:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5113              		.loc 1 2579 13 discriminator 45 view .LVU1445
 5114 02e8 8022     		movs	r2, #128
 5115 02ea 5203     		lsls	r2, r2, #13
 5116 02ec B5E6     		b	.L319
 5117              	.L373:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5118              		.loc 1 2579 13 discriminator 47 view .LVU1446
 5119 02ee 8022     		movs	r2, #128
 5120 02f0 9203     		lsls	r2, r2, #14
 5121 02f2 B2E6     		b	.L319
 5122              	.L374:
2579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           }
 5123              		.loc 1 2579 13 discriminator 49 view .LVU1447
 5124 02f4 0122     		movs	r2, #1
 5125 02f6 B0E6     		b	.L319
 5126              	.L312:
2584:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
 5127              		.loc 1 2584 11 is_stmt 1 view .LVU1448
 5128 02f8 2E4A     		ldr	r2, .L385
 5129 02fa FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 5130              	.LVL368:
2585:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5131              		.loc 1 2585 11 view .LVU1449
 5132              	.L317:
2592:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 5133              		.loc 1 2592 7 view .LVU1450
2592:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 5134              		.loc 1 2592 26 is_stmt 0 view .LVU1451
 5135 02fe 2A68     		ldr	r2, [r5]
2592:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       {
 5136              		.loc 1 2592 10 view .LVU1452
 5137 0300 2D4B     		ldr	r3, .L385+4
 5138 0302 9A42     		cmp	r2, r3
 5139 0304 15D0     		beq	.L379
2617:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5140              		.loc 1 2617 9 is_stmt 1 view .LVU1453
 5141 0306 A36D     		ldr	r3, [r4, #88]
 5142 0308 2C4A     		ldr	r2, .L385+8
 5143 030a 1340     		ands	r3, r2
 5144 030c A365     		str	r3, [r4, #88]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 259


2623:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5145              		.loc 1 2623 9 view .LVU1454
 5146 030e 2368     		ldr	r3, [r4]
 5147              	.LVL369:
 5148              	.LBB240:
 5149              	.LBI240:
5107:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 5150              		.loc 2 5107 22 view .LVU1455
 5151              	.LBB241:
5109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5152              		.loc 2 5109 3 view .LVU1456
 5153 0310 8022     		movs	r2, #128
 5154 0312 9200     		lsls	r2, r2, #2
 5155 0314 1A60     		str	r2, [r3]
 5156              	.LVL370:
5109:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5157              		.loc 2 5109 3 is_stmt 0 view .LVU1457
 5158              	.LBE241:
 5159              	.LBE240:
2626:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 5160              		.loc 1 2626 9 is_stmt 1 view .LVU1458
2626:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 5161              		.loc 1 2626 28 is_stmt 0 view .LVU1459
 5162 0316 2B7B     		ldrb	r3, [r5, #12]
2626:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 5163              		.loc 1 2626 12 view .LVU1460
 5164 0318 012B     		cmp	r3, #1
 5165 031a 23D0     		beq	.L380
2632:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 5166              		.loc 1 2632 11 is_stmt 1 view .LVU1461
 5167 031c 2268     		ldr	r2, [r4]
 5168              	.LVL371:
 5169              	.LBB242:
 5170              	.LBI242:
5316:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5317:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5318:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
5319:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
5320:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5321:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5322:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
5324:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
5326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
5327:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
5328:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
5329:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
5330:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
5331:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @param  ADCx ADC instance
5332:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   * @retval None
5333:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   */
5334:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 5171              		.loc 2 5334 22 view .LVU1462
 5172              	.LBB243:
5335:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
5336:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 260


 5173              		.loc 2 5336 3 view .LVU1463
 5174 031e 5368     		ldr	r3, [r2, #4]
 5175 0320 2749     		ldr	r1, .L385+12
 5176 0322 0B40     		ands	r3, r1
 5177 0324 5360     		str	r3, [r2, #4]
 5178              	.LVL372:
 5179              		.loc 2 5336 3 is_stmt 0 view .LVU1464
 5180              	.LBE243:
 5181              	.LBE242:
2460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 5182              		.loc 1 2460 21 view .LVU1465
 5183 0326 0026     		movs	r6, #0
 5184              	.LBB245:
 5185              	.LBB244:
5337:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5186              		.loc 2 5337 1 view .LVU1466
 5187 0328 25E0     		b	.L304
 5188              	.L313:
 5189              		.loc 2 5337 1 view .LVU1467
 5190              	.LBE244:
 5191              	.LBE245:
2588:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****           break;
 5192              		.loc 1 2588 11 is_stmt 1 view .LVU1468
 5193 032a 0022     		movs	r2, #0
 5194 032c FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 5195              	.LVL373:
2589:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****       }
 5196              		.loc 1 2589 11 view .LVU1469
 5197 0330 E5E7     		b	.L317
 5198              	.L379:
2595:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5199              		.loc 1 2595 9 view .LVU1470
 5200 0332 A36D     		ldr	r3, [r4, #88]
 5201 0334 234A     		ldr	r2, .L385+16
 5202 0336 1340     		ands	r3, r2
 5203 0338 A365     		str	r3, [r4, #88]
2601:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5204              		.loc 1 2601 9 view .LVU1471
 5205 033a 2368     		ldr	r3, [r4]
 5206              	.LVL374:
 5207              	.LBB246:
 5208              	.LBI246:
5096:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 5209              		.loc 2 5096 22 view .LVU1472
 5210              	.LBB247:
5098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5211              		.loc 2 5098 3 view .LVU1473
 5212 033c 8022     		movs	r2, #128
 5213 033e 5200     		lsls	r2, r2, #1
 5214 0340 1A60     		str	r2, [r3]
 5215              	.LVL375:
5098:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5216              		.loc 2 5098 3 is_stmt 0 view .LVU1474
 5217              	.LBE247:
 5218              	.LBE246:
2604:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 5219              		.loc 1 2604 9 is_stmt 1 view .LVU1475
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 261


2604:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 5220              		.loc 1 2604 28 is_stmt 0 view .LVU1476
 5221 0342 2B7B     		ldrb	r3, [r5, #12]
2604:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         {
 5222              		.loc 1 2604 12 view .LVU1477
 5223 0344 012B     		cmp	r3, #1
 5224 0346 06D0     		beq	.L381
2610:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 5225              		.loc 1 2610 11 is_stmt 1 view .LVU1478
 5226 0348 2268     		ldr	r2, [r4]
 5227              	.LVL376:
 5228              	.LBB248:
 5229              	.LBI248:
5323:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 5230              		.loc 2 5323 22 view .LVU1479
 5231              	.LBB249:
5325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5232              		.loc 2 5325 3 view .LVU1480
 5233 034a 5368     		ldr	r3, [r2, #4]
 5234 034c 1E49     		ldr	r1, .L385+20
 5235 034e 0B40     		ands	r3, r1
 5236 0350 5360     		str	r3, [r2, #4]
 5237              	.LVL377:
5325:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5238              		.loc 2 5325 3 is_stmt 0 view .LVU1481
 5239              	.LBE249:
 5240              	.LBE248:
2460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 5241              		.loc 1 2460 21 view .LVU1482
 5242 0352 0026     		movs	r6, #0
 5243              	.LBB251:
 5244              	.LBB250:
5326:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 5245              		.loc 2 5326 1 view .LVU1483
 5246 0354 0FE0     		b	.L304
 5247              	.L381:
 5248              	.LBE250:
 5249              	.LBE251:
2606:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 5250              		.loc 1 2606 11 is_stmt 1 view .LVU1484
 5251 0356 2268     		ldr	r2, [r4]
 5252              	.LVL378:
 5253              	.LBB252:
 5254              	.LBI252:
5214:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 5255              		.loc 2 5214 22 view .LVU1485
 5256              	.LBB253:
5216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5257              		.loc 2 5216 3 view .LVU1486
 5258 0358 5168     		ldr	r1, [r2, #4]
 5259 035a FF33     		adds	r3, r3, #255
 5260 035c 0B43     		orrs	r3, r1
 5261 035e 5360     		str	r3, [r2, #4]
 5262              	.LVL379:
5216:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5263              		.loc 2 5216 3 is_stmt 0 view .LVU1487
 5264              	.LBE253:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 262


 5265              	.LBE252:
2460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 5266              		.loc 1 2460 21 view .LVU1488
 5267 0360 0026     		movs	r6, #0
 5268              	.LBB255:
 5269              	.LBB254:
5217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 5270              		.loc 2 5217 1 view .LVU1489
 5271 0362 08E0     		b	.L304
 5272              	.L380:
5217:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** 
 5273              		.loc 2 5217 1 view .LVU1490
 5274              	.LBE254:
 5275              	.LBE255:
2628:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****         }
 5276              		.loc 1 2628 11 is_stmt 1 view .LVU1491
 5277 0364 2268     		ldr	r2, [r4]
 5278              	.LVL380:
 5279              	.LBB256:
 5280              	.LBI256:
5225:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** {
 5281              		.loc 2 5225 22 view .LVU1492
 5282              	.LBB257:
5227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5283              		.loc 2 5227 3 view .LVU1493
 5284 0366 5168     		ldr	r1, [r2, #4]
 5285 0368 8023     		movs	r3, #128
 5286 036a 9B00     		lsls	r3, r3, #2
 5287 036c 0B43     		orrs	r3, r1
 5288 036e 5360     		str	r3, [r2, #4]
 5289              	.LVL381:
5227:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** }
 5290              		.loc 2 5227 3 is_stmt 0 view .LVU1494
 5291              	.LBE257:
 5292              	.LBE256:
2460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 5293              		.loc 1 2460 21 view .LVU1495
 5294 0370 0026     		movs	r6, #0
 5295              	.LBB259:
 5296              	.LBB258:
5228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 5297              		.loc 2 5228 1 view .LVU1496
 5298 0372 00E0     		b	.L304
 5299              	.LVL382:
 5300              	.L326:
5228:Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_ll_adc.h **** /**
 5301              		.loc 2 5228 1 view .LVU1497
 5302              	.LBE258:
 5303              	.LBE259:
2460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 5304              		.loc 1 2460 21 view .LVU1498
 5305 0374 0026     		movs	r6, #0
 5306              	.LVL383:
 5307              	.L304:
2640:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 5308              		.loc 1 2640 3 is_stmt 1 view .LVU1499
2640:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 263


 5309              		.loc 1 2640 22 is_stmt 0 view .LVU1500
 5310 0376 2968     		ldr	r1, [r5]
2640:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   {
 5311              		.loc 1 2640 6 view .LVU1501
 5312 0378 144B     		ldr	r3, .L385+24
 5313 037a 9942     		cmp	r1, r3
 5314 037c 09D0     		beq	.L382
2654:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = AnalogWDGConfig->LowThreshold;
 5315              		.loc 1 2654 5 is_stmt 1 view .LVU1502
2654:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = AnalogWDGConfig->LowThreshold;
 5316              		.loc 1 2654 32 is_stmt 0 view .LVU1503
 5317 037e 2A69     		ldr	r2, [r5, #16]
 5318              	.LVL384:
2655:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 5319              		.loc 1 2655 5 is_stmt 1 view .LVU1504
2655:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 5320              		.loc 1 2655 32 is_stmt 0 view .LVU1505
 5321 0380 6B69     		ldr	r3, [r5, #20]
 5322              	.LVL385:
 5323              	.L324:
2659:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****                                   tmpAWDLowThresholdShifted);
 5324              		.loc 1 2659 3 is_stmt 1 view .LVU1506
 5325 0382 2068     		ldr	r0, [r4]
 5326 0384 FFF7FEFF 		bl	LL_ADC_ConfigAnalogWDThresholds
 5327              	.LVL386:
2663:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5328              		.loc 1 2663 3 view .LVU1507
2663:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5329              		.loc 1 2663 3 view .LVU1508
 5330 0388 5423     		movs	r3, #84
 5331 038a 0022     		movs	r2, #0
 5332 038c E254     		strb	r2, [r4, r3]
2663:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5333              		.loc 1 2663 3 view .LVU1509
2666:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** }
 5334              		.loc 1 2666 3 view .LVU1510
 5335              	.LVL387:
 5336              	.L303:
2667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5337              		.loc 1 2667 1 is_stmt 0 view .LVU1511
 5338 038e 3000     		movs	r0, r6
 5339              		@ sp needed
 5340              	.LVL388:
2667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5341              		.loc 1 2667 1 view .LVU1512
 5342 0390 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5343              	.LVL389:
 5344              	.L382:
2645:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 5345              		.loc 1 2645 5 is_stmt 1 view .LVU1513
2645:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 5346              		.loc 1 2645 34 is_stmt 0 view .LVU1514
 5347 0392 2A69     		ldr	r2, [r5, #16]
 5348 0394 2768     		ldr	r7, [r4]
 5349 0396 FB68     		ldr	r3, [r7, #12]
 5350 0398 DB08     		lsrs	r3, r3, #3
 5351 039a 0320     		movs	r0, #3
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 264


 5352 039c 0340     		ands	r3, r0
 5353 039e 5B00     		lsls	r3, r3, #1
2645:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 5354              		.loc 1 2645 32 view .LVU1515
 5355 03a0 9A40     		lsls	r2, r2, r3
 5356              	.LVL390:
2646:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 5357              		.loc 1 2646 5 is_stmt 1 view .LVU1516
2646:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 5358              		.loc 1 2646 34 is_stmt 0 view .LVU1517
 5359 03a2 6B69     		ldr	r3, [r5, #20]
 5360 03a4 FD68     		ldr	r5, [r7, #12]
 5361              	.LVL391:
2646:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 5362              		.loc 1 2646 34 view .LVU1518
 5363 03a6 ED08     		lsrs	r5, r5, #3
 5364 03a8 2840     		ands	r0, r5
 5365 03aa 4000     		lsls	r0, r0, #1
2646:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 5366              		.loc 1 2646 32 view .LVU1519
 5367 03ac 8340     		lsls	r3, r3, r0
 5368              	.LVL392:
2646:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c ****   }
 5369              		.loc 1 2646 32 view .LVU1520
 5370 03ae E8E7     		b	.L324
 5371              	.LVL393:
 5372              	.L325:
2493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_adc.c **** 
 5373              		.loc 1 2493 3 discriminator 1 view .LVU1521
 5374 03b0 0226     		movs	r6, #2
 5375 03b2 ECE7     		b	.L303
 5376              	.L386:
 5377              		.align	2
 5378              	.L385:
 5379 03b4 FFFF8700 		.word	8912895
 5380 03b8 FFFF1700 		.word	1572863
 5381 03bc FFFFFBFF 		.word	-262145
 5382 03c0 FFFDFFFF 		.word	-513
 5383 03c4 FFFFFDFF 		.word	-131073
 5384 03c8 FFFEFFFF 		.word	-257
 5385 03cc 0000C07C 		.word	2092957696
 5386              		.cfi_endproc
 5387              	.LFE363:
 5389              		.text
 5390              	.Letext0:
 5391              		.file 3 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 5392              		.file 4 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 5393              		.file 5 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c031xx.h"
 5394              		.file 6 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c0xx.h"
 5395              		.file 7 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_def.h"
 5396              		.file 8 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_dma.h"
 5397              		.file 9 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_adc.h"
 5398              		.file 10 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_adc_ex.h"
 5399              		.file 11 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/system_stm32c0xx.h"
 5400              		.file 12 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal.h"
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 265


DEFINED SYMBOLS
                            *ABS*:00000000 stm32c0xx_hal_adc.c
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:19     .text.LL_ADC_SetAnalogWDMonitChannels:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:24     .text.LL_ADC_SetAnalogWDMonitChannels:00000000 LL_ADC_SetAnalogWDMonitChannels
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:82     .text.LL_ADC_SetAnalogWDMonitChannels:0000002c $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:88     .text.LL_ADC_ConfigAnalogWDThresholds:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:93     .text.LL_ADC_ConfigAnalogWDThresholds:00000000 LL_ADC_ConfigAnalogWDThresholds
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:142    .text.LL_ADC_ConfigAnalogWDThresholds:00000028 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:147    .text.HAL_ADC_MspInit:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:153    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:169    .text.HAL_ADC_Init:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:175    .text.HAL_ADC_Init:00000000 HAL_ADC_Init
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:768    .text.HAL_ADC_Init:00000220 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:780    .text.HAL_ADC_MspDeInit:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:786    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:802    .text.HAL_ADC_PollForConversion:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:808    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1014   .text.HAL_ADC_PollForConversion:000000b4 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1019   .text.HAL_ADC_PollForEvent:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1025   .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1213   .text.HAL_ADC_GetValue:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1219   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1241   .text.HAL_ADC_ConvCpltCallback:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1247   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1263   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1269   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1285   .text.ADC_DMAHalfConvCplt:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1290   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1316   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1322   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1338   .text.HAL_ADC_ErrorCallback:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1344   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1360   .text.ADC_DMAError:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1365   .text.ADC_DMAError:00000000 ADC_DMAError
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1401   .text.ADC_DMAConvCplt:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1406   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1551   .text.ADC_DMAConvCplt:0000007c $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1556   .text.HAL_ADC_CalibrationCpltCallback:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1562   .text.HAL_ADC_CalibrationCpltCallback:00000000 HAL_ADC_CalibrationCpltCallback
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1578   .text.HAL_ADC_ADCReadyCallback:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1584   .text.HAL_ADC_ADCReadyCallback:00000000 HAL_ADC_ADCReadyCallback
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1600   .text.HAL_ADC_IRQHandler:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1606   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1986   .text.HAL_ADC_IRQHandler:00000190 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1991   .text.HAL_ADC_ConfigChannel:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:1997   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2678   .text.HAL_ADC_ConfigChannel:00000260 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2690   .text.HAL_ADC_GetState:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2696   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2716   .text.HAL_ADC_GetError:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2722   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2742   .text.ADC_ConversionStop:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2748   .text.ADC_ConversionStop:00000000 ADC_ConversionStop
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2873   .text.ADC_ConversionStop:00000054 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2878   .text.ADC_Enable:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:2884   .text.ADC_Enable:00000000 ADC_Enable
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3114   .text.ADC_Enable:000000b4 $d
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s 			page 266


/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3123   .text.HAL_ADC_Start:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3129   .text.HAL_ADC_Start:00000000 HAL_ADC_Start
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3249   .text.HAL_ADC_Start:00000060 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3255   .text.HAL_ADC_Start_IT:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3261   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3423   .text.HAL_ADC_Start_IT:00000094 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3429   .text.HAL_ADC_Start_DMA:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3435   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3645   .text.HAL_ADC_Start_DMA:000000a8 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3654   .text.ADC_Disable:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3660   .text.ADC_Disable:00000000 ADC_Disable
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3832   .text.ADC_Disable:00000088 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3837   .text.HAL_ADC_DeInit:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:3843   .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4029   .text.HAL_ADC_DeInit:000000a4 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4040   .text.HAL_ADC_Stop:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4046   .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4128   .text.HAL_ADC_Stop:00000040 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4133   .text.HAL_ADC_Stop_IT:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4139   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4227   .text.HAL_ADC_Stop_IT:0000004c $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4232   .text.HAL_ADC_Stop_DMA:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4238   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4375   .text.HAL_ADC_Stop_DMA:00000080 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4380   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:4386   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:5097   .text.HAL_ADC_AnalogWDGConfig:000002c8 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:5104   .text.HAL_ADC_AnalogWDGConfig:000002dc $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//ccbjnRvU.s:5379   .text.HAL_ADC_AnalogWDGConfig:000003b4 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_ChannelConfigReadyCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
