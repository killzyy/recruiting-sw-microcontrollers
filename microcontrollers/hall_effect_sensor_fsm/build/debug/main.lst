ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB354:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** #include <string.h>
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** #include <stdlib.h>
  28:Core/Src/main.c **** #include <math.h>
  29:Core/Src/main.c **** #include <time.h>
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** #define M_PI 3.14159265358979323846
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** #define ADC_BUF_LEN 64
  44:Core/Src/main.c **** #define FILTER_LEN 150
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  49:Core/Src/main.c **** /* USER CODE BEGIN PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  56:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** UART_HandleTypeDef huart2;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE BEGIN PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint16_t adc_buf[ADC_BUF_LEN];
  63:Core/Src/main.c **** uint16_t filter_out = 0;
  64:Core/Src/main.c **** uint16_t filter_buf[FILTER_LEN];
  65:Core/Src/main.c **** uint16_t counter = 0;
  66:Core/Src/main.c **** uint32_t sum = 0;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PV */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  71:Core/Src/main.c **** void SystemClock_Config(void);
  72:Core/Src/main.c **** static void MX_GPIO_Init(void);
  73:Core/Src/main.c **** static void MX_DMA_Init(void);
  74:Core/Src/main.c **** static void MX_ADC1_Init(void);
  75:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  76:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** uint16_t map(uint16_t val, uint16_t in_min, uint16_t in_max, uint16_t out_min, uint16_t out_max)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   // Preso da https://docs.arduino.cc/language-reference/en/functions/math/map/#appendix
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   return (val - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  83:Core/Src/main.c **** }
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** uint16_t toMilliVolt(uint16_t val)
  86:Core/Src/main.c **** {
  87:Core/Src/main.c ****   // Del tutto equivalente a map(val, 0, 4095, 0, 5000) ma usato per semplicit√†
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   return (val * 5000) / 4095;
  90:Core/Src/main.c **** }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** long gaussian_noise(double mean, double stddev)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c ****   // Adattato da https://it.wikipedia.org/wiki/Trasformazione_di_Box-Muller
  95:Core/Src/main.c ****   double u1 = ((double)rand() + 1) / ((double)RAND_MAX + 1);
  96:Core/Src/main.c ****   double u2 = ((double)rand() + 1) / ((double)RAND_MAX + 1);
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   double z0 = sqrt(-2.0f * log(u1)) * cos(2 * M_PI * u2);
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   double noise = z0 * stddev + mean;
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   return lround(noise);
 103:Core/Src/main.c **** }
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** uint16_t correct(long val)
 106:Core/Src/main.c **** {
 107:Core/Src/main.c ****   if (val < 0) { return (uint16_t)0; }
 108:Core/Src/main.c ****   if (val > 5000) { return (uint16_t)5000; }
 109:Core/Src/main.c ****   return val;
 110:Core/Src/main.c **** }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* USER CODE END PFP */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 115:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /* USER CODE END 0 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /**
 120:Core/Src/main.c ****   * @brief  The application entry point.
 121:Core/Src/main.c ****   * @retval int
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c **** int main(void)
 124:Core/Src/main.c **** {
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END 1 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 133:Core/Src/main.c ****   HAL_Init();
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE END Init */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Configure the system clock */
 140:Core/Src/main.c ****   SystemClock_Config();
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* USER CODE END SysInit */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* Initialize all configured peripherals */
 147:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 4


 148:Core/Src/main.c ****   MX_DMA_Init();
 149:Core/Src/main.c ****   MX_ADC1_Init();
 150:Core/Src/main.c ****   MX_USART2_UART_Init();
 151:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   srand(time(NULL));
 154:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc1);
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE END 2 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* Initialize leds */
 159:Core/Src/main.c ****   BSP_LED_Init(LED_GREEN);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* Initialize USER push-button, will be used to trigger an interrupt each time it's pressed.*/
 162:Core/Src/main.c ****   BSP_PB_Init(BUTTON_USER, BUTTON_MODE_EXTI);
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* Infinite loop */
 165:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 166:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_buf, ADC_BUF_LEN);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   while (1)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     /* USER CODE END WHILE */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c ****   /* USER CODE END 3 */
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief System Clock Configuration
 179:Core/Src/main.c ****   * @retval None
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c **** void SystemClock_Config(void)
 182:Core/Src/main.c **** {
 183:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 184:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_1);
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 189:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 193:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 201:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 203:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 204:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 5


 205:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c **** }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** /**
 214:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 215:Core/Src/main.c ****   * @param None
 216:Core/Src/main.c ****   * @retval None
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c **** static void MX_ADC1_Init(void)
 219:Core/Src/main.c **** {
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c ****   hadc1.Instance = ADC1;
 234:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 235:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 236:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 237:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_SEQ_FIXED;
 238:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 239:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 240:Core/Src/main.c ****   hadc1.Init.LowPowerAutoPowerOff = DISABLE;
 241:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 242:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 243:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 244:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 245:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 246:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 247:Core/Src/main.c ****   hadc1.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 248:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 249:Core/Src/main.c ****   hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 250:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /** Configure Regular Channel
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 258:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 259:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 260:Core/Src/main.c ****   {
 261:Core/Src/main.c ****     Error_Handler();
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 6


 262:Core/Src/main.c ****   }
 263:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** }
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** /**
 270:Core/Src/main.c ****   * @brief USART2 Initialization Function
 271:Core/Src/main.c ****   * @param None
 272:Core/Src/main.c ****   * @retval None
 273:Core/Src/main.c ****   */
 274:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 275:Core/Src/main.c **** {
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 284:Core/Src/main.c ****   huart2.Instance = USART2;
 285:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 286:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 287:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 288:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 289:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 290:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 291:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 292:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 293:Core/Src/main.c ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 294:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 295:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     Error_Handler();
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** }
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /**
 306:Core/Src/main.c ****   * Enable DMA controller clock
 307:Core/Src/main.c ****   */
 308:Core/Src/main.c **** static void MX_DMA_Init(void)
 309:Core/Src/main.c **** {
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* DMA controller clock enable */
 312:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* DMA interrupt init */
 315:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 316:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 317:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 318:Core/Src/main.c **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 7


 319:Core/Src/main.c **** }
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /**
 322:Core/Src/main.c ****   * @brief GPIO Initialization Function
 323:Core/Src/main.c ****   * @param None
 324:Core/Src/main.c ****   * @retval None
 325:Core/Src/main.c ****   */
 326:Core/Src/main.c **** static void MX_GPIO_Init(void)
 327:Core/Src/main.c **** {
  26              		.loc 1 327 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
  34 0002 88B0     		sub	sp, sp, #32
  35              		.cfi_def_cfa_offset 40
 328:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  36              		.loc 1 328 3 view .LVU1
  37              		.loc 1 328 20 is_stmt 0 view .LVU2
  38 0004 03AC     		add	r4, sp, #12
  39 0006 1422     		movs	r2, #20
  40 0008 0021     		movs	r1, #0
  41 000a 2000     		movs	r0, r4
  42 000c FFF7FEFF 		bl	memset
  43              	.LVL0:
 329:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 334:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  44              		.loc 1 334 3 is_stmt 1 view .LVU3
  45              	.LBB5:
  46              		.loc 1 334 3 view .LVU4
  47              		.loc 1 334 3 view .LVU5
  48 0010 104B     		ldr	r3, .L2
  49 0012 596B     		ldr	r1, [r3, #52]
  50 0014 0422     		movs	r2, #4
  51 0016 1143     		orrs	r1, r2
  52 0018 5963     		str	r1, [r3, #52]
  53              		.loc 1 334 3 view .LVU6
  54 001a 596B     		ldr	r1, [r3, #52]
  55 001c 0A40     		ands	r2, r1
  56 001e 0092     		str	r2, [sp]
  57              		.loc 1 334 3 view .LVU7
  58 0020 009A     		ldr	r2, [sp]
  59              	.LBE5:
  60              		.loc 1 334 3 view .LVU8
 335:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  61              		.loc 1 335 3 view .LVU9
  62              	.LBB6:
  63              		.loc 1 335 3 view .LVU10
  64              		.loc 1 335 3 view .LVU11
  65 0022 596B     		ldr	r1, [r3, #52]
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 8


  66 0024 2022     		movs	r2, #32
  67 0026 1143     		orrs	r1, r2
  68 0028 5963     		str	r1, [r3, #52]
  69              		.loc 1 335 3 view .LVU12
  70 002a 596B     		ldr	r1, [r3, #52]
  71 002c 0A40     		ands	r2, r1
  72 002e 0192     		str	r2, [sp, #4]
  73              		.loc 1 335 3 view .LVU13
  74 0030 019A     		ldr	r2, [sp, #4]
  75              	.LBE6:
  76              		.loc 1 335 3 view .LVU14
 336:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  77              		.loc 1 336 3 view .LVU15
  78              	.LBB7:
  79              		.loc 1 336 3 view .LVU16
  80              		.loc 1 336 3 view .LVU17
  81 0032 596B     		ldr	r1, [r3, #52]
  82 0034 0122     		movs	r2, #1
  83 0036 1143     		orrs	r1, r2
  84 0038 5963     		str	r1, [r3, #52]
  85              		.loc 1 336 3 view .LVU18
  86 003a 5B6B     		ldr	r3, [r3, #52]
  87 003c 1340     		ands	r3, r2
  88 003e 0293     		str	r3, [sp, #8]
  89              		.loc 1 336 3 view .LVU19
  90 0040 029B     		ldr	r3, [sp, #8]
  91              	.LBE7:
  92              		.loc 1 336 3 view .LVU20
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /*Configure GPIO pin : HALL_DIGITAL_Pin */
 339:Core/Src/main.c ****   GPIO_InitStruct.Pin = HALL_DIGITAL_Pin;
  93              		.loc 1 339 3 view .LVU21
  94              		.loc 1 339 23 is_stmt 0 view .LVU22
  95 0042 0392     		str	r2, [sp, #12]
 340:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  96              		.loc 1 340 3 is_stmt 1 view .LVU23
 341:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
  97              		.loc 1 341 3 view .LVU24
  98              		.loc 1 341 24 is_stmt 0 view .LVU25
  99 0044 0592     		str	r2, [sp, #20]
 342:Core/Src/main.c ****   HAL_GPIO_Init(HALL_DIGITAL_GPIO_Port, &GPIO_InitStruct);
 100              		.loc 1 342 3 is_stmt 1 view .LVU26
 101 0046 A020     		movs	r0, #160
 102 0048 2100     		movs	r1, r4
 103 004a C005     		lsls	r0, r0, #23
 104 004c FFF7FEFF 		bl	HAL_GPIO_Init
 105              	.LVL1:
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 347:Core/Src/main.c **** }
 106              		.loc 1 347 1 is_stmt 0 view .LVU27
 107 0050 08B0     		add	sp, sp, #32
 108              		@ sp needed
 109 0052 10BD     		pop	{r4, pc}
 110              	.L3:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 9


 111              		.align	2
 112              	.L2:
 113 0054 00100240 		.word	1073876992
 114              		.cfi_endproc
 115              	.LFE354:
 117              		.section	.text.MX_DMA_Init,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.code	16
 121              		.thumb_func
 123              	MX_DMA_Init:
 124              	.LFB353:
 309:Core/Src/main.c **** 
 125              		.loc 1 309 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 00B5     		push	{lr}
 130              		.cfi_def_cfa_offset 4
 131              		.cfi_offset 14, -4
 132 0002 83B0     		sub	sp, sp, #12
 133              		.cfi_def_cfa_offset 16
 312:Core/Src/main.c **** 
 134              		.loc 1 312 3 view .LVU29
 135              	.LBB8:
 312:Core/Src/main.c **** 
 136              		.loc 1 312 3 view .LVU30
 312:Core/Src/main.c **** 
 137              		.loc 1 312 3 view .LVU31
 138 0004 094A     		ldr	r2, .L5
 139 0006 916B     		ldr	r1, [r2, #56]
 140 0008 0123     		movs	r3, #1
 141 000a 1943     		orrs	r1, r3
 142 000c 9163     		str	r1, [r2, #56]
 312:Core/Src/main.c **** 
 143              		.loc 1 312 3 view .LVU32
 144 000e 926B     		ldr	r2, [r2, #56]
 145 0010 1340     		ands	r3, r2
 146 0012 0193     		str	r3, [sp, #4]
 312:Core/Src/main.c **** 
 147              		.loc 1 312 3 view .LVU33
 148 0014 019B     		ldr	r3, [sp, #4]
 149              	.LBE8:
 312:Core/Src/main.c **** 
 150              		.loc 1 312 3 view .LVU34
 316:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 151              		.loc 1 316 3 view .LVU35
 152 0016 0022     		movs	r2, #0
 153 0018 0021     		movs	r1, #0
 154 001a 0920     		movs	r0, #9
 155 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 156              	.LVL2:
 317:Core/Src/main.c **** 
 157              		.loc 1 317 3 view .LVU36
 158 0020 0920     		movs	r0, #9
 159 0022 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 160              	.LVL3:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 10


 319:Core/Src/main.c **** 
 161              		.loc 1 319 1 is_stmt 0 view .LVU37
 162 0026 03B0     		add	sp, sp, #12
 163              		@ sp needed
 164 0028 00BD     		pop	{pc}
 165              	.L6:
 166 002a C046     		.align	2
 167              	.L5:
 168 002c 00100240 		.word	1073876992
 169              		.cfi_endproc
 170              	.LFE353:
 172              		.section	.text.map,"ax",%progbits
 173              		.align	1
 174              		.global	map
 175              		.syntax unified
 176              		.code	16
 177              		.thumb_func
 179              	map:
 180              	.LVL4:
 181              	.LFB345:
  79:Core/Src/main.c ****   // Preso da https://docs.arduino.cc/language-reference/en/functions/math/map/#appendix
 182              		.loc 1 79 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 4, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
  79:Core/Src/main.c ****   // Preso da https://docs.arduino.cc/language-reference/en/functions/math/map/#appendix
 186              		.loc 1 79 1 is_stmt 0 view .LVU39
 187 0000 70B5     		push	{r4, r5, r6, lr}
 188              		.cfi_def_cfa_offset 16
 189              		.cfi_offset 4, -16
 190              		.cfi_offset 5, -12
 191              		.cfi_offset 6, -8
 192              		.cfi_offset 14, -4
 193 0002 1C00     		movs	r4, r3
 194 0004 04AB     		add	r3, sp, #16
 195              	.LVL5:
  79:Core/Src/main.c ****   // Preso da https://docs.arduino.cc/language-reference/en/functions/math/map/#appendix
 196              		.loc 1 79 1 view .LVU40
 197 0006 1B88     		ldrh	r3, [r3]
 198              	.LVL6:
  82:Core/Src/main.c **** }
 199              		.loc 1 82 3 is_stmt 1 view .LVU41
  82:Core/Src/main.c **** }
 200              		.loc 1 82 15 is_stmt 0 view .LVU42
 201 0008 451A     		subs	r5, r0, r1
  82:Core/Src/main.c **** }
 202              		.loc 1 82 36 view .LVU43
 203 000a 181B     		subs	r0, r3, r4
 204              	.LVL7:
  82:Core/Src/main.c **** }
 205              		.loc 1 82 25 view .LVU44
 206 000c 6843     		muls	r0, r5
  82:Core/Src/main.c **** }
 207              		.loc 1 82 57 view .LVU45
 208 000e 511A     		subs	r1, r2, r1
 209              	.LVL8:
  82:Core/Src/main.c **** }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 11


 210              		.loc 1 82 47 view .LVU46
 211 0010 FFF7FEFF 		bl	__aeabi_idiv
 212              	.LVL9:
  82:Core/Src/main.c **** }
 213              		.loc 1 82 67 view .LVU47
 214 0014 2018     		adds	r0, r4, r0
  82:Core/Src/main.c **** }
 215              		.loc 1 82 67 discriminator 1 view .LVU48
 216 0016 80B2     		uxth	r0, r0
  83:Core/Src/main.c **** 
 217              		.loc 1 83 1 view .LVU49
 218              		@ sp needed
 219              	.LVL10:
  83:Core/Src/main.c **** 
 220              		.loc 1 83 1 view .LVU50
 221 0018 70BD     		pop	{r4, r5, r6, pc}
 222              		.cfi_endproc
 223              	.LFE345:
 225              		.section	.text.toMilliVolt,"ax",%progbits
 226              		.align	1
 227              		.global	toMilliVolt
 228              		.syntax unified
 229              		.code	16
 230              		.thumb_func
 232              	toMilliVolt:
 233              	.LVL11:
 234              	.LFB346:
  86:Core/Src/main.c ****   // Del tutto equivalente a map(val, 0, 4095, 0, 5000) ma usato per semplicit√†
 235              		.loc 1 86 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
  86:Core/Src/main.c ****   // Del tutto equivalente a map(val, 0, 4095, 0, 5000) ma usato per semplicit√†
 239              		.loc 1 86 1 is_stmt 0 view .LVU52
 240 0000 10B5     		push	{r4, lr}
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 4, -8
 243              		.cfi_offset 14, -4
  89:Core/Src/main.c **** }
 244              		.loc 1 89 3 is_stmt 1 view .LVU53
  89:Core/Src/main.c **** }
 245              		.loc 1 89 15 is_stmt 0 view .LVU54
 246 0002 034B     		ldr	r3, .L9
 247 0004 5843     		muls	r0, r3
 248              	.LVL12:
  89:Core/Src/main.c **** }
 249              		.loc 1 89 23 view .LVU55
 250 0006 0349     		ldr	r1, .L9+4
 251 0008 FFF7FEFF 		bl	__aeabi_idiv
 252              	.LVL13:
  89:Core/Src/main.c **** }
 253              		.loc 1 89 23 discriminator 1 view .LVU56
 254 000c 80B2     		uxth	r0, r0
  90:Core/Src/main.c **** 
 255              		.loc 1 90 1 view .LVU57
 256              		@ sp needed
 257 000e 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 12


 258              	.L10:
 259              		.align	2
 260              	.L9:
 261 0010 88130000 		.word	5000
 262 0014 FF0F0000 		.word	4095
 263              		.cfi_endproc
 264              	.LFE346:
 266              		.section	.text.gaussian_noise,"ax",%progbits
 267              		.align	1
 268              		.global	gaussian_noise
 269              		.syntax unified
 270              		.code	16
 271              		.thumb_func
 273              	gaussian_noise:
 274              	.LVL14:
 275              	.LFB347:
  93:Core/Src/main.c ****   // Adattato da https://it.wikipedia.org/wiki/Trasformazione_di_Box-Muller
 276              		.loc 1 93 1 is_stmt 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 16
 279              		@ frame_needed = 0, uses_anonymous_args = 0
  93:Core/Src/main.c ****   // Adattato da https://it.wikipedia.org/wiki/Trasformazione_di_Box-Muller
 280              		.loc 1 93 1 is_stmt 0 view .LVU59
 281 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 282              		.cfi_def_cfa_offset 20
 283              		.cfi_offset 4, -20
 284              		.cfi_offset 5, -16
 285              		.cfi_offset 6, -12
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 85B0     		sub	sp, sp, #20
 289              		.cfi_def_cfa_offset 40
 290 0004 0090     		str	r0, [sp]
 291 0006 0191     		str	r1, [sp, #4]
 292 0008 0292     		str	r2, [sp, #8]
 293 000a 0393     		str	r3, [sp, #12]
  95:Core/Src/main.c ****   double u2 = ((double)rand() + 1) / ((double)RAND_MAX + 1);
 294              		.loc 1 95 3 is_stmt 1 view .LVU60
  95:Core/Src/main.c ****   double u2 = ((double)rand() + 1) / ((double)RAND_MAX + 1);
 295              		.loc 1 95 24 is_stmt 0 view .LVU61
 296 000c FFF7FEFF 		bl	rand
 297              	.LVL15:
  95:Core/Src/main.c ****   double u2 = ((double)rand() + 1) / ((double)RAND_MAX + 1);
 298              		.loc 1 95 16 discriminator 1 view .LVU62
 299 0010 FFF7FEFF 		bl	__aeabi_i2d
 300              	.LVL16:
  95:Core/Src/main.c ****   double u2 = ((double)rand() + 1) / ((double)RAND_MAX + 1);
 301              		.loc 1 95 31 discriminator 1 view .LVU63
 302 0014 0022     		movs	r2, #0
 303 0016 204B     		ldr	r3, .L12
 304 0018 FFF7FEFF 		bl	__aeabi_dadd
 305              	.LVL17:
  95:Core/Src/main.c ****   double u2 = ((double)rand() + 1) / ((double)RAND_MAX + 1);
 306              		.loc 1 95 10 discriminator 1 view .LVU64
 307 001c 0022     		movs	r2, #0
 308 001e F823     		movs	r3, #248
 309 0020 9B05     		lsls	r3, r3, #22
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 13


 310 0022 FFF7FEFF 		bl	__aeabi_dmul
 311              	.LVL18:
 312 0026 0400     		movs	r4, r0
 313 0028 0D00     		movs	r5, r1
 314              	.LVL19:
  96:Core/Src/main.c **** 
 315              		.loc 1 96 3 is_stmt 1 view .LVU65
  96:Core/Src/main.c **** 
 316              		.loc 1 96 24 is_stmt 0 view .LVU66
 317 002a FFF7FEFF 		bl	rand
 318              	.LVL20:
  96:Core/Src/main.c **** 
 319              		.loc 1 96 16 discriminator 1 view .LVU67
 320 002e FFF7FEFF 		bl	__aeabi_i2d
 321              	.LVL21:
  96:Core/Src/main.c **** 
 322              		.loc 1 96 31 discriminator 1 view .LVU68
 323 0032 0022     		movs	r2, #0
 324 0034 184B     		ldr	r3, .L12
 325 0036 FFF7FEFF 		bl	__aeabi_dadd
 326              	.LVL22:
  96:Core/Src/main.c **** 
 327              		.loc 1 96 10 discriminator 1 view .LVU69
 328 003a 0022     		movs	r2, #0
 329 003c F823     		movs	r3, #248
 330 003e 9B05     		lsls	r3, r3, #22
 331 0040 FFF7FEFF 		bl	__aeabi_dmul
 332              	.LVL23:
 333 0044 0600     		movs	r6, r0
 334 0046 0F00     		movs	r7, r1
 335              	.LVL24:
  98:Core/Src/main.c **** 
 336              		.loc 1 98 3 is_stmt 1 view .LVU70
  98:Core/Src/main.c **** 
 337              		.loc 1 98 28 is_stmt 0 view .LVU71
 338 0048 2000     		movs	r0, r4
 339 004a 2900     		movs	r1, r5
 340 004c FFF7FEFF 		bl	log
 341              	.LVL25:
  98:Core/Src/main.c **** 
 342              		.loc 1 98 15 discriminator 1 view .LVU72
 343 0050 0022     		movs	r2, #0
 344 0052 C023     		movs	r3, #192
 345 0054 1B06     		lsls	r3, r3, #24
 346 0056 FFF7FEFF 		bl	__aeabi_dmul
 347              	.LVL26:
 348 005a FFF7FEFF 		bl	sqrt
 349              	.LVL27:
 350 005e 0400     		movs	r4, r0
 351              	.LVL28:
  98:Core/Src/main.c **** 
 352              		.loc 1 98 15 discriminator 1 view .LVU73
 353 0060 0D00     		movs	r5, r1
  98:Core/Src/main.c **** 
 354              		.loc 1 98 39 discriminator 2 view .LVU74
 355 0062 0E4A     		ldr	r2, .L12+4
 356 0064 0E4B     		ldr	r3, .L12+8
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 14


 357 0066 3000     		movs	r0, r6
 358 0068 3900     		movs	r1, r7
 359 006a FFF7FEFF 		bl	__aeabi_dmul
 360              	.LVL29:
 361 006e FFF7FEFF 		bl	cos
 362              	.LVL30:
 363 0072 0200     		movs	r2, r0
 364 0074 0B00     		movs	r3, r1
  98:Core/Src/main.c **** 
 365              		.loc 1 98 10 discriminator 3 view .LVU75
 366 0076 2000     		movs	r0, r4
 367 0078 2900     		movs	r1, r5
 368 007a FFF7FEFF 		bl	__aeabi_dmul
 369              	.LVL31:
 100:Core/Src/main.c **** 
 370              		.loc 1 100 3 is_stmt 1 view .LVU76
 100:Core/Src/main.c **** 
 371              		.loc 1 100 21 is_stmt 0 view .LVU77
 372 007e 029A     		ldr	r2, [sp, #8]
 373 0080 039B     		ldr	r3, [sp, #12]
 374 0082 FFF7FEFF 		bl	__aeabi_dmul
 375              	.LVL32:
 100:Core/Src/main.c **** 
 376              		.loc 1 100 10 view .LVU78
 377 0086 009A     		ldr	r2, [sp]
 378 0088 019B     		ldr	r3, [sp, #4]
 379 008a FFF7FEFF 		bl	__aeabi_dadd
 380              	.LVL33:
 102:Core/Src/main.c **** }
 381              		.loc 1 102 3 is_stmt 1 view .LVU79
 102:Core/Src/main.c **** }
 382              		.loc 1 102 10 is_stmt 0 view .LVU80
 383 008e FFF7FEFF 		bl	lround
 384              	.LVL34:
 103:Core/Src/main.c **** 
 385              		.loc 1 103 1 view .LVU81
 386 0092 05B0     		add	sp, sp, #20
 387              	.LVL35:
 103:Core/Src/main.c **** 
 388              		.loc 1 103 1 view .LVU82
 389              		@ sp needed
 390              	.LVL36:
 103:Core/Src/main.c **** 
 391              		.loc 1 103 1 view .LVU83
 392 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 393              	.L13:
 394 0096 C046     		.align	2
 395              	.L12:
 396 0098 0000F03F 		.word	1072693248
 397 009c 182D4454 		.word	1413754136
 398 00a0 FB211940 		.word	1075388923
 399              		.cfi_endproc
 400              	.LFE347:
 402              		.section	.text.correct,"ax",%progbits
 403              		.align	1
 404              		.global	correct
 405              		.syntax unified
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 15


 406              		.code	16
 407              		.thumb_func
 409              	correct:
 410              	.LVL37:
 411              	.LFB348:
 106:Core/Src/main.c ****   if (val < 0) { return (uint16_t)0; }
 412              		.loc 1 106 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 107:Core/Src/main.c ****   if (val > 5000) { return (uint16_t)5000; }
 417              		.loc 1 107 3 view .LVU85
 107:Core/Src/main.c ****   if (val > 5000) { return (uint16_t)5000; }
 418              		.loc 1 107 6 is_stmt 0 view .LVU86
 419 0000 0028     		cmp	r0, #0
 420 0002 04DB     		blt	.L16
 108:Core/Src/main.c ****   return val;
 421              		.loc 1 108 3 is_stmt 1 view .LVU87
 108:Core/Src/main.c ****   return val;
 422              		.loc 1 108 6 is_stmt 0 view .LVU88
 423 0004 044B     		ldr	r3, .L18
 424 0006 9842     		cmp	r0, r3
 425 0008 03DC     		bgt	.L17
 109:Core/Src/main.c **** }
 426              		.loc 1 109 3 is_stmt 1 view .LVU89
 109:Core/Src/main.c **** }
 427              		.loc 1 109 10 is_stmt 0 view .LVU90
 428 000a 80B2     		uxth	r0, r0
 429              	.LVL38:
 430              	.L15:
 110:Core/Src/main.c **** 
 431              		.loc 1 110 1 view .LVU91
 432              		@ sp needed
 433 000c 7047     		bx	lr
 434              	.LVL39:
 435              	.L16:
 107:Core/Src/main.c ****   if (val > 5000) { return (uint16_t)5000; }
 436              		.loc 1 107 25 discriminator 1 view .LVU92
 437 000e 0020     		movs	r0, #0
 438              	.LVL40:
 107:Core/Src/main.c ****   if (val > 5000) { return (uint16_t)5000; }
 439              		.loc 1 107 25 discriminator 1 view .LVU93
 440 0010 FCE7     		b	.L15
 441              	.LVL41:
 442              	.L17:
 108:Core/Src/main.c ****   return val;
 443              		.loc 1 108 28 discriminator 1 view .LVU94
 444 0012 0148     		ldr	r0, .L18
 445              	.LVL42:
 108:Core/Src/main.c ****   return val;
 446              		.loc 1 108 28 discriminator 1 view .LVU95
 447 0014 FAE7     		b	.L15
 448              	.L19:
 449 0016 C046     		.align	2
 450              	.L18:
 451 0018 88130000 		.word	5000
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 16


 452              		.cfi_endproc
 453              	.LFE348:
 455              		.section	.rodata.HAL_ADC_ConvCpltCallback.str1.4,"aMS",%progbits,1
 456              		.align	2
 457              	.LC5:
 458 0000 25752C25 		.ascii	"%u,%u,%u\015\012\000"
 458      752C2575 
 458      0D0A00
 459              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 460              		.align	1
 461              		.global	HAL_ADC_ConvCpltCallback
 462              		.syntax unified
 463              		.code	16
 464              		.thumb_func
 466              	HAL_ADC_ConvCpltCallback:
 467              	.LVL43:
 468              	.LFB355:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 352:Core/Src/main.c **** {
 469              		.loc 1 352 1 is_stmt 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 64
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		.loc 1 352 1 is_stmt 0 view .LVU97
 474 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 475              		.cfi_def_cfa_offset 20
 476              		.cfi_offset 4, -20
 477              		.cfi_offset 5, -16
 478              		.cfi_offset 6, -12
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 CE46     		mov	lr, r9
 482 0004 4746     		mov	r7, r8
 483 0006 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 28
 485              		.cfi_offset 8, -28
 486              		.cfi_offset 9, -24
 487 0008 93B0     		sub	sp, sp, #76
 488              		.cfi_def_cfa_offset 104
 353:Core/Src/main.c ****   if (hadc->Instance == ADC1)
 489              		.loc 1 353 3 is_stmt 1 view .LVU98
 490              		.loc 1 353 11 is_stmt 0 view .LVU99
 491 000a 0268     		ldr	r2, [r0]
 492              		.loc 1 353 6 view .LVU100
 493 000c 274B     		ldr	r3, .L25
 494 000e 9A42     		cmp	r2, r3
 495 0010 04D0     		beq	.L23
 496              	.LVL44:
 497              	.L20:
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     char msg[64];
 356:Core/Src/main.c ****     uint16_t analog_val = adc_buf[0];
 357:Core/Src/main.c ****     uint16_t analog_mv = toMilliVolt(analog_val);
 358:Core/Src/main.c ****     uint16_t noisy_val = correct(analog_mv + gaussian_noise(0.0, 66.7));
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 17


 359:Core/Src/main.c ****     GPIO_PinState digital_val = HAL_GPIO_ReadPin(HALL_DIGITAL_GPIO_Port, HALL_DIGITAL_Pin);
 360:Core/Src/main.c ****     sum += noisy_val - filter_buf[counter];
 361:Core/Src/main.c ****     filter_out = sum / FILTER_LEN;
 362:Core/Src/main.c ****     filter_buf[counter] = noisy_val;
 363:Core/Src/main.c ****     counter++;
 364:Core/Src/main.c ****     if (counter == FILTER_LEN) { counter = 0; }
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****     // La conversione in millivolt viene effettuata perch√© altrimenti renderebbe il grafico
 367:Core/Src/main.c ****     // molto meno fluido, √® comunque possibile utilizzare i valori interi e modificare lo script
 368:Core/Src/main.c ****     // di Python per far avvenire tutto nel mondo dei numeri interi, ma non consiglio :P
 369:Core/Src/main.c ****     snprintf(msg, ADC_BUF_LEN, "%u,%u,%u\r\n", noisy_val, filter_out, digital_val);
 370:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c **** }
 498              		.loc 1 372 1 view .LVU101
 499 0012 13B0     		add	sp, sp, #76
 500              		@ sp needed
 501 0014 C0BC     		pop	{r6, r7}
 502 0016 B946     		mov	r9, r7
 503 0018 B046     		mov	r8, r6
 504 001a F0BD     		pop	{r4, r5, r6, r7, pc}
 505              	.LVL45:
 506              	.L23:
 507              	.LBB9:
 355:Core/Src/main.c ****     uint16_t analog_val = adc_buf[0];
 508              		.loc 1 355 5 is_stmt 1 view .LVU102
 356:Core/Src/main.c ****     uint16_t analog_mv = toMilliVolt(analog_val);
 509              		.loc 1 356 5 view .LVU103
 356:Core/Src/main.c ****     uint16_t analog_mv = toMilliVolt(analog_val);
 510              		.loc 1 356 14 is_stmt 0 view .LVU104
 511 001c 244B     		ldr	r3, .L25+4
 512 001e 1888     		ldrh	r0, [r3]
 513              	.LVL46:
 357:Core/Src/main.c ****     uint16_t noisy_val = correct(analog_mv + gaussian_noise(0.0, 66.7));
 514              		.loc 1 357 5 is_stmt 1 view .LVU105
 357:Core/Src/main.c ****     uint16_t noisy_val = correct(analog_mv + gaussian_noise(0.0, 66.7));
 515              		.loc 1 357 26 is_stmt 0 view .LVU106
 516 0020 FFF7FEFF 		bl	toMilliVolt
 517              	.LVL47:
 357:Core/Src/main.c ****     uint16_t noisy_val = correct(analog_mv + gaussian_noise(0.0, 66.7));
 518              		.loc 1 357 26 view .LVU107
 519 0024 0400     		movs	r4, r0
 520              	.LVL48:
 358:Core/Src/main.c ****     GPIO_PinState digital_val = HAL_GPIO_ReadPin(HALL_DIGITAL_GPIO_Port, HALL_DIGITAL_Pin);
 521              		.loc 1 358 5 is_stmt 1 view .LVU108
 358:Core/Src/main.c ****     GPIO_PinState digital_val = HAL_GPIO_ReadPin(HALL_DIGITAL_GPIO_Port, HALL_DIGITAL_Pin);
 522              		.loc 1 358 46 is_stmt 0 view .LVU109
 523 0026 234A     		ldr	r2, .L25+8
 524 0028 234B     		ldr	r3, .L25+12
 525 002a 0020     		movs	r0, #0
 526 002c 0021     		movs	r1, #0
 527 002e FFF7FEFF 		bl	gaussian_noise
 528              	.LVL49:
 358:Core/Src/main.c ****     GPIO_PinState digital_val = HAL_GPIO_ReadPin(HALL_DIGITAL_GPIO_Port, HALL_DIGITAL_Pin);
 529              		.loc 1 358 26 discriminator 1 view .LVU110
 530 0032 2018     		adds	r0, r4, r0
 531 0034 FFF7FEFF 		bl	correct
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 18


 532              	.LVL50:
 533 0038 0500     		movs	r5, r0
 534              	.LVL51:
 359:Core/Src/main.c ****     sum += noisy_val - filter_buf[counter];
 535              		.loc 1 359 5 is_stmt 1 view .LVU111
 359:Core/Src/main.c ****     sum += noisy_val - filter_buf[counter];
 536              		.loc 1 359 33 is_stmt 0 view .LVU112
 537 003a A020     		movs	r0, #160
 538 003c 0121     		movs	r1, #1
 539 003e C005     		lsls	r0, r0, #23
 540 0040 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 541              	.LVL52:
 542 0044 8046     		mov	r8, r0
 543              	.LVL53:
 360:Core/Src/main.c ****     filter_out = sum / FILTER_LEN;
 544              		.loc 1 360 5 is_stmt 1 view .LVU113
 360:Core/Src/main.c ****     filter_out = sum / FILTER_LEN;
 545              		.loc 1 360 34 is_stmt 0 view .LVU114
 546 0046 1D4F     		ldr	r7, .L25+16
 547 0048 3C88     		ldrh	r4, [r7]
 548              	.LVL54:
 360:Core/Src/main.c ****     filter_out = sum / FILTER_LEN;
 549              		.loc 1 360 34 view .LVU115
 550 004a 1D4B     		ldr	r3, .L25+20
 551 004c 6200     		lsls	r2, r4, #1
 552 004e 9146     		mov	r9, r2
 553 0050 1E00     		movs	r6, r3
 554 0052 D05A     		ldrh	r0, [r2, r3]
 360:Core/Src/main.c ****     filter_out = sum / FILTER_LEN;
 555              		.loc 1 360 22 view .LVU116
 556 0054 281A     		subs	r0, r5, r0
 360:Core/Src/main.c ****     filter_out = sum / FILTER_LEN;
 557              		.loc 1 360 9 view .LVU117
 558 0056 1B4B     		ldr	r3, .L25+24
 559 0058 1A68     		ldr	r2, [r3]
 560 005a 8018     		adds	r0, r0, r2
 561 005c 1860     		str	r0, [r3]
 361:Core/Src/main.c ****     filter_buf[counter] = noisy_val;
 562              		.loc 1 361 5 is_stmt 1 view .LVU118
 361:Core/Src/main.c ****     filter_buf[counter] = noisy_val;
 563              		.loc 1 361 22 is_stmt 0 view .LVU119
 564 005e 9621     		movs	r1, #150
 565 0060 FFF7FEFF 		bl	__aeabi_uidiv
 566              	.LVL55:
 361:Core/Src/main.c ****     filter_buf[counter] = noisy_val;
 567              		.loc 1 361 16 view .LVU120
 568 0064 184B     		ldr	r3, .L25+28
 569 0066 1880     		strh	r0, [r3]
 362:Core/Src/main.c ****     counter++;
 570              		.loc 1 362 5 is_stmt 1 view .LVU121
 362:Core/Src/main.c ****     counter++;
 571              		.loc 1 362 25 is_stmt 0 view .LVU122
 572 0068 4B46     		mov	r3, r9
 573 006a 9D53     		strh	r5, [r3, r6]
 363:Core/Src/main.c ****     if (counter == FILTER_LEN) { counter = 0; }
 574              		.loc 1 363 5 is_stmt 1 view .LVU123
 363:Core/Src/main.c ****     if (counter == FILTER_LEN) { counter = 0; }
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 19


 575              		.loc 1 363 12 is_stmt 0 view .LVU124
 576 006c 0134     		adds	r4, r4, #1
 577 006e A2B2     		uxth	r2, r4
 578 0070 3A80     		strh	r2, [r7]
 364:Core/Src/main.c **** 
 579              		.loc 1 364 5 is_stmt 1 view .LVU125
 364:Core/Src/main.c **** 
 580              		.loc 1 364 8 is_stmt 0 view .LVU126
 581 0072 962A     		cmp	r2, #150
 582 0074 16D0     		beq	.L24
 583              	.L22:
 369:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 584              		.loc 1 369 5 is_stmt 1 view .LVU127
 585 0076 154A     		ldr	r2, .L25+32
 586 0078 02AC     		add	r4, sp, #8
 587 007a 4346     		mov	r3, r8
 588 007c 0193     		str	r3, [sp, #4]
 589 007e 0104     		lsls	r1, r0, #16
 590 0080 090C     		lsrs	r1, r1, #16
 591 0082 0091     		str	r1, [sp]
 592 0084 2B00     		movs	r3, r5
 593 0086 4021     		movs	r1, #64
 594 0088 2000     		movs	r0, r4
 595 008a FFF7FEFF 		bl	snprintf
 596              	.LVL56:
 370:Core/Src/main.c ****   }
 597              		.loc 1 370 5 view .LVU128
 370:Core/Src/main.c ****   }
 598              		.loc 1 370 47 is_stmt 0 view .LVU129
 599 008e 2000     		movs	r0, r4
 600 0090 FFF7FEFF 		bl	strlen
 601              	.LVL57:
 370:Core/Src/main.c ****   }
 602              		.loc 1 370 5 discriminator 1 view .LVU130
 603 0094 0123     		movs	r3, #1
 604 0096 82B2     		uxth	r2, r0
 605 0098 0D48     		ldr	r0, .L25+36
 606 009a 5B42     		rsbs	r3, r3, #0
 607 009c 2100     		movs	r1, r4
 608 009e FFF7FEFF 		bl	HAL_UART_Transmit
 609              	.LVL58:
 610              	.LBE9:
 611              		.loc 1 372 1 view .LVU131
 612 00a2 B6E7     		b	.L20
 613              	.L24:
 614              	.LBB10:
 364:Core/Src/main.c **** 
 615              		.loc 1 364 34 is_stmt 1 discriminator 1 view .LVU132
 364:Core/Src/main.c **** 
 616              		.loc 1 364 42 is_stmt 0 discriminator 1 view .LVU133
 617 00a4 0022     		movs	r2, #0
 618 00a6 3A80     		strh	r2, [r7]
 619 00a8 E5E7     		b	.L22
 620              	.L26:
 621 00aa C046     		.align	2
 622              	.L25:
 623 00ac 00240140 		.word	1073816576
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 20


 624 00b0 00000000 		.word	adc_buf
 625 00b4 CDCCCCCC 		.word	-858993459
 626 00b8 CCAC5040 		.word	1079028940
 627 00bc 00000000 		.word	counter
 628 00c0 00000000 		.word	filter_buf
 629 00c4 00000000 		.word	sum
 630 00c8 00000000 		.word	filter_out
 631 00cc 00000000 		.word	.LC5
 632 00d0 00000000 		.word	huart2
 633              	.LBE10:
 634              		.cfi_endproc
 635              	.LFE355:
 637              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 638              		.align	2
 639              	.LC8:
 640 0000 5B455252 		.ascii	"[ERROR]\000"
 640      4F525D00 
 641              		.section	.text.Error_Handler,"ax",%progbits
 642              		.align	1
 643              		.global	Error_Handler
 644              		.syntax unified
 645              		.code	16
 646              		.thumb_func
 648              	Error_Handler:
 649              	.LFB356:
 373:Core/Src/main.c **** 
 374:Core/Src/main.c **** /*
 375:Core/Src/main.c **** void HAL_GPIO_EXTI_Rising_Callback(uint16_t GPIO_Pin)
 376:Core/Src/main.c **** {
 377:Core/Src/main.c ****   if (GPIO_Pin == HALL_DIGITAL_Pin)
 378:Core/Src/main.c ****   {
 379:Core/Src/main.c ****     GPIO_PinState state = HAL_GPIO_ReadPin(HALL_DIGITAL_GPIO_Port, HALL_DIGITAL_Pin);
 380:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 381:Core/Src/main.c ****     char msg[64];
 382:Core/Src/main.c ****     snprintf(msg, sizeof(msg), "Rising edge, state: %d\r\n", state);
 383:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 384:Core/Src/main.c ****   }
 385:Core/Src/main.c **** }
 386:Core/Src/main.c **** */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** /*
 389:Core/Src/main.c **** void HAL_GPIO_EXTI_Falling_Callback(uint16_t GPIO_Pin)
 390:Core/Src/main.c **** {
 391:Core/Src/main.c ****   if (GPIO_Pin == HALL_DIGITAL_Pin)
 392:Core/Src/main.c ****   {
 393:Core/Src/main.c ****     GPIO_PinState state = HAL_GPIO_ReadPin(HALL_DIGITAL_GPIO_Port, HALL_DIGITAL_Pin);
 394:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 395:Core/Src/main.c ****     char msg[64];
 396:Core/Src/main.c ****     snprintf(msg, sizeof(msg), "Falling edge, state: %d\r\n", state);
 397:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 398:Core/Src/main.c ****   }
 399:Core/Src/main.c **** } 
 400:Core/Src/main.c **** */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** /* USER CODE END 4 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** /**
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 21


 405:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 406:Core/Src/main.c ****   * @retval None
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c **** void Error_Handler(void)
 409:Core/Src/main.c **** {
 650              		.loc 1 409 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ Volatile: function does not return.
 653              		@ args = 0, pretend = 0, frame = 8
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655 0000 10B5     		push	{r4, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 4, -8
 658              		.cfi_offset 14, -4
 659 0002 82B0     		sub	sp, sp, #8
 660              		.cfi_def_cfa_offset 16
 410:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 411:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 412:Core/Src/main.c ****   __disable_irq();
 661              		.loc 1 412 3 view .LVU135
 662              	.LBB11:
 663              	.LBI11:
 664              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 22


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 23


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 24


 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 25


 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 26


 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 27


 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 28


 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 29


 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 30


 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 31


 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 32


 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 33


 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 34


 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 35


 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 36


 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 37


 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 38


 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 665              		.loc 2 960 27 view .LVU136
 666              	.LBB12:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 667              		.loc 2 962 3 view .LVU137
 668              		.syntax divided
 669              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 670 0004 72B6     		cpsid i
 671              	@ 0 "" 2
 672              		.thumb
 673              		.syntax unified
 674              	.L28:
 675              	.LBE12:
 676              	.LBE11:
 413:Core/Src/main.c ****   while (1)
 677              		.loc 1 413 3 view .LVU138
 678              	.LBB13:
 414:Core/Src/main.c ****   {
 415:Core/Src/main.c ****     char msg[] = "[ERROR]";
 679              		.loc 1 415 5 view .LVU139
 680              		.loc 1 415 10 is_stmt 0 view .LVU140
 681 0006 074B     		ldr	r3, .L29
 682 0008 6A46     		mov	r2, sp
 683 000a 03CB     		ldmia	r3!, {r0, r1}
 684 000c 03C2     		stmia	r2!, {r0, r1}
 416:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 685              		.loc 1 416 5 is_stmt 1 view .LVU141
 686              		.loc 1 416 47 is_stmt 0 view .LVU142
 687 000e 6846     		mov	r0, sp
 688 0010 FFF7FEFF 		bl	strlen
 689              	.LVL59:
 690              		.loc 1 416 5 discriminator 1 view .LVU143
 691 0014 0123     		movs	r3, #1
 692 0016 82B2     		uxth	r2, r0
 693 0018 0348     		ldr	r0, .L29+4
 694 001a 5B42     		rsbs	r3, r3, #0
 695 001c 6946     		mov	r1, sp
 696 001e FFF7FEFF 		bl	HAL_UART_Transmit
 697              	.LVL60:
 698              	.LBE13:
 413:Core/Src/main.c ****   while (1)
 699              		.loc 1 413 9 is_stmt 1 view .LVU144
 700 0022 F0E7     		b	.L28
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 39


 701              	.L30:
 702              		.align	2
 703              	.L29:
 704 0024 00000000 		.word	.LC8
 705 0028 00000000 		.word	huart2
 706              		.cfi_endproc
 707              	.LFE356:
 709              		.section	.text.MX_ADC1_Init,"ax",%progbits
 710              		.align	1
 711              		.syntax unified
 712              		.code	16
 713              		.thumb_func
 715              	MX_ADC1_Init:
 716              	.LFB351:
 219:Core/Src/main.c **** 
 717              		.loc 1 219 1 view -0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 16
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721 0000 00B5     		push	{lr}
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 14, -4
 724 0002 85B0     		sub	sp, sp, #20
 725              		.cfi_def_cfa_offset 24
 225:Core/Src/main.c **** 
 726              		.loc 1 225 3 view .LVU146
 225:Core/Src/main.c **** 
 727              		.loc 1 225 26 is_stmt 0 view .LVU147
 728 0004 0C22     		movs	r2, #12
 729 0006 0021     		movs	r1, #0
 730 0008 01A8     		add	r0, sp, #4
 731 000a FFF7FEFF 		bl	memset
 732              	.LVL61:
 233:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 733              		.loc 1 233 3 is_stmt 1 view .LVU148
 233:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 734              		.loc 1 233 18 is_stmt 0 view .LVU149
 735 000e 1848     		ldr	r0, .L36
 736 0010 184B     		ldr	r3, .L36+4
 737 0012 0360     		str	r3, [r0]
 234:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 738              		.loc 1 234 3 is_stmt 1 view .LVU150
 234:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 739              		.loc 1 234 29 is_stmt 0 view .LVU151
 740 0014 8023     		movs	r3, #128
 741 0016 DB05     		lsls	r3, r3, #23
 742 0018 4360     		str	r3, [r0, #4]
 235:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 743              		.loc 1 235 3 is_stmt 1 view .LVU152
 235:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 744              		.loc 1 235 25 is_stmt 0 view .LVU153
 745 001a 0023     		movs	r3, #0
 746 001c 8360     		str	r3, [r0, #8]
 236:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_SEQ_FIXED;
 747              		.loc 1 236 3 is_stmt 1 view .LVU154
 236:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_SEQ_FIXED;
 748              		.loc 1 236 24 is_stmt 0 view .LVU155
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 40


 749 001e C360     		str	r3, [r0, #12]
 237:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 750              		.loc 1 237 3 is_stmt 1 view .LVU156
 237:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 751              		.loc 1 237 27 is_stmt 0 view .LVU157
 752 0020 8022     		movs	r2, #128
 753 0022 1206     		lsls	r2, r2, #24
 754 0024 0261     		str	r2, [r0, #16]
 238:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 755              		.loc 1 238 3 is_stmt 1 view .LVU158
 238:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 756              		.loc 1 238 27 is_stmt 0 view .LVU159
 757 0026 0422     		movs	r2, #4
 758 0028 4261     		str	r2, [r0, #20]
 239:Core/Src/main.c ****   hadc1.Init.LowPowerAutoPowerOff = DISABLE;
 759              		.loc 1 239 3 is_stmt 1 view .LVU160
 239:Core/Src/main.c ****   hadc1.Init.LowPowerAutoPowerOff = DISABLE;
 760              		.loc 1 239 31 is_stmt 0 view .LVU161
 761 002a 0376     		strb	r3, [r0, #24]
 240:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 762              		.loc 1 240 3 is_stmt 1 view .LVU162
 240:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 763              		.loc 1 240 35 is_stmt 0 view .LVU163
 764 002c 4376     		strb	r3, [r0, #25]
 241:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 765              		.loc 1 241 3 is_stmt 1 view .LVU164
 241:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 766              		.loc 1 241 33 is_stmt 0 view .LVU165
 767 002e 033A     		subs	r2, r2, #3
 768 0030 8276     		strb	r2, [r0, #26]
 242:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 769              		.loc 1 242 3 is_stmt 1 view .LVU166
 242:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 770              		.loc 1 242 30 is_stmt 0 view .LVU167
 771 0032 C261     		str	r2, [r0, #28]
 243:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 772              		.loc 1 243 3 is_stmt 1 view .LVU168
 243:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 773              		.loc 1 243 31 is_stmt 0 view .LVU169
 774 0034 4362     		str	r3, [r0, #36]
 244:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 775              		.loc 1 244 3 is_stmt 1 view .LVU170
 244:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 776              		.loc 1 244 35 is_stmt 0 view .LVU171
 777 0036 8362     		str	r3, [r0, #40]
 245:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 778              		.loc 1 245 3 is_stmt 1 view .LVU172
 245:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 779              		.loc 1 245 36 is_stmt 0 view .LVU173
 780 0038 2C21     		movs	r1, #44
 781 003a 4254     		strb	r2, [r0, r1]
 246:Core/Src/main.c ****   hadc1.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 782              		.loc 1 246 3 is_stmt 1 view .LVU174
 246:Core/Src/main.c ****   hadc1.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_1CYCLE_5;
 783              		.loc 1 246 22 is_stmt 0 view .LVU175
 784 003c 0363     		str	r3, [r0, #48]
 247:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 41


 785              		.loc 1 247 3 is_stmt 1 view .LVU176
 247:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 786              		.loc 1 247 34 is_stmt 0 view .LVU177
 787 003e 4363     		str	r3, [r0, #52]
 248:Core/Src/main.c ****   hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 788              		.loc 1 248 3 is_stmt 1 view .LVU178
 248:Core/Src/main.c ****   hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 789              		.loc 1 248 31 is_stmt 0 view .LVU179
 790 0040 3B32     		adds	r2, r2, #59
 791 0042 8354     		strb	r3, [r0, r2]
 249:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 792              		.loc 1 249 3 is_stmt 1 view .LVU180
 249:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 793              		.loc 1 249 35 is_stmt 0 view .LVU181
 794 0044 C364     		str	r3, [r0, #76]
 250:Core/Src/main.c ****   {
 795              		.loc 1 250 3 is_stmt 1 view .LVU182
 250:Core/Src/main.c ****   {
 796              		.loc 1 250 7 is_stmt 0 view .LVU183
 797 0046 FFF7FEFF 		bl	HAL_ADC_Init
 798              	.LVL62:
 250:Core/Src/main.c ****   {
 799              		.loc 1 250 6 discriminator 1 view .LVU184
 800 004a 0028     		cmp	r0, #0
 801 004c 0BD1     		bne	.L34
 257:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 802              		.loc 1 257 3 is_stmt 1 view .LVU185
 257:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 803              		.loc 1 257 19 is_stmt 0 view .LVU186
 804 004e 01A9     		add	r1, sp, #4
 805 0050 094B     		ldr	r3, .L36+8
 806 0052 0193     		str	r3, [sp, #4]
 258:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 807              		.loc 1 258 3 is_stmt 1 view .LVU187
 258:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 808              		.loc 1 258 16 is_stmt 0 view .LVU188
 809 0054 0123     		movs	r3, #1
 810 0056 4B60     		str	r3, [r1, #4]
 259:Core/Src/main.c ****   {
 811              		.loc 1 259 3 is_stmt 1 view .LVU189
 259:Core/Src/main.c ****   {
 812              		.loc 1 259 7 is_stmt 0 view .LVU190
 813 0058 0548     		ldr	r0, .L36
 814 005a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 815              	.LVL63:
 259:Core/Src/main.c ****   {
 816              		.loc 1 259 6 discriminator 1 view .LVU191
 817 005e 0028     		cmp	r0, #0
 818 0060 03D1     		bne	.L35
 267:Core/Src/main.c **** 
 819              		.loc 1 267 1 view .LVU192
 820 0062 05B0     		add	sp, sp, #20
 821              		@ sp needed
 822 0064 00BD     		pop	{pc}
 823              	.L34:
 252:Core/Src/main.c ****   }
 824              		.loc 1 252 5 is_stmt 1 view .LVU193
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 42


 825 0066 FFF7FEFF 		bl	Error_Handler
 826              	.LVL64:
 827              	.L35:
 261:Core/Src/main.c ****   }
 828              		.loc 1 261 5 view .LVU194
 829 006a FFF7FEFF 		bl	Error_Handler
 830              	.LVL65:
 831              	.L37:
 832 006e C046     		.align	2
 833              	.L36:
 834 0070 00000000 		.word	hadc1
 835 0074 00240140 		.word	1073816576
 836 0078 02000004 		.word	67108866
 837              		.cfi_endproc
 838              	.LFE351:
 840              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 841              		.align	1
 842              		.syntax unified
 843              		.code	16
 844              		.thumb_func
 846              	MX_USART2_UART_Init:
 847              	.LFB352:
 275:Core/Src/main.c **** 
 848              		.loc 1 275 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852 0000 10B5     		push	{r4, lr}
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 4, -8
 855              		.cfi_offset 14, -4
 284:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 856              		.loc 1 284 3 view .LVU196
 284:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 857              		.loc 1 284 19 is_stmt 0 view .LVU197
 858 0002 0C48     		ldr	r0, .L41
 859 0004 0C4B     		ldr	r3, .L41+4
 860 0006 0360     		str	r3, [r0]
 285:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 861              		.loc 1 285 3 is_stmt 1 view .LVU198
 285:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 862              		.loc 1 285 24 is_stmt 0 view .LVU199
 863 0008 E123     		movs	r3, #225
 864 000a 5B02     		lsls	r3, r3, #9
 865 000c 4360     		str	r3, [r0, #4]
 286:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 866              		.loc 1 286 3 is_stmt 1 view .LVU200
 286:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 867              		.loc 1 286 26 is_stmt 0 view .LVU201
 868 000e 0023     		movs	r3, #0
 869 0010 8360     		str	r3, [r0, #8]
 287:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 870              		.loc 1 287 3 is_stmt 1 view .LVU202
 287:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 871              		.loc 1 287 24 is_stmt 0 view .LVU203
 872 0012 C360     		str	r3, [r0, #12]
 288:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 43


 873              		.loc 1 288 3 is_stmt 1 view .LVU204
 288:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 874              		.loc 1 288 22 is_stmt 0 view .LVU205
 875 0014 0361     		str	r3, [r0, #16]
 289:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 876              		.loc 1 289 3 is_stmt 1 view .LVU206
 289:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 877              		.loc 1 289 20 is_stmt 0 view .LVU207
 878 0016 0C22     		movs	r2, #12
 879 0018 4261     		str	r2, [r0, #20]
 290:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 880              		.loc 1 290 3 is_stmt 1 view .LVU208
 290:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 881              		.loc 1 290 25 is_stmt 0 view .LVU209
 882 001a 8361     		str	r3, [r0, #24]
 291:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 883              		.loc 1 291 3 is_stmt 1 view .LVU210
 291:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 884              		.loc 1 291 28 is_stmt 0 view .LVU211
 885 001c C361     		str	r3, [r0, #28]
 292:Core/Src/main.c ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 886              		.loc 1 292 3 is_stmt 1 view .LVU212
 292:Core/Src/main.c ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 887              		.loc 1 292 30 is_stmt 0 view .LVU213
 888 001e 0362     		str	r3, [r0, #32]
 293:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 889              		.loc 1 293 3 is_stmt 1 view .LVU214
 293:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 890              		.loc 1 293 30 is_stmt 0 view .LVU215
 891 0020 4362     		str	r3, [r0, #36]
 294:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 892              		.loc 1 294 3 is_stmt 1 view .LVU216
 294:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 893              		.loc 1 294 38 is_stmt 0 view .LVU217
 894 0022 8362     		str	r3, [r0, #40]
 295:Core/Src/main.c ****   {
 895              		.loc 1 295 3 is_stmt 1 view .LVU218
 295:Core/Src/main.c ****   {
 896              		.loc 1 295 7 is_stmt 0 view .LVU219
 897 0024 FFF7FEFF 		bl	HAL_UART_Init
 898              	.LVL66:
 295:Core/Src/main.c ****   {
 899              		.loc 1 295 6 discriminator 1 view .LVU220
 900 0028 0028     		cmp	r0, #0
 901 002a 00D1     		bne	.L40
 303:Core/Src/main.c **** 
 902              		.loc 1 303 1 view .LVU221
 903              		@ sp needed
 904 002c 10BD     		pop	{r4, pc}
 905              	.L40:
 297:Core/Src/main.c ****   }
 906              		.loc 1 297 5 is_stmt 1 view .LVU222
 907 002e FFF7FEFF 		bl	Error_Handler
 908              	.LVL67:
 909              	.L42:
 910 0032 C046     		.align	2
 911              	.L41:
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 44


 912 0034 00000000 		.word	huart2
 913 0038 00440040 		.word	1073759232
 914              		.cfi_endproc
 915              	.LFE352:
 917              		.section	.text.SystemClock_Config,"ax",%progbits
 918              		.align	1
 919              		.global	SystemClock_Config
 920              		.syntax unified
 921              		.code	16
 922              		.thumb_func
 924              	SystemClock_Config:
 925              	.LFB350:
 182:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 926              		.loc 1 182 1 view -0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 48
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930 0000 10B5     		push	{r4, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 4, -8
 933              		.cfi_offset 14, -4
 934 0002 8CB0     		sub	sp, sp, #48
 935              		.cfi_def_cfa_offset 56
 183:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 936              		.loc 1 183 3 view .LVU224
 183:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 937              		.loc 1 183 22 is_stmt 0 view .LVU225
 938 0004 05AC     		add	r4, sp, #20
 939 0006 1C22     		movs	r2, #28
 940 0008 0021     		movs	r1, #0
 941 000a 2000     		movs	r0, r4
 942 000c FFF7FEFF 		bl	memset
 943              	.LVL68:
 184:Core/Src/main.c **** 
 944              		.loc 1 184 3 is_stmt 1 view .LVU226
 184:Core/Src/main.c **** 
 945              		.loc 1 184 22 is_stmt 0 view .LVU227
 946 0010 1422     		movs	r2, #20
 947 0012 0021     		movs	r1, #0
 948 0014 6846     		mov	r0, sp
 949 0016 FFF7FEFF 		bl	memset
 950              	.LVL69:
 186:Core/Src/main.c **** 
 951              		.loc 1 186 3 is_stmt 1 view .LVU228
 952 001a 1249     		ldr	r1, .L48
 953 001c 0B68     		ldr	r3, [r1]
 954 001e 0722     		movs	r2, #7
 955 0020 9343     		bics	r3, r2
 956 0022 063A     		subs	r2, r2, #6
 957 0024 1343     		orrs	r3, r2
 958 0026 0B60     		str	r3, [r1]
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 959              		.loc 1 191 3 view .LVU229
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 960              		.loc 1 191 36 is_stmt 0 view .LVU230
 961 0028 0592     		str	r2, [sp, #20]
 192:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 45


 962              		.loc 1 192 3 is_stmt 1 view .LVU231
 192:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 963              		.loc 1 192 30 is_stmt 0 view .LVU232
 964 002a 8023     		movs	r3, #128
 965 002c 5B02     		lsls	r3, r3, #9
 966 002e 0693     		str	r3, [sp, #24]
 193:Core/Src/main.c ****   {
 967              		.loc 1 193 3 is_stmt 1 view .LVU233
 193:Core/Src/main.c ****   {
 968              		.loc 1 193 7 is_stmt 0 view .LVU234
 969 0030 2000     		movs	r0, r4
 970 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 971              	.LVL70:
 193:Core/Src/main.c ****   {
 972              		.loc 1 193 6 discriminator 1 view .LVU235
 973 0036 0028     		cmp	r0, #0
 974 0038 0FD1     		bne	.L46
 200:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 975              		.loc 1 200 3 is_stmt 1 view .LVU236
 200:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 976              		.loc 1 200 31 is_stmt 0 view .LVU237
 977 003a 6846     		mov	r0, sp
 978 003c 0723     		movs	r3, #7
 979 003e 0093     		str	r3, [sp]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 980              		.loc 1 202 3 is_stmt 1 view .LVU238
 202:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 981              		.loc 1 202 34 is_stmt 0 view .LVU239
 982 0040 063B     		subs	r3, r3, #6
 983 0042 0193     		str	r3, [sp, #4]
 203:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 984              		.loc 1 203 3 is_stmt 1 view .LVU240
 203:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 985              		.loc 1 203 35 is_stmt 0 view .LVU241
 986 0044 0023     		movs	r3, #0
 987 0046 0293     		str	r3, [sp, #8]
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 988              		.loc 1 204 3 is_stmt 1 view .LVU242
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 989              		.loc 1 204 35 is_stmt 0 view .LVU243
 990 0048 0393     		str	r3, [sp, #12]
 205:Core/Src/main.c **** 
 991              		.loc 1 205 3 is_stmt 1 view .LVU244
 205:Core/Src/main.c **** 
 992              		.loc 1 205 36 is_stmt 0 view .LVU245
 993 004a 0493     		str	r3, [sp, #16]
 207:Core/Src/main.c ****   {
 994              		.loc 1 207 3 is_stmt 1 view .LVU246
 207:Core/Src/main.c ****   {
 995              		.loc 1 207 7 is_stmt 0 view .LVU247
 996 004c 0121     		movs	r1, #1
 997 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 998              	.LVL71:
 207:Core/Src/main.c ****   {
 999              		.loc 1 207 6 discriminator 1 view .LVU248
 1000 0052 0028     		cmp	r0, #0
 1001 0054 03D1     		bne	.L47
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 46


 211:Core/Src/main.c **** 
 1002              		.loc 1 211 1 view .LVU249
 1003 0056 0CB0     		add	sp, sp, #48
 1004              		@ sp needed
 1005 0058 10BD     		pop	{r4, pc}
 1006              	.L46:
 195:Core/Src/main.c ****   }
 1007              		.loc 1 195 5 is_stmt 1 view .LVU250
 1008 005a FFF7FEFF 		bl	Error_Handler
 1009              	.LVL72:
 1010              	.L47:
 209:Core/Src/main.c ****   }
 1011              		.loc 1 209 5 view .LVU251
 1012 005e FFF7FEFF 		bl	Error_Handler
 1013              	.LVL73:
 1014              	.L49:
 1015 0062 C046     		.align	2
 1016              	.L48:
 1017 0064 00200240 		.word	1073881088
 1018              		.cfi_endproc
 1019              	.LFE350:
 1021              		.section	.text.main,"ax",%progbits
 1022              		.align	1
 1023              		.global	main
 1024              		.syntax unified
 1025              		.code	16
 1026              		.thumb_func
 1028              	main:
 1029              	.LFB349:
 124:Core/Src/main.c **** 
 1030              		.loc 1 124 1 view -0
 1031              		.cfi_startproc
 1032              		@ Volatile: function does not return.
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035 0000 10B5     		push	{r4, lr}
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 4, -8
 1038              		.cfi_offset 14, -4
 133:Core/Src/main.c **** 
 1039              		.loc 1 133 3 view .LVU253
 1040 0002 FFF7FEFF 		bl	HAL_Init
 1041              	.LVL74:
 140:Core/Src/main.c **** 
 1042              		.loc 1 140 3 view .LVU254
 1043 0006 FFF7FEFF 		bl	SystemClock_Config
 1044              	.LVL75:
 147:Core/Src/main.c ****   MX_DMA_Init();
 1045              		.loc 1 147 3 view .LVU255
 1046 000a FFF7FEFF 		bl	MX_GPIO_Init
 1047              	.LVL76:
 148:Core/Src/main.c ****   MX_ADC1_Init();
 1048              		.loc 1 148 3 view .LVU256
 1049 000e FFF7FEFF 		bl	MX_DMA_Init
 1050              	.LVL77:
 149:Core/Src/main.c ****   MX_USART2_UART_Init();
 1051              		.loc 1 149 3 view .LVU257
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 47


 1052 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1053              	.LVL78:
 150:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1054              		.loc 1 150 3 view .LVU258
 1055 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 1056              	.LVL79:
 153:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc1);
 1057              		.loc 1 153 3 view .LVU259
 153:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc1);
 1058              		.loc 1 153 9 is_stmt 0 view .LVU260
 1059 001a 0020     		movs	r0, #0
 1060 001c FFF7FEFF 		bl	time
 1061              	.LVL80:
 153:Core/Src/main.c ****   HAL_ADCEx_Calibration_Start(&hadc1);
 1062              		.loc 1 153 3 discriminator 1 view .LVU261
 1063 0020 FFF7FEFF 		bl	srand
 1064              	.LVL81:
 154:Core/Src/main.c **** 
 1065              		.loc 1 154 3 is_stmt 1 view .LVU262
 1066 0024 084C     		ldr	r4, .L52
 1067 0026 2000     		movs	r0, r4
 1068 0028 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1069              	.LVL82:
 159:Core/Src/main.c **** 
 1070              		.loc 1 159 3 view .LVU263
 1071 002c 0020     		movs	r0, #0
 1072 002e FFF7FEFF 		bl	BSP_LED_Init
 1073              	.LVL83:
 162:Core/Src/main.c **** 
 1074              		.loc 1 162 3 view .LVU264
 1075 0032 0121     		movs	r1, #1
 1076 0034 0020     		movs	r0, #0
 1077 0036 FFF7FEFF 		bl	BSP_PB_Init
 1078              	.LVL84:
 166:Core/Src/main.c **** 
 1079              		.loc 1 166 3 view .LVU265
 1080 003a 0449     		ldr	r1, .L52+4
 1081 003c 4022     		movs	r2, #64
 1082 003e 2000     		movs	r0, r4
 1083 0040 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1084              	.LVL85:
 1085              	.L51:
 168:Core/Src/main.c ****   {
 1086              		.loc 1 168 3 view .LVU266
 173:Core/Src/main.c ****   /* USER CODE END 3 */
 1087              		.loc 1 173 3 view .LVU267
 168:Core/Src/main.c ****   {
 1088              		.loc 1 168 9 view .LVU268
 1089 0044 FEE7     		b	.L51
 1090              	.L53:
 1091 0046 C046     		.align	2
 1092              	.L52:
 1093 0048 00000000 		.word	hadc1
 1094 004c 00000000 		.word	adc_buf
 1095              		.cfi_endproc
 1096              	.LFE349:
 1098              		.global	sum
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 48


 1099              		.section	.bss.sum,"aw",%nobits
 1100              		.align	2
 1103              	sum:
 1104 0000 00000000 		.space	4
 1105              		.global	counter
 1106              		.section	.bss.counter,"aw",%nobits
 1107              		.align	1
 1110              	counter:
 1111 0000 0000     		.space	2
 1112              		.global	filter_buf
 1113              		.section	.bss.filter_buf,"aw",%nobits
 1114              		.align	2
 1117              	filter_buf:
 1118 0000 00000000 		.space	300
 1118      00000000 
 1118      00000000 
 1118      00000000 
 1118      00000000 
 1119              		.global	filter_out
 1120              		.section	.bss.filter_out,"aw",%nobits
 1121              		.align	1
 1124              	filter_out:
 1125 0000 0000     		.space	2
 1126              		.global	adc_buf
 1127              		.section	.bss.adc_buf,"aw",%nobits
 1128              		.align	2
 1131              	adc_buf:
 1132 0000 00000000 		.space	128
 1132      00000000 
 1132      00000000 
 1132      00000000 
 1132      00000000 
 1133              		.global	huart2
 1134              		.section	.bss.huart2,"aw",%nobits
 1135              		.align	2
 1138              	huart2:
 1139 0000 00000000 		.space	148
 1139      00000000 
 1139      00000000 
 1139      00000000 
 1139      00000000 
 1140              		.global	hdma_adc1
 1141              		.section	.bss.hdma_adc1,"aw",%nobits
 1142              		.align	2
 1145              	hdma_adc1:
 1146 0000 00000000 		.space	92
 1146      00000000 
 1146      00000000 
 1146      00000000 
 1146      00000000 
 1147              		.global	hadc1
 1148              		.section	.bss.hadc1,"aw",%nobits
 1149              		.align	2
 1152              	hadc1:
 1153 0000 00000000 		.space	100
 1153      00000000 
 1153      00000000 
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 49


 1153      00000000 
 1153      00000000 
 1154              		.text
 1155              	.Letext0:
 1156              		.file 3 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c031xx.h"
 1157              		.file 4 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 1158              		.file 5 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 1159              		.file 6 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c0xx.h"
 1160              		.file 7 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 1161              		.file 8 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_def.h"
 1162              		.file 9 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_rcc.h"
 1163              		.file 10 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_gpio.h"
 1164              		.file 11 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_dma.h"
 1165              		.file 12 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_adc.h"
 1166              		.file 13 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_uart.h"
 1167              		.file 14 "Drivers/BSP/STM32C0xx_Nucleo/stm32c0xx_nucleo.h"
 1168              		.file 15 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 1169              		.file 16 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 1170              		.file 17 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 1171              		.file 18 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_cortex.h"
 1172              		.file 19 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_adc_ex.h"
 1173              		.file 20 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 1174              		.file 21 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 1175              		.file 22 "/Users/killzyy/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 1176              		.file 23 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal.h"
 1177              		.file 24 "<built-in>"
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 50


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:19     .text.MX_GPIO_Init:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:113    .text.MX_GPIO_Init:00000054 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:118    .text.MX_DMA_Init:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:123    .text.MX_DMA_Init:00000000 MX_DMA_Init
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:168    .text.MX_DMA_Init:0000002c $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:173    .text.map:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:179    .text.map:00000000 map
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:226    .text.toMilliVolt:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:232    .text.toMilliVolt:00000000 toMilliVolt
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:261    .text.toMilliVolt:00000010 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:267    .text.gaussian_noise:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:273    .text.gaussian_noise:00000000 gaussian_noise
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:396    .text.gaussian_noise:00000098 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:403    .text.correct:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:409    .text.correct:00000000 correct
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:451    .text.correct:00000018 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:456    .rodata.HAL_ADC_ConvCpltCallback.str1.4:00000000 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:460    .text.HAL_ADC_ConvCpltCallback:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:466    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:623    .text.HAL_ADC_ConvCpltCallback:000000ac $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1131   .bss.adc_buf:00000000 adc_buf
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1110   .bss.counter:00000000 counter
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1117   .bss.filter_buf:00000000 filter_buf
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1103   .bss.sum:00000000 sum
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1124   .bss.filter_out:00000000 filter_out
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1138   .bss.huart2:00000000 huart2
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:638    .rodata.Error_Handler.str1.4:00000000 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:642    .text.Error_Handler:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:648    .text.Error_Handler:00000000 Error_Handler
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:704    .text.Error_Handler:00000024 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:710    .text.MX_ADC1_Init:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:715    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:834    .text.MX_ADC1_Init:00000070 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1152   .bss.hadc1:00000000 hadc1
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:841    .text.MX_USART2_UART_Init:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:846    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:912    .text.MX_USART2_UART_Init:00000034 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:918    .text.SystemClock_Config:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:924    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1017   .text.SystemClock_Config:00000064 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1022   .text.main:00000000 $t
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1028   .text.main:00000000 main
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1093   .text.main:00000048 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1100   .bss.sum:00000000 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1107   .bss.counter:00000000 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1114   .bss.filter_buf:00000000 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1121   .bss.filter_out:00000000 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1128   .bss.adc_buf:00000000 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1135   .bss.huart2:00000000 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1145   .bss.hdma_adc1:00000000 hdma_adc1
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1142   .bss.hdma_adc1:00000000 $d
/var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s:1149   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
ARM GAS  /var/folders/3q/0p8b__hx1wx8zj8b56q9glhc0000gn/T//cc0CPG47.s 			page 51


memset
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_idiv
rand
__aeabi_i2d
__aeabi_dadd
__aeabi_dmul
log
sqrt
cos
lround
HAL_GPIO_ReadPin
__aeabi_uidiv
snprintf
strlen
HAL_UART_Transmit
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
time
srand
HAL_ADCEx_Calibration_Start
BSP_LED_Init
BSP_PB_Init
HAL_ADC_Start_DMA
